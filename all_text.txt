




Responsive Properties - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookResponsive PropertiesThe following responsive properties are generally available for all elements. Containers also have responsive layout types that determine what additional layout properties its child elements have. These are outlined in the Containers section.Preset page width (page only)Custom: Default setting.Full width: Sets page width to 1200.Centered: Sets page width to 980.Mobile: Sets page width to 380.Width for UI Builder (page only)Set the width of the page while in UI Builder mode. This option is only available for responsive container layout types (i.e. not Fixed) since these containers at the page level will grow to fit whatever the screen size is in run-mode. In the Responsive tab, you will be able to drag the canvas to see how the layout reacts to different screen sizes.Parent container typeThe container layout type of the parent container. Clicking edit brings you to the property editor of the parent container.Keep element aspect ratio fixedCheck this box to maintain the current aspect ratio of the element as the parent container is resized. Only available for shapes, icons, and images.Make this element fixed-widthCheck this box if you want the element to maintain a fixed width as the parent container resizes. If not, you will need to specify a minimum and maximum width.WidthEnter the width of the element in pixels.Min widthSpecify the smallest width the element should be allowed to get as the parent container resizes. This value can be set in pixels or percentage relative to the parent container.Max widthSpecify the largest width the element should be allowed to get as the parent container resizes. This value can be set in pixels or percentage relative to the parent container. If left blank, the maximum width will default to infinite, which means it will stay as wide as the parent container.Note: Child elements will always try to grow to their max width, unless restricted by other elements or its parent container.Fit width to contentCheck this box to shrink this container to the width of the widest child element or its min width. Otherwise, the container will grow to its max width or the width of its parent container, whatever is smaller.Note: This setting is only available on container elements inside a parent container with a layout type of align to parent or row.Make this element fixed-heightCheck this box if you want the element to maintain a fixed height even if its content or parent container grows. If not, you will need to specify a minimum and maximum height.HeightEnter the height of the element in pixels.Min heightSpecify the smallest height you want the element to get in pixels or percentage relative to the parent container.Max heightSpecify the largest height you want the element to get in pixels or percentage relative to the parent container. If left blank, the maximum height will default to infinite, which means it will stay as tall as the parent container.Note: Child elements will always try to grow to their max height, unless restricted by other elements or its parent container.Fit height to contentCheck this box to shrink this container to the height of the tallest child element. Otherwise, the container will grow to its max height or height of its parent container, whatever is smaller.Note: This setting is only available on container elements inside a parent container with a layout type of align to parent or column.XEnter the x-axis position of the element’s top left corner relative to the parent container in pixels.YEnter the y-axis position of the element’s top left corner relative to the parent container in pixels.Collapse when hiddenCheck this box to collapse or remove the element from its parent container when the element is not visible. This will free up space for other elements to move (if applicable). If unchecked, the element will still be invisible, it will just continue taking up space in the parent element. This checkbox is the way to replicate hidden functionality from the legacy responsive engine. Allow vertical scrolling when content overflowsCheck this box to add a scrollbar to the group container when the content is longer than the max height of the group container.Group elements in a Fixed containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in a Fixed container. Learn more about fixed containers here.Group elements in a Row containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in a Row container. Learn more about Row containers here.Group elements in a Column containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in a Column container. Learn more about Column containers here.Group elements in an Align-to-Parent containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in an Align-to-Parent container. Learn more about Align-to-Parent containers here.Apply gap spacing between elementsCheck this box to specify gap spacing between child elements in your Row or Column container. If the container has a Row container, you will be able to specify both row-gap and column-gap values. If your container has a Column container layout, you will be able to specify row-gap values. Gap values will move the position of child elements accordingly and reduce the amount of available space to grow within the parent container - if the child elements are variable width or height.Note: Gap controls are supported by newer versions of most browsers with the exception of Internet Explorer. Refer to this guide to see if your users browsers are supported.Row gap (px)Specify a value in pixels. The row gap value defines the vertical distance between rows of child elements in a parent container. In a Row container layout, the row gap value defines a consistent distance between the first row of child elements as elements wrap to the next row. In a Column container layout, the row gap value defines a consistent distance between child elements as they are stacked vertically.Column gap (px)Specify a value in pixels. The column gap value defines the horizontal distance between child elements in a parent container and is only available in Row container layouts.PreviousStyling Properties (Legacy)NextResponsive Properties (Legacy)Last modified 8mo agoCopy linkOn this pagePreset page width (page only)Width for UI Builder (page only)Parent container typeKeep element aspect ratio fixedMake this element fixed-widthWidthMin widthMax widthFit width to contentMake this element fixed-heightHeightMin heightMax heightFit height to contentXYCollapse when hiddenAllow vertical scrolling when content overflowsGroup elements in a Fixed containerGroup elements in a Row containerGroup elements in a Column containerGroup elements in an Align-to-Parent containerApply gap spacing between elementsRow gap (px)Column gap (px)

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Chart.js - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookChart.jsThe Chart.js plugin adds a element that you can use to display a Line, Bar, Radar, Pie, or Doughnut chart. Line/Bar ChartThe Chart Element Plugin adds an element that displays numerical data in chart form. The data comes from the application database.Chart typeSelect the type of chart to display. Choose from Line, Bar, Radar, Pie, and Doughnut.Type of dataDefine the type of the list of things this chart will display. The type must have a field that is a number.Data sourceThis is the list to display in the chart. Typically, it will be the result of a search.Value expressionThis field defines how to calculate the Y value of the chart. It will use one of the number fields of the current type of thing.Label expressionThis field defines how to describe each data point. It will use one of the text fields of the current type of thing.Series 1 colorSelect the line color for the first series of data.Series 1 fill colorSelect the fill color for the first series of data.Show scaleCheck this box to show a scale in the background of the chart.Scale line colorSelect the line color for the background scale.Scale font colorSelect the font color.Show gridCheck this box to show a grid in the background of the chart.Grid line colorSelect the color for the grid lines.Show tooltipsCheck this box to reveal the value of a data point when the user hovers over the point.Customize tooltip number formattingCheck this box to control how the numbers in the tooltips are formatted.Hide the label from the tooltipsCheck this box to show only the tooltip value.Apply Bezier curveWhen checked, the chart will smooth the chart lines following a Bezier curve.Rotation animationWhen checked, the pie and doughnut charts will be animated when rendered.Fill the dataset with a colorCheck this box to fill the chart.Number typeSelect the type of number to use. Choose from Number, Currency, and Percentage.Decimal placeEnter the number of decimal places to use.Decimal separatorSelect which symbol to use as the decimal separator. Choose from period '.' or comma ','.Thousand separatorSelect which symbol to use as the thousand separator. Choose from period '.', space, and comma ','.Currency prefixPick here which symbol should be in front of the number.Use parentheses for negative numbersCheck this box to put parentheses around negative numbers.​SetupDraw a Line/Bar chart element on your page, then choose a chart type and type of data. For example, we might want to display our recent events, along with the number of people who attended. ​In this case, we can set our type of data to “Events” and search for our events. We can label our chart with the current point  ’s Name, a text field on our Event type, and set our value to the current point’s Attendees, a number field on our Event type. ​FAQHow can I display an aggregation? If you use the “:group by” operator on your chart’s data source, then you can chart aggregations rather than a number field on the related data type, for example, a count, sum, or average. Let’s say we have Events that span multiple days, and we want to chart the total number of attendees per event across those days. One option would be to search for events and group them by the event’s name. ​Then we can choose to add a new aggregation. In this case, we will want “Sum” to calculate our total attendees, and we’ll select “Attendees” as the field to add up as well. Now that we have done this, our “Type of data” will automatically update to “Grouping.” ​Now when we preview our application, we will see the sum of the attendees across several days rather than a total on an individual day.​PreviousBubble App ConnectorNextCircle Music PlayerLast modified 1yr agoCopy linkOn this pageLine/Bar ChartChart typeType of dataData sourceValue expressionLabel expressionSeries 1 colorSeries 1 fill colorShow scaleScale line colorScale font colorShow gridGrid line colorShow tooltipsCustomize tooltip number formattingHide the label from the tooltipsApply Bezier curveRotation animationFill the dataset with a colorNumber typeDecimal placeDecimal separatorThousand separatorCurrency prefixUse parentheses for negative numbersSetupFAQHow can I display an aggregation? 









Sub apps - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSub appsSub applicationsPlease refer to the "Sub apps" article.Push to sub applicationsThis button will initiate the process of pushing the current version of this (parent) app to all its sub apps. Please refer to the "Sub apps" article for more information.​​​​​​​​​​​​​​​PreviousCollaborationNextVersionsLast modified 1yr agoCopy linkOn this pageSub applicationsPush to sub applications








API Glossary - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorPlugins that connect to APIsAPI GlossaryTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAPI GlossaryThis section covers widely used API terminology.Help us improve this articleThis article is part of a significant update to the Bubble manual and your feedback is critical to our efforts to continuously enhance our written documentation.

We would greatly appreciate if you could take a moment to let us know your thoughts on the quality of it. Thank you for your support!

Give feedback on this article​​Authentication and authorizationAuthentication is the process of verifying the identity of a client sending an API request (who the client is). For example, the Bubble API can be set up to require a bearer token to prove the identity of the client trying to connect. This process of providing the credentials and the server verifies them is the authentication process.

Authorization is the process of determining what a client has access to after they have authenticated themselves. It is the mechanism by which an API can determine what a user or system is allowed to do once they have been authenticated. For example, after a client has authenticated themselves with the Bubble API, the API will check your app's Privacy API settings, Privacy Rules and other details to determine whether they have access to specific resources.In short: Authentication is the process of verifying who you are, while authorization is the process of verifying what you have access to.​Further reading:Article: Authenticating with the Bubble API
Article: Setting up Authentication in the API Connector
Article: The Data API and Privacy Rules
Article: The Workflow API and Privacy Rules​APIAPI stands for "Application Programming Interface" and it is a set of protocols, routines, and tools for allowing different software systems to communicate with each other.

Further reading:
Article: Introduction to APIs
Article: What is a RESTful API?​Client/ServerIn the context of an API call, the Client is the one that initiates the call and the server is the one to respond.

In the case of an incoming API request (The Data API or Workflow API) the system sending the request is the client and the Bubble server that hosts your app is the server.

In the case of outgoing API request (The API Connector) your Bubble app is the client and the system you are connecting with is the server.

Further reading:
Article: The Client/Server relationship​EndpointAn endpoint is a specific URL that an application can send requests to, to retrieve or manipulate data.

In the Bubble API, the endpoint is the URL that identifies a data type or a specific API Workflow. In outgoing requests made via the API Connector, the endpoint is the HTTP action and URL that you are pointing the call towards.

Further reading:Article: Data API endpoints
Article: Workflow API endpoints​HTTP MethodThe HTTP method is the instruction for the server to indicate the desired action to be performed on the specified resource (e.g. GET, POST, PUT, DELETE).

Further reading:Article: What is the HTTP method?
Article: Introduction to APIs​JSONJSON is a lightweight data interchange format typically used in Javascript. It uses human-readable text to transmit data objects that consist of attribute–value pairs and array data types.

It is commonly used both in incoming API Connections (the Data API and Workflow API) and outgoing API Connections (The API Connector).

Further reading:
Article section: What is the JSON format?​Oauth2OAuth2 is a protocol used by a server to determine a client's authorization. It lets a User grant an app (like your Bubble app) access to the resources stored in an external app without having to share their login credentials with the first app.

Instead, the server that hosts the external app will issue a token that your app can use to access the User's resources. That way, subsequent requests can be made without the User having to authorize each one or share their credentials.

Examples:A User wants to connect their social media account (such as Facebook or Twitter) to your Bubble-built social media management app in order to share posts automatically. The User grants your app access to their social media account using OAuth2, and your app is issued a token that it can use to post photos on behalf of the User.A User wants to be able to automatically add appoints to Google Calendar when a meeting is booked in your Bubble-built CRM. The User grants your app access to their Google account your app is issued a token that lets your app make changes to the User's calendar as needed.An enterprise clients wants to allow your app to access resources from their server without giving them actual login credentials. They use OAuth2 to issue a token to your app that you can use for subsequent calls.PayloadThe payload is the data or information sent in an API request or response.ResourceA resource is a specific data object or service that is made available by an API and can be accessed via a unique endpoint using methods such as GET, POST, PUT, and DELETE.

For example, if you are trying to access data about a specific User in your Bubble app from an external application, the User endpoint can be considered a resource. The same can be said about a specific API Workflow.

In other words, a resource represents a specific piece of information or functionality that an API can provide.

Further reading:
Article: What is a RESTful API?​Request/ResponseIn an API call, the request is the data sent from the client to initiate the connection. It contains all the data needed to authenticate and instruct the server what the request is about.

The response is the data sent back from the server to the client in response to the request.

Further reading:Article: Introduction to APIs​RESTfulAPIs that are RESTful mean that they are built on a set of architectural principles for building web services known as Representational State Transfer (REST). Most commercial and public API services adhere to these principles.

In short, this is a way to ensure that APIs that communicate with each other are compatible, or "speak the same language" if you will. Bubble's API and the API Connector is built around RESTful principles, which means it can connect to almost any web API.

Further reading:Article: What is a RESTful API?​TokenA token is a string that identifies the client sending an API request.

In the case of incoming requests (The Data API or Workflow API) the token is issued by Bubble.

In the case of outgoing requests (The API Connector) the token is issued by the server you are connecting to.

Further reading:
Article section: What is a bearer token?
​PreviousPlugins that connect to APIsNext - User manualTesting an ApplicationLast modified 1mo agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Sub Apps - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSub AppsSub applications are a powerful feature available in the Production plan. The feature sets up a relationship between a “main app” and one or more “sub applications” and makes it easier to push any changes from the main app to its sub apps, while all main and sub apps have their own database. This is especially useful for certain ideas that involve setting up different (sub/)domains for different clients, which is common in SaaS applications.Creating new sub appsThe feature can be found in Settings > Sub apps. There, you can create a sub app using the current app as the main app. This will create a copy of the main app with the new name that you pick. The new sub app will appear in your “My apps” dashboard (and will note which app is the parent), but from that point on, it generally functions as its own app. You cannot create a sub app off of a sub app, but one main app can have multiple sub apps. Pushing from the main app to sub appsHowever, one of the main features of a sub app is that at any time, you can “push” the current version of your main app to all of its sub apps. Note that this will overwrite any changes made to a sub app individually. (This feature can take a relatively longer time for complex apps.)Certain settings on an app will not transfer from the main app to a sub app upon a push. These include:Custom domain (i.e. every sub app can have its own domain)FaviconPage load times can take a while and use more capacity than normal when a complex page is loaded for the first time after that page has major changes, after that page is updated after not being updated in a long time, or if that page is newly created via copying.Bubble does a lot of computation and optimization behind-the-scenes to figure out how to generate a page and its data for a visiting end-user. As part of this, occasionally Bubble will go through a longer, deeper recalculation - this can happen when a page is viewed in run-mode after getting major changes, if a page is edited for the first time in a long time, or if a page is newly created via copying, for example. This longer recalculation does not have to be repeated often for a given page because Bubble remembers the result. But, while the recalculation is going on, you may see page load times in run-mode taking much longer than normal, as well as spikes in capacity usage. This should be temporary and should resolve itself after the recalculation finishes, which usually takes a handful of minutes.Main app vs sub app databasesSub apps have separate databases from the main app, but can connect with the main app’s database through the App Connector just like any other app. In other words, the main app’s database will not transfer to sub apps upon a push. Default values, however, are stored in the app rather than directly in the database, so they will transfer to sub apps on a push.Sub app subscriptionsEach sub app would be on its own Bubble subscription, but sub apps do not need to be on the Production plan - only the main app does.If you have a subscription to a plugin on your main app, it would not carry over  to your sub-app(s) and your sub-app(s) would need to re-purchase that plugin. PreviousSEONext - User manualMore about Bubble appsLast modified 6mo agoCopy linkOn this pageCreating new sub appsPushing from the main app to sub appsMain app vs sub app databasesSub app subscriptions

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Multiselect Dropdown - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMultiselect DropdownThe Multiselect Dropdown plugin creates a new input form that allows users to select multiple items from a static or dynamic dropdown list of options.Multi dropdown input formPlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.Choices styleThis dropdown prompts the user to choose one option from either static choices or dynamic data from the application database. In this dropdown menu, choose between Static choices or Dynamic choices.Choices (press Enter between each option)This is the list of static choices offered to users. Enter one option per line and press Enter between each option.Type of choicesThis is the type of thing used by the element when Dynamic choices is chosen in the Choices style.Choices sourceDefine the list of things to be used as options. It should be a list of things of type defined as the 'Type of choices.' It is either the result of a search or the content of a field that is a list.Default valueThis is the default value displayed in the dropdown menu. It should be of the same type as the type of content defined in 'Type of choices.'Enable users to type new textsThis checkbox allows users to enter their own items into the list of selections if their desired selection isn't found by typing in the input field and hitting return when they are done. This option is only available when the Choices style is set to Static choices.Allow tags containing spacesThis checkbox will set whether or not spaces are allowed in the new entry if the user is allowed to enter new items. If this checkbox is not selected and the user tries to add a space while typing, the text entered before the space will be removed.Maximum itemsThis optional number entry will limit the number of tags or items that can be selected by the user per input field.SetupWe can choose a type for our multi dropdown and select a list of options. A common use for this might be to select multiple tags for a single social media post, for example. In that case, we can do a search for tags as our choices source.We will choose the "Name" field on the Tag data type as what we would like to display as our caption. Now when we preview the page and click into the multidropdown, we can choose from the tags existing in our database.FAQHow can I use a multi dropdown to filter a repeating group? To do this, you might create a custom state which you set to the repeating group's data source. Then as the multi dropdown's value is changed, we can add to this state and by extension what results appear in our repeating group. You can find an example of this in a test application here. ​Note: Multi-dropdown input fields used in Group Focus or Floating Group containers may behave unexpectedly in rare scenarios.​PreviousMouse & Keyboard InteractionsNextOlark Live ChatLast modified 9mo agoCopy linkOn this pageMulti dropdown input formPlaceholderChoices styleChoices (press Enter between each option)Default valueEnable users to type new textsMaximum itemsSetupFAQHow can I use a multi dropdown to filter a repeating group? 









The Bubble API - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe Data APIThe Workflow APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe Bubble APIThe Data API allows other systems to search for, read, create, modify and delete data in your application’s database via a RESTful interface.This is the short-form technical reference entry describing the Bubble API. If you are looking for more in-depth and long-form articles on how the Bubble API works, you may be interested in checking the Bubble API manual.Reference entriesThe Data APIThe Data API allows other systems to search for, read, create, modify and delete data in your application’s database via a RESTful interface.The Data APIThe Workflow APIThe Workflow API allows external applications to execute workflows in your Bubble app via a RESTful interface.The Workflow API​Manual referencesThe Bubble manual gives extended information about Bubble's features and how to use them.Introduction to APIsThis article series takes an in-depth look at what exactly an API is and how you can both set up an API in Bubble and connect to external APIs in different ways.Article: Introduction to APIs
Video: Introduction to APIs
Article: What is a RESTful API?​Authenticating with the Bubble APIAuthentication is the process of identifying who the client is in order to determine what they have access to.

Article series: The Bubble API and authentication
Authentication types
The Bubble API lets clients authenticate in different ways:

Article: Accessing the Bubble API without authentication
Article: Accessing the Bubble API authenticated as a User
Article: Accessing the Bubble API authenticated as an admin
How to set up authentication in the external system
The Bubble uses the bearer token method to authenticate clients.Article: How to set up authentication in an external app​The Data APIThe Data API lets you set up an API in your Bubble application that accepts incoming requests to search for, read, create, edit and delete entries in your database.

Article series: The Data API​The Workflow APIThe Data API lets you set up an API in your Bubble application that accepts incoming requests to trigger workflows.

Article series: The Workflow API​Core Reference - PreviousAPINextThe Data APILast modified 1mo agoCopy linkOn this pageReference entriesThe Data APIThe Workflow APIManual references









Building Templates - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBuilding TemplatesYou can sell templates on the Bubble marketplace. Templates come in a variety of categories, from clones of popular applications like Slack or Tinder to building blocks with login or multi-step form components. You can start building for others through the following steps.Define your seller identityOn your account page, under “Marketplace,” there’s a “Seller Profile” section where you can choose your information as you would like it to appear on your contributor profile. This includes your name, logo, website, location, bio, and support email.Tip: Remember to fill out the entirety of the Seller Profile in order for your template to be discoverable at bubble.io/templates. You can also set your preferences for when money from your template sales should be transferred to you, or whether or not you would like to receive emails from when one of your templates is bought.You will receive payouts automatically on the fifth of every month. If you choose to set a payout threshold, you will receive payouts for your plugin sales if they meet that threshold, and for your templates sales if they also meet that threshold. For example, if your payout threshold is $500 and you sell $600 worth of plugins and $200 worth of templates, you would receive the payout for plugins that month and the payout for template sales for the month after that total reaches $500.Important: You will also see a button to register with Stripe. Payments to marketplace creators (sellers) are made via Stripe, so you must have a Stripe account in order to be paid. You will need to handle compliance aspects with Stripe directly. This can include providing identification and tax information.If your country is not supported by Stripe yet, you will not be able to sell on the Bubble Marketplace. This includes restrictions from Stripe such as not allowing for transfers from non-India accounts to India-based accounts.Create your templateAt bubble.io/my_templates, select “New template” to get started. Give your template a name (you can change this later), and select whether or not you would like to create a new app for your template or base it off an existing one. If you use an existing app, it should have no data and be on the Hobby plan.Certify that you own all intellectual property rights: Templates' intellectual property is the propriety of the template owner. When adding a template to the library, as any other application, you have to comply with the Acceptable Use Policy you agreed to when you signed up for Bubble. In particular, you should own the design, logo and images' rights that you are using in your template.A template sold on Bubble should not be sold on another platform, including the design, logo, etc.Lastly, click “Create template.” You will now see your template under “My templates” as a thumbnail similar to how your applications appear at bubble.io/home.This will include the following icons:Edit: Click this to open and continue developing your template.Submit: When your template is finished, click here to submit to our team for approval to get published on the marketplace.Preview: Once your template is published, click here to view the public details page where users can purchase it.Price: Define the license for your template here and how much it costs.Delete: Once a template is published, it can be subsequently removed from the marketplace, but the underlying app cannot be deleted (otherwise anybody who has already purchased the template would not be able to use it in the future). Click here to delete the template itself.Submit your template for marketplace reviewOur team reviews all templates before they are published on the marketplace. Before you submit, check out our marketplace guidelines for more information on what we look for and how to get approved.Once you have reviewed the guidelines and are ready to submit, click the rocket icon. Name your template as you want it to appear publicly, and thoroughly describe what the template includes. This lets users know what to expect and also helps our team to know what to test during our review.Select the preferred license for your template, Open Source or Commercial. If you choose Open Source, buyers can access the template under the MIT license. If you choose Commercial, there is an Individual Commercial and Developer Commercial license. Under the individual license, buyers can access and use the template in applications used for their internal business or personal purposes, whereas under the developer license, buyers can use the template for their internal business or personal purposes or applications built for third parties. There is no limit on the number of applications templates can be used for. For a full definition of each of these licenses, visit our terms.Note that if your template is reviewed and approved by our team as Open Source, you can not then change it to Commercial, so make sure you are confident in your license prior to submitting.Once you choose your license, select the Category that’s most appropriate for your template. For example, a Facebook clone would select “Social.”Upload a screenshot for the thumbnail image that will appear on bubble.io/templates. When you are happy with your details, click “Submit.”This sends your template to the Bubble team to review. You will receive an email from us once it has been reviewed with our feedback, typically after a couple of days. If after you submit your template you would like to make further changes, you will need to cancel the submission and then resubmit after you make the changes.Set the price for your templateWhile Open Source templates are free, if you select Commercial, you can now define its price. For Individual Commercial Template Licenses, you can set the price as free or $3 - $500. For Developer Commercial Template Licenses, you can set the price as $10 - $5,000. In this popup, you can also download your sales data for the past 30 days.When you sell a template, the total payout for the owner is 75% of the facing value. Note that this fee structure may change (but will not be applied retroactively on already published templates if a change occurs).Support users of your templateAs an owner of a template, you commit to fix issues that users that use the template may report. If a template is being reported as having issues and if no action is taken, Bubble reserves the right to withdraw the template from the marketplace.Users can (and are encouraged to) leave some reviews, feedback, and questions. You are responsible for handling questions and support requests. Failure to follow up with users that reach out (and report you to the Bubble Team) may lead to the cancellation of your Seller Profile.​PreviousGithub IntegrationNext - MiscellaneousThe ShowcaseLast modified 1yr agoCopy linkOn this pageDefine your seller identityCreate your templateSubmit your template for marketplace reviewSet the price for your templateSupport users of your template









Actions - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookActionsActions give life to the app. They save data, charge credit cards, sign the user up, send emails, connect to external services, show elements, etc.This section covers all of the actions in the core library and their respective parameters.AccountNavigationData (Things)EmailElementCustom​PreviousTrigger EventNextNavigationLast modified 2yr agoCopy link








Responsive Properties (Legacy) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookResponsive PropertiesThe following responsive properties are generally available for all elements. Containers also have responsive layout types that determine what additional layout properties its child elements have. These are outlined in the Containers section.Preset page width (page only)Custom: Default setting.Full width: Sets page width to 1200.Centered: Sets page width to 980.Mobile: Sets page width to 380.Width for UI Builder (page only)Set the width of the page while in UI Builder mode. This option is only available for responsive container layout types (i.e. not Fixed) since these containers at the page level will grow to fit whatever the screen size is in run-mode. In the Responsive tab, you will be able to drag the canvas to see how the layout reacts to different screen sizes.Parent container typeThe container layout type of the parent container. Clicking edit brings you to the property editor of the parent container.Keep element aspect ratio fixedCheck this box to maintain the current aspect ratio of the element as the parent container is resized. Only available for shapes, icons, and images.Make this element fixed-widthCheck this box if you want the element to maintain a fixed width as the parent container resizes. If not, you will need to specify a minimum and maximum width.WidthEnter the width of the element in pixels.Min widthSpecify the smallest width the element should be allowed to get as the parent container resizes. This value can be set in pixels or percentage relative to the parent container.Max widthSpecify the largest width the element should be allowed to get as the parent container resizes. This value can be set in pixels or percentage relative to the parent container. If left blank, the maximum width will default to infinite, which means it will stay as wide as the parent container.Note: Child elements will always try to grow to their max width, unless restricted by other elements or its parent container.Fit width to contentCheck this box to shrink this container to the width of the widest child element or its min width. Otherwise, the container will grow to its max width or the width of its parent container, whatever is smaller.Note: This setting is only available on container elements inside a parent container with a layout type of align to parent or row.Make this element fixed-heightCheck this box if you want the element to maintain a fixed height even if its content or parent container grows. If not, you will need to specify a minimum and maximum height.HeightEnter the height of the element in pixels.Min heightSpecify the smallest height you want the element to get in pixels or percentage relative to the parent container.Max heightSpecify the largest height you want the element to get in pixels or percentage relative to the parent container. If left blank, the maximum height will default to infinite, which means it will stay as tall as the parent container.Note: Child elements will always try to grow to their max height, unless restricted by other elements or its parent container.Fit height to contentCheck this box to shrink this container to the height of the tallest child element. Otherwise, the container will grow to its max height or height of its parent container, whatever is smaller.Note: This setting is only available on container elements inside a parent container with a layout type of align to parent or column.XEnter the x-axis position of the element’s top left corner relative to the parent container in pixels.YEnter the y-axis position of the element’s top left corner relative to the parent container in pixels.Collapse when hiddenCheck this box to collapse or remove the element from its parent container when the element is not visible. This will free up space for other elements to move (if applicable). If unchecked, the element will still be invisible, it will just continue taking up space in the parent element. This checkbox is the way to replicate hidden functionality from the legacy responsive engine. Allow vertical scrolling when content overflowsCheck this box to add a scrollbar to the group container when the content is longer than the max height of the group container.Group elements in a Fixed containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in a Fixed container. Learn more about fixed containers here.Group elements in a Row containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in a Row container. Learn more about Row containers here.Group elements in a Column containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in a Column container. Learn more about Column containers here.Group elements in an Align-to-Parent containerSelect this option from the Arrange or right click menu when multiple elements are selected to group the elements in an Align-to-Parent container. Learn more about Align-to-Parent containers here.Apply gap spacing between elementsCheck this box to specify gap spacing between child elements in your Row or Column container. If the container has a Row container, you will be able to specify both row-gap and column-gap values. If your container has a Column container layout, you will be able to specify row-gap values. Gap values will move the position of child elements accordingly and reduce the amount of available space to grow within the parent container - if the child elements are variable width or height.Note: Gap controls are supported by newer versions of most browsers with the exception of Internet Explorer. Refer to this guide to see if your users browsers are supported.Row gap (px)Specify a value in pixels. The row gap value defines the vertical distance between rows of child elements in a parent container. In a Row container layout, the row gap value defines a consistent distance between the first row of child elements as elements wrap to the next row. In a Column container layout, the row gap value defines a consistent distance between child elements as they are stacked vertically.Column gap (px)Specify a value in pixels. The column gap value defines the horizontal distance between child elements in a parent container and is only available in Row container layouts.PreviousStyling Properties (Legacy)NextResponsive Properties (Legacy)Last modified 8mo agoWas this page helpful?Copy linkOn this pagePreset page width (page only)Width for UI Builder (page only)Parent container typeKeep element aspect ratio fixedMake this element fixed-widthWidthMin widthMax widthFit width to contentMake this element fixed-heightHeightMin heightMax heightFit height to contentXYCollapse when hiddenAllow vertical scrolling when content overflowsGroup elements in a Fixed containerGroup elements in a Row containerGroup elements in a Column containerGroup elements in an Align-to-Parent containerApply gap spacing between elementsRow gap (px)Column gap (px)

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Data - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataData SourcesOperators & ComparisonsSearchPrivacyStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDataData sources are the first part of a dynamic expression. Operators are the chunks after data sources that together make up dynamic expressions. This section covers all of them. Along with the search and privacy interfaces.Data SourcesOperators & ComparisonsSearchPrivacy​PreviousCustomNextData SourcesLast modified 2yr agoCopy link









Reusable Elements - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookReusable ElementsA reusable element creates an element that contains other elements, like a group, that can be used in more than one place. This is useful when reusing the same elements often. Using reusable elements keeps the app smaller and makes it easier to edit.Note: Be careful when nesting reusable elements, especially many layers deep, as this can slow down page load performance significantly.Type of elementA reusable element can be a Group, Popup, or Floating Group. In the case of a popup, the reusable element will be behave like a popup, i.e., modal and have a grayout until it is shown.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For example, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.Note: While the "auto updating" behavior of a Reusable Element's dynamic data source is generally desirable, there are certain scenarios where this may cause unexpected behavior. For example, consider the following scenario:Your page has a Repeating Group to display a List of Things, where each cell contains a Reusable Element. The Repeating Group's List of Things is sorted by some field on the Data Type and inside the Reusable Element is an auto-binding popup form that changes that Thing's sorting field. When the popup is open, and the order of the List of Things is changed, the popup will lose its reference to the Thing from the original cell and instead reference the new cell in its place.To workaround this limitation, consider making the popup form non auto-binding. Or, create a static reference to the Thing in the Reusable element by setting a custom state equal to the Reusable Element's thing when opening the popup form and having the popup reference the custom state. Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Delete this reusable elementDelete the reusable element. Pages using this element will display a 'Deleted reusable element' placeholder.Built-in reusable elements Your application comes with 3 reusable elements out of the box: a header, footer, and signup / login popup. The header contains a button to "Sign up or Log in," which shows the signup / login popup. This popup includes workflows for users to log in, as well as reset their password. If the user is already logged in, the button will say "Log out" instead. The footer includes an example of how you can include external links, such as to your company's social media. All of these reusable elements are customizable. You can change their styles and content while keeping their workflows or using them as inspiration for your own. ​​​​​​​​​​​​​​​PreviousInput FormsNextElement TemplatesLast modified 1yr agoCopy linkOn this pageType of elementType of contentData sourceDelete this reusable elementBuilt-in reusable elements 









Domain / email - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDomain / emailDomain settingUse CloudFlareIf you set your app to use a domain before October 2019, you can check this box to toggle CloudFlare on or off.Enabling CloudFlare requires changing DNS entries at your domain registrar, and may incur a few minutes downtime.If you use a bare domain (of the form mydomain.com, as opposed to www.mydomain.com or app.mydomain.com) and you wish to keep your existing domain record, ensure your registrar supports ALIAS or ANAME records, or bare domain CNAME records, before toggling this checkbox.Email settingsSendgrid keyEnter your Sendgrid key to send emails from your domain. If you do not add your key, emails will be sent from [your-appname][email protected] Generate your key at https://app.sendgrid.com/settings/api_keys. Make sure the key has the Send Mail permission. After you enter a key, click "Check Sendgrid key" to receive a test email.Sendgrid Template IDSendgrid allows you to define templates to use when sending emails. When you build a template, add the template ID here, and it will be applied to all emails sent by the app. This is compatible with legacy and dynamic Sendgrid templates.Bubble currently allows you to replace the body of the email with the template style only for legacy Sendgrid templates. Templates should contain a single "<%body%>" (without the quotes) field, which will be replaced by the content of the email defined in your actions. Note: This is optional. Without a template, the email will be exactly what you typed in the Body field.Admin emailWhen the app sends an email, it uses a generic email with your domain name, "[email protected]_domain.com".Tip: Because of Sendgrid's security measures, the email "[email protected]_domain.com" has to be verified in your Sendgrid dashboard, otherwise the validation won't work. You can find their verification requirements here. Note: This option is only available to users with a paid Bubble plan and domain.Sender nameDefine here the name you want to display when you send an email, which will appear email clients show as "My Name" . When the sender name is defined at the action level, this sender name will be used.Redirect all requests to the domainWhen the app has a domain, it will be accessible both at appname.bubbleapps.io and yourdomain.com. To redirect all appname.bubbleapps.io to yourdomain.com, for SEO purposes for instance, check this box.​​​​​​​​​​​​​​​PreviousGeneralNextLanguagesLast modified 9mo agoCopy linkOn this pageDomain settingUse CloudFlareEmail settingsSendgrid keySendgrid Template IDAdmin emailSender nameRedirect all requests to the domain









Stripe - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookStripe​The Stripe Plugin charges credit cards and handles subscriptions for users. Strong Customer Authentication (SCA) is supported and can be enabled from the plugin menu by selecting “Checkout v3” in the dropdown. See Stripe’s documentation for more information.Charge the current userThis action charges the current user and prompts them to enter their credit card information. The response from Stripe, e.g., the Stripe charge ID, amount, confirmation, etc., can be accessed in the subsequent actions as 'Result of previous step.' In a failed transaction, the workflow will stop running. See Stripe's documentation for more details.Payer emailDefine the email of the user to charge. Often, it will be 'Current user's email.'AmountEnter the amount to be charged. It can be dynamic using the 'Insert dynamic data' button.NameEnter the product name that will appear in the checkout flow and in the email users receive from Stripe.DescriptionEnter the description that will appear in the checkout flow and in the email users receive from Stripe.ImageThe image that will appear in the checkout flow.CurrencyEnter the currency of the transaction. If the currency is not in the list you can type it.Button captionThis is the caption for the button on the Stripe Checkout form. The amount will be added to the caption in Live mode.Statement descriptorOptional, use this to change how this payment will show up on the customer's statement. What you enter will be appended to the "shortened descriptor set in your Stripe account, in the manner of "YOUR-APP*DESCRIPTOR". This overall string has a character limit of 21; anything past that will be truncated. In Stripe's v3 checkout, this field will comprise the entirety of the statement descriptor.Authorize the charge onlyThis determines whether to immediately capture the charge. When checked, the charge issues an authorization and will need to be captured later. Uncaptured charges expire in 7 days. You can then capture the charge in your Stripe dashboard.The payee of this transaction is another userWhen setting up a marketplace, check this box so payment will go to another user instead of your own Stripe account. For this to work, you must build a flow where users can register as a seller, connecting their Stripe account to get paid.Transaction payeeIn the case of a marketplace, define who gets the payment. This is likely the 'Current list thing's creator.' This user must register as a seller for the transaction to process.App feeYou can charge a fee on transactions, but it must a currency amount and not a percentage.You can, however, compute the value in the field using the Composer.Allow promotion codes (v3)🆕 Check this box to allow your users to enter a promotion or discount code when they are sent to checkout. Coupon codes can be created in your Stripe Dashboard. See Stripe Documentation for more details.Add tax rate to checkout (v3) 🆕 Check this box to add a tax rate or list of tax rates to the user's invoice. Before you check this box, be sure to create your Tax Rate objects in your Stripe Dashboard. If the transaction payee is another user, make sure the Tax Rate object is from the Connected account, not your own Stripe account.While Stripe offers both Fixed & Dynamic Tax rates, the Stripe Plugin only supports Fixed tax rates at this time. See Stripe Documentation to learn more about Fixed vs Dynamic tax rates.Tax rate IDs sourceThis dropdown element allows you to input your tax rate IDs as static choices or dynamic data from the application database or Option set. In this dropdown menu, choose between Static IDs or Dynamic IDs.Tax rate IDs (press Enter between each ID)This static input allows you to paste in your Stripe tax rate ID or list of tax rate IDs by separating each entry with a new line. All tax rates entered here will be applied to the user checkout session. Tax rate IDsThis dynamic input allows you to select a list of tax rate ids dynamically from your application, whether from the database, option set, or other datasource. This selection must evaluate to a list of texts. If you'd like to specify a single tax rate ID, use the :converted to list operator. See the example below:If your tax rate IDs are stored in an Option set named Tax Rates, and you'd like to select a single option named "Sales Tax" with the attribute "ID", your dynamic expression would look like:Sales Tax:converted to list's IDDo not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Collect the user's CC informationThis action prompts the user to enter their credit card information without actually charging the card. Use this to delay the payment, for instance, if you are building a crowdfunding-based system. If the user fails to enter their card information, the workflow will stop running.Update existing main cardIf you check this box, the current user’s default credit card, if any, will be updated. However, the original credit card will still exist in the current user’s full list of credit cards unless it is explicitly deleted in a separate workflow action. If the box is not checked, the new credit card will be added to the current user’s full list of credit cards, but their default credit card will not change.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Charge a user using saved CCThis action charges a user who has already entered their credit card information. It does not have to be the current user in this case. If no credit card information is available, the action will fail. The response from Stripe, e.g., the Stripe charge ID, amount, confirmation, etc., can be accessed in the subsequent actions as 'Result of previous step.' In a failed transaction, the workflow will stop running.Charged userDefine the user to charge. This user must be signed up already because we need to have their saved credit card information. The user does not need to be logged in for the transaction to happen.AmountEnter the amount to charge. It can be dynamic using the 'Insert dynamic data' button.CurrencyEnter the currency of the transaction. If the currency is not in the list you can type it.NameEnter the product name that will appear in the checkout flow and in the email users receive from Stripe.DescriptionEnter the description that will appear in the checkout flow and in the email users receive from Stripe.ImageThe image that will appear in the checkout flow.The payee of this transaction is another userWhen setting up a marketplace, check this box so payment will go to another user instead of your own Stripe account. For this to work, you must build a flow where users can register as a seller, connecting their Stripe account to get paid.Transaction payeeIn the case of a marketplace, define who gets the payment. This is likely the 'Current list thing's creator.' This user must register as a seller for the transaction to process.App feeYou can charge a fee on transactions, but it must a currency amount and not a percentage.You can, however, compute the value in the field using the Composer.Card ID to chargeYou can optionally specific a card ID to charge. If this field is not filled, the default card of the user will be used.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Capture an authorized chargeThis action lets you capture a charge that has already been authorized by Stripe. Note that uncaptured charges expire after 7 days, per Stripe's documentation.Charge IDCharge ID of the charge you want to capture.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Create an invoice This action creates a draft invoice for the user. It contains all pending invoice items on that user. The drafted invoice cannot be paid or sent until it is finalized.User Define the user to charge. If the user does not have a credit card on file, the action will fail. Subscription IDIf no Subscription ID is given, all pending invoice items for the charged user will be included in the created invoice. Otherwise, the created invoice will include both pending invoice items for that subscription and pending invoice items not associated with any subscription. Billing cycle and regular subscription events associated to that subscription will not be affected.Automatic collection When the invoice fails to be charged, you can enable this feature to allow Stripe's Smart Retries to automatically choose optimal times to retry failed payments. If set to false, no actions will be taken to advance the invoice's state automatically.Update an invoiceThis action updates the details of an invoice. Only invoice drafts can be edited. Invoice IDThe ID of the invoice you want to update.DescriptionExtra string of text that can be added to the invoice. Visible to the recipient of the invoice. This field is referenced as "Memo" in the Stripe Dashboard.Auto advanceControls whether Stripe will perform automatic collection of the invoice.Register the user as a sellerThis action enables users to become merchants on your platform. For example, if you want to build a marketplace where users can sell their work to someone else, then they need to be able to credit their account when a transaction occurs. Your app will usually take a commission, which can be set when setting up the actions "Charge a user using saved cc" and "Charge the current user". You must create an application on Stripe to enable this type of transaction. In v3 of the plugin, the registering seller will be directed to a Stripe-hosted seller onboarding experience. ​At this time, only Connect Standard account onboarding is supported with this method. See Stripe Connect for more information. Important: You need to set the redirection URIs in Stripe as 'https://bubble.io/poststripeauth' or 'https://d##.bubble.is/poststripeauth' for Dedicated environments in order for this to work. In addition, be sure to add the Connect client ID to your Stripe Plugin settings. Both the client ID and redirect URI settings can be found in your Stripe Dashboard > Settings > Connect settings.Business emailPrefill information to ease the process with Stripe. Enter the email the user is likely to use.Business URLPrefill information to ease the process with Stripe. Enter the URL the user is likely to use.Business namePrefill information to ease the process with Stripe. Enter the name the user is likely to use.Business addressPrefill information to ease the process with Stripe. Enter the address the user is likely to use.Product categoryPrefill information to ease the process with Stripe. Enter the product category the user is likely to sell.Sold products are physical productsPrefill information to ease the process with Stripe. Enter whether the user is likely to sell a physical product.Product descriptionPrefill information to ease the process with Stripe. Enter the type of product the user is likely to sell.Subscribe the user to a planThis action subscribes a user to a plan, which was previously defined in Stripe. Then, the card will be charged on a regular basis. If the user is already on a plan, their subscription will be updated to the new plan. If the user fails to enter their credit card information, the workflow will stop running.Since the app has two versions, Development and Live, you need to have both versions of your account in Stripe to have the same plans with the same IDs.Apply this action to the current userBy default, the 'Subscribe user' action applies to the currently logged in user. To apply the operation to another user, uncheck this box.Subscribed userDefine the user to subscribe to a plan. This user must be signed up already because we need to have their saved credit card information. The user does not need to be logged in for the transaction to happen.Update existing subscriptionIf you check this box, the current user's subscription, if any, will be updated. If the box is not check, a new subscription will be added to the user.Subscription ID (opt.)If you want to update an existing subscription, you can define here the subscription ID (returned by Stripe). If this is empty, the action will modify the first subscription returned by Stripe.Dynamically specify planBy default, the plan is chosen in a dropdown menu. To make the plan dynamic, check this box.Subscription typeYou can either pick one plan (most common case), or include more than one plan in the subscription.Plan nameOnce you enter your keys in the Stripe section in the Plugins Tab, we fetch the plans you created with Stripe to populate this list. Select the plan to subscribe the user to. If the plan is dynamic, the value must be one of the plans defined in your Stripe account.Since the app has two versions, Development and Live, you need to have both versions of your account in Stripe to have the same plans with the same IDs.QuantityEnter the quantity to apply to the plan. In most cases it will be 1, but to have variable pricing on the plan, use this.Subscription ItemsYou can define a list of plans/quantity to add to the subscriptionsApply a coupon to this subscription (v2)To provide discounts to certain customers, create coupon codes in the Stripe Dashboard. Check this box to enter a coupon ID.Coupon IDEnter the coupon ID. It can be dynamic information coming from an input.Allow promotion codes (v3)🆕 Check this box to allow your users to enter a promotion or discount code when they are sent to checkout. Coupon codes can be created in your Stripe Dashboard. See Stripe Documentation for more details.Add tax rate to checkout (v3) 🆕 Check this box to add a tax rate or list of tax rates to the user's invoice. Before you check this box, be sure to create your Tax Rate objects in your Stripe Dashboard.While Stripe offers both Fixed & Dynamic Tax rates, the Stripe Plugin only supports Fixed tax rates at this time. See Stripe Documentation to learn more about Fixed vs Dynamic tax rates.Tax rate IDs sourceThis dropdown element allows you to input your tax rate IDs as static choices or dynamic data from the application database or Option set. In this dropdown menu, choose between Static IDs or Dynamic IDs.Tax rate IDs (press Enter between each ID)This static input allows you to paste in your Stripe tax rate ID or list of tax rate IDs by separating each entry with a new line. All tax rates entered here will be applied to the user checkout session. Tax rate IDsThis dynamic input allows you to select a list of tax rate ids dynamically from your application, whether from the database, option set, or other datasource. This selection must evaluate to a list of texts. If you'd like to specify a single tax rate ID, use the :converted to list operator. See the example below:If your tax rate IDs are stored in an Option set named Tax Rates, and you'd like to select a single option named "Sales Tax" with the attribute "ID", your dynamic expression would look like:Sales Tax:converted to list's IDTax percent (v2)Enter the tax percentage, which should be a positive decimal between 1 and 100. It can be dynamic using the Composer. This represents the percentage of the subscription invoice subtotal that will be calculated and added as tax to the final amount for each billing period. For example, a plan that charges $10/month with a tax percent of 20.0 will charge $12 per invoice.End of the trialEnter the date representing the end of the trial period. After this time, the customer will be charged. When selected, this setting overrides the default trial period of the plan the customer is subscribed to.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Update Stripe Customer 🆕​This action modifies email and address for an existing Stripe customer.Apply this action to the current userBy default, the 'Subscribe user' action applies to the currently logged in user. To apply the operation to another user, uncheck this box.Subscribed UserDefine the user to subscribe to a plan. This user must be signed up already because we need to have their saved credit card information. The user does not need to be logged in for the transaction to happen.EmailEnter the new email user would like to update toAddressEnter the new address user would like to update toCreate a Stripe Coupon 🆕 This action creates a coupon which can be used by any Stripe customer.Coupon NameName of the coupon displayed to customersAmount OffAmount (in the currency specified) that will be taken off via the couponPercent OffPercentage that will be taken off via the couponDurationHow long a customer can apply the coupon for. Choose one from forever, once, and repeating.Duration in MonthsIf duration is repeating, the number of months the coupon applies.Expiration dateAfter this date, the coupon will be no longer validCurrencyEnter the currency of the coupon. If the currency is not in the list you can type it.Max redemptionMaximum number of times a customer can redeem the coupon forApply a coupon to the user's subscriptionThis action applies a coupon/discount to the current user's subscriptionApply this action to the current userBy default, the 'Apply a coupon to the user's subscription' action applies to the currently logged in user. To apply the operation to another user, uncheck this box.Subscribed userDefine the user to apply a coupon to. This user must be signed up already because we need to have their saved credit card information. The user does not need to be logged in for the transaction to happen.Subscription IDIf you want to update an existing subscription, you can define here the subscription ID (returned by Stripe). If this is empty, the action will modify the customer object in Stripe and all plans will have the coupon applied to them.End of the trialEnter the date when the trial period should end. If left empty, no trial period will apply.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Create an invoice itemThis action creates an invoice item for the user. The invoice item will be paid with the next invoice.Note: Since the introduction of the Bubble Stripe plugin, Stripe has clarified and updated some of its terminology. For this plugin, what Bubble calls a "line item" is what Stripe calls an "invoice line item" - these have Stripe IDs starting with 'il_' and are entries on an existing invoice. The change Stripe made was to have its own concept of "line items" which correspond to future entries on the next invoice; these Stripe IDs start with 'ii_' and can exist separately from an invoice. Bubble still uses its original definition of 'line items' (i.e. as Stripe's 'invoice line items') for the time being.UserDefine the user to charge. If the user does not have a credit card on file, the action will fail.AmountEnter the amount to charge. It can be dynamic using the 'Insert dynamic data' button.CurrencyEnter the currency of the transaction. If the currency is not in the list you can type it.DescriptionEnter the description that will appear in the email users receive from Stripe.Subscription IDTo add the invoice item to an existing subscription, specify the Stripe Subscription ID. This is an optional field.Add tax rate to invoice item Check this box to add a tax rate or list of tax rates to the user's invoice item. Before you check this box, be sure to create your Tax Rate objects in your Stripe Dashboard.While Stripe offers both Fixed & Dynamic Tax rates, the Stripe Plugin only supports Fixed tax rates at this time. See Stripe Documentation to learn more about Fixed vs Dynamic tax rates.Tax rate IDs sourceThis dropdown element allows you to input your tax rate IDs as static choices or dynamic data from the application database or Option set. In this dropdown menu, choose between Static IDs or Dynamic IDs.Tax rate IDs (press Enter between each ID)This static input allows you to paste in your Stripe tax rate ID or list of tax rate IDs by separating each entry with a new line. All tax rates entered here will be applied to the user checkout session. Tax rate IDsThis dynamic input allows you to select a list of tax rate ids dynamically from your application, whether from the database, option set, or other datasource. This selection must evaluate to a list of texts. If you'd like to specify a single tax rate ID, use the :converted to list operator. See the example below:If your tax rate IDs are stored in an Option set named Tax Rates, and you'd like to select a single option named "Sales Tax" with the attribute "ID", yoPay an invoiceThis action finalizes a draft invoice and immediately charges a pending invoice. It uses the card the user has on file.Invoice IDEnter the Stripe invoice ID to charge.Cancel an InvoiceThis action cancels an invoice by setting its status to void or uncollectible. For more information, check out the Stripe documentation for Void an Invoice and Mark as Uncollectible. Invoice IDEnter the Stripe invoice ID to cancel.StatusSelect the invoice's new status (void or uncollectible)Cancel the current user's planThis action cancels a subscription with Stripe. The card will not be charged anymore.Apply this action to the current userBy default, the 'Cancel Plan' action applies to the currently logged in user. To apply the operation to another user, uncheck this box.Subscribed userDefine the user to unsubscribe. This user must be signed up already. The user does not need to be logged in for the transaction to happen.Cancel all subscriptionsIf this box is checked, all subscriptions on the user will be canceled. If not, you will be able to specify a subscription ID.Subscription IDIf you want to cancel an existing subscription (and keep the other subscriptions running), you can define here the subscription ID (returned by Stripe).Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Create a subscription itemThis action adds a plan to an existing subscription.Subscription IDDefine here the subscription ID (returned by Stripe) to add the plan to.Plan nameOnce you enter your keys in the Stripe section in the Plugins Tab, we fetch the plans you created with Stripe to populate this list. Select the plan to subscribe the user to. If the plan is dynamic, the value must be one of the plans defined in your Stripe account.Since the app has two versions, Development and Live, you need to have both versions of your account in Stripe to have the same plans with the same IDs.QuantityEnter the quantity to apply to the plan. In most cases it will be 1, but to have variable pricing on the plan, use this.Update a subscription itemThis action modifies a plan to an existing subscription that has more than one plan.Subscription Item IDDefine here the subscription item D (returned by Stripe) to update.Plan nameOnce you enter your keys in the Stripe section in the Plugins Tab, we fetch the plans you created with Stripe to populate this list. Select the plan to subscribe the user to. If the plan is dynamic, the value must be one of the plans defined in your Stripe account.Since the app has two versions, Development and Live, you need to have both versions of your account in Stripe to have the same plans with the same IDs.QuantityEnter the quantity to apply to the plan. In most cases it will be 1, but to have variable pricing on the plan, use this.Delete a subscription itemThis action deletes a plan to an existing subscription that has more than one plan. The subscription will still keep going after the deletion.Subscription Item IDDefine here the subscription item ID (returned by Stripe) to delete.Make a card new defaultThis action modifies the current user and makes a card the new default payment mean.Credit Card IDDefine here the card ID (returned by Stripe) to use.Delete a credit cardThis action deletes a credit card on the current user.Credit Card IDDefine here the card ID (returned by Stripe) to delete.Retrieve all user invoicesThis user call retrieves all user invoices based on the email of the user.Because of limitations associated with the Stripe API, we can only retrieve up to 100 invoices per user at this moment.Set a user's credit balance 🆕​This action uses the Stripe Customer API to set an absolute value for a customer's balance. Note: This action does the same thing the legacy action "Adjust a user's balance" did. It has been renamed to more accurately reflect the action it performs - setting an absolute value rather than adjusting an existing value.UserDefine the user that corresponds to the Stripe customer whose balance you'd like to set. The user must already be a Stripe customer in your system.AmountSpecify the absolute value of the above user's balance. For example, setting the value to $0 will wipe out any positive (amount owed) or negative (amount credited) value for the current customer balance.Adjust a user's credit balance 🆕 This action uses the Stripe Credit Balance API to increase (debit) or decrease (credit) a user's Credit Balance. This action can be used to issue a credit to a user that will be documented as a Transaction on their account and applied to their next invoice. See Stripe Documentation for more detail.UserDefine the user that corresponds to the Stripe customer whose balance you'd like to adjust. The user must already be a Stripe customer in your system.Type of adjustmentSelect the type of adjustment you would like to issue to the above user. The options are credit,  meaning you owe them money, or debit, meaning they owe you money.AmountSpecify the amount you would like to credit or debit from the user's Stripe credit balance, depending of the type of adjustment you selected above.CurrencySpecify the currency (USD, EUR, etc.) of the amount. This currency must match the one set by the customer. If the customer’s currency is not set, it will be updated to this value.Transfer to sellerThis action uses the Stripe Transfer API to send funds from your Stripe account to a Connected (seller) account. AmountEnter the amount to send. It can be dynamic using the 'Insert dynamic data' button.CurrencyEnter the currency of the transaction. If the currency is not in the list you can type it.Destination sellerEnter the User that the money will be sent to. Note, the user must be a registered seller with a valid Connected account for the transfer to be valid.DescriptionOptionally enter a description of the Transfer to be shown on the record of the transaction.Source charge IDOptionally enter the pre-authorized charge ID as the source of this transfer instead of the parent Stripe account balance.Transfer groupOptionally enter a text identifier for this individual transaction as a part of a group of transactions. More information on transfer groups can be found in the Stripe Connect Documentation.Create payoutThis action sends a payout in the amount specified from your Stripe account balance to the bank account linked to your Stripe account.AmountEnter the amount to send. It can be dynamic using the 'Insert dynamic data' button.CurrencyEnter the currency of the transaction. If the currency is not in the list you can type it.Enter API KeyThis button will appear if not all of your Live keys (Client ID, Secret Key, Publishable Key) are filled out in the Stripe plugin settings. Clicking this button will bring you to the plugin settings page so you can fill them out. Refer to the Setup section below for more information on these keys. Create a Stripe value list itemThis action creates a new Value List Item object, which is added to the specified parent value list.Value list IDEnter the identifier of the value list which the created item will be added to.ValueEnter the value of the item.Enter API KeyThis button will appear if not all of your Live keys (Client ID, Secret Key, Publishable Key) are filled out in the Stripe plugin settings. Clicking this button will bring you to the plugin settings page so you can fill them out. Refer to the Setup section for more information on these keys.SetupYou will need an active Stripe account before you can set up the Stripe plugin. Go to Stripe to create an account.Note: Stripe has two environments (like Bubble) Live and Test. If both environment keys are set below, your Bubble app will use the development (test) keys in development and the Live keys in Live. Live Client IDEnter the Client ID from the Stripe Live environment. This information can be found in the Stripe Dashboard > Settings > Connect settings.Note: This key is only relevant if you will be using Stripe Connect functionality. Live Secret KeyEnter your Secret Key from the Stripe Live environment. This information can be found in the Stripe Dashboard > Developers > API Keys settings.Live Publishable KeyEnter your Publishable Key from the Stripe Live environment. This information can be found in the Stripe Dashboard > Developers > API Keys settings.Client ID - developmentEnter the Client ID from the Stripe Test environment. This information can be found in the Stripe Dashboard > Settings > Connect settings.Secret Key - developmentEnter your Secret Key from the Stripe Test environment. This information can be found in the Stripe Dashboard > Developers > API Keys settings.Publishable Key - developmentEnter your Publishable Key from the Stripe Test environment. This information can be found in the Stripe Dashboard > Developers > API Keys settings.Image for Stripe CheckoutAdd a default image to be included in your Stripe Checkout sessions. Name for Stripe CheckoutEnter a default product name that will appear in the checkout flow and in the email users receive from Stripe.Stripe Checkout VersionSelect the version of the Stripe Plugin that you will like to use. Note: v3 is strongly recommended as v2 relies on an outdated version of Stripe Checkout and is no longer supported.Collect the user's address with CheckoutCheck this box if you would like to collect the user's address when collecting a customer's payment information during a Checkout session. FAQCan I use a custom domain with Stripe checkoutYes, you can  choose to use a custom domain with Stripe Checkout and your Bubble app. This means you can send your customers to checkout.yourbubbleapp.com (or whatever subdomain you want to use) when they are transacting on your app instead of the default checkout.stripe.com. Note that Stripe charges an extra fee for custom domains.In order to get a custom domain working, you’ll want to follow the steps listed in Stripe’s documentation, namely:1.Adding your domain to the Stripe Dashboard2.Creating DNS records to point at Stripe3.Verifying your DNS setup4.Setting your domain as activeOn the Bubble side, the Bubble-created official Stripe Plugin supports this feature, so once you’ve set things up on the Stripe and the DNS side, they’ll work in your app as well as long as you are using Checkout v3 within the plugin. The following actions will be affected:Charge the current userSubscribe the user to a planCollect the user’s CC informationStripe and Privacy RulesPrivacy rules currently bundle certain fields under “Social Networks,” including Stripe customer data. If you would like to get the customer ID and subscription information, this field will need to be enabled. This privacy rule controls plugin-borne fields, most commonly social network signup fields. When you sign up with an OAuth provider like Facebook, for example, this controls your Facebook name and profile picture.Stripe and iFrames (v2)By default, iFrames are blocked for your Bubble application, which will cause the Stripe v2 checkout to navigate to a broken page on mobile if this setting is not updated.Android Webview (v2)The webview browser on Android is not supported by Stripe’s legacy Checkout (v2), which can make it fail. Given that the webview controls its own user agent, however, you can “pretend” that your browser is another one by setting your webview’s user agent to another browser’s, for example: Desktop Chrome webView.getSettings().setUserAgentString("any user agent string");iOS 9 webview webView.getSettings().setUserAgentString("Mozilla/5.0 (iPhone; CPU iPhone OS 9_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13E233 Safari/601.1");You can experiment with similar settings at the top of your Android application, if wrapping your Bubble app. Test Mode Plans vs Live Mode PlansIf both dev and live keys are set, your app will be interacting with Stripe's test environment when you are in development mode, and Stripe's live environment when you deploy to live. If your Stripe plan ids are different between your test mode and live mode, and you are selecting a plan id in dev, this can lead to errors in live as this plan id will not exist in this environment. Consider adjusting your Stripe plans to have matching ids between environments. If this is not possible, try dynamically setting the plan id with Isn't live version:formatted as text and set the text value of "yes" to the dev plan id and "no" to the live plan id. Language Support (v2)Stripe Plugin version v2 uses an older version of the Stripe Checkout API that has limited language support, including for languages like Portuguese. Consider upgrading to v3 for more robust language support. When an unsupported language is detected, v2 will default to English. PreviousStar RatingNextTinder-like ElementLast modified 23d agoCopy linkOn this pageCharge the current userPayer emailAmountNameDescriptionImageCurrencyButton captionStatement descriptorAuthorize the charge onlyThe payee of this transaction is another userTransaction payeeApp feeAllow promotion codes (v3) Add tax rate to checkout (v3)  Do not show success messageCollect the user's CC informationUpdate existing main cardDo not show success messageCharge a user using saved CCCharged userAmountCurrencyNameDescriptionImageThe payee of this transaction is another userTransaction payeeApp feeCard ID to chargeDo not show success messageCapture an authorized chargeCharge IDDo not show success messageCreate an invoice User Subscription IDAutomatic collection Update an invoiceInvoice IDDescriptionAuto advanceRegister the user as a sellerBusiness emailBusiness URLBusiness nameBusiness addressProduct categorySold products are physical productsProduct descriptionSubscribe the user to a planApply this action to the current userSubscribed userUpdate existing subscriptionSubscription ID (opt.)Dynamically specify planSubscription typePlan nameQuantitySubscription ItemsApply a coupon to this subscription (v2)Coupon IDAllow promotion codes (v3) Add tax rate to checkout (v3)  Tax percent (v2)End of the trialDo not show success messageUpdate Stripe Customer Apply this action to the current userSubscribed UserEmailAddressCreate a Stripe Coupon  Coupon NameAmount OffPercent OffDurationDuration in MonthsExpiration dateCurrencyMax redemptionApply a coupon to the user's subscriptionApply this action to the current userSubscribed userSubscription IDEnd of the trialDo not show success messageCreate an invoice itemUserAmountCurrencyDescriptionSubscription IDAdd tax rate to invoice item Pay an invoiceInvoice IDCancel an InvoiceInvoice IDStatusCancel the current user's planApply this action to the current userSubscribed userCancel all subscriptionsSubscription IDDo not show success messageCreate a subscription itemSubscription IDPlan nameQuantityUpdate a subscription itemSubscription Item IDPlan nameQuantityDelete a subscription itemSubscription Item IDMake a card new defaultCredit Card IDDelete a credit cardCredit Card IDRetrieve all user invoicesSet a user's credit balance UserAmountAdjust a user's credit balance  UserType of adjustmentAmountCurrencyTransfer to sellerAmountCurrencyDestination sellerDescriptionSource charge IDTransfer groupCreate payoutAmountCurrencyEnter API KeyCreate a Stripe value list itemValue list IDValueEnter API KeySetupLive Client IDLive Secret KeyLive Publishable KeyClient ID - developmentSecret Key - developmentPublishable Key - developmentImage for Stripe CheckoutName for Stripe CheckoutStripe Checkout VersionCollect the user's address with CheckoutFAQCan I use a custom domain with Stripe checkoutStripe and Privacy RulesStripe and iFrames (v2)Android Webview (v2)Test Mode Plans vs Live Mode PlansLanguage Support (v2)









SEO / metatags - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSEO / metatagsFacebook & TwitterFacebook & Twitter TitleThis is the title that Facebook and Twitter display when a user shares a link to the app on these social networks.Facebook & Twitter Site nameThis is how Facebook and Twitter name the site when a user shares it on these networks.Facebook & Twitter DescriptionThis is the description that Facebook and Twitter display below the title when a user shares a link to the app on these social networks.Thumbnail used for linksThis image is the thumbnail that Facebook displays when a user shares a link to the app. Since Facebook caches this information, you may have to trigger a refresh. Do this in the link 'Test/refresh data,' which is located below the image uploader.SEO settingsExpose the type of tags for text elementsCheck this box to customize text elements so that they have h1, h2, and h3 tags. Select the tag for each text element by editing the text's style.Caution: Do not include too many h1 tags per page.Enable canonical url Check this box to enable a Bubble-defined canonical url tag. A canonical url tag redirects users and search engines to your primary domain in order to prioritize its ranking in search results by avoiding duplicate urls.If you set up a custom domain for your app, this will also hide the built-in Bubble domain, in favor of the canonical custom domain.Customize robots.txt (advanced)By default, Bubble exposes a file that makes sure search engine crawl bots do not index the pages of the test version of the page. Check this box to customize this file, robots.txt.Warning: This is for SEO experts only. Know what you are doing before editing this file because it can impact your site's indexing.Expose a sitemap fileCheck this box to select pages to add to the sitemap. When checked, the page names display, allowing you to select the specific pages to include. If the page contains dynamic content (i.e. pages that have a specific type of content), then we will also include those dynamic pages in the sitemap. We automatically filter URL's for you based on Privacy Roles. To make sure an individual URL doesn’t show up in the sitemap, make sure that a non-logged-in user (e.g. Google’s crawler) doesn’t have "Find in Searches" permissions. We currently restrict sitemaps to contain at most 50,000 URLs per page, as per the sitemap specifications. If you exceed this limit, we will include the first 50,000 URLs in our sitemap.See Bubble's SEO tools​Note that a savvy outsider can see the list of all pages that exist in an app, even if a page isn't listed in the sitemap and even if there's a workflow on that page that redirects away visitors upon page load. In other words, you cannot hide the fact that a page exists, but you can of course protect what shows up on a page if somebody visits that page.Advanced settingsScript/meta tags in headerSome services require code to be pasted in the header of the page's HTML. Paste the code here. This is an advanced feature. Note: The only valid header tags are <script>, <meta>, and <link>. Any invalid header code will end up in the body due to automatic repair logic in most modern browsers. Whenever the HTML for your page is parsed by a browser like Google Chrome, it will detect any invalid HTML tag used in the headers, assume that this was a mistake, that the closing </head> tag was missing, and add that code to the body automatically with an opening tag.Script in the bodySome services require code to be pasted in the body of the page's HTML. Paste the code here.Warning: Be careful with what you add here as improper code added here can break your app.301 Redirections301 Redirections point previous URLs to new ones. Use this when migrating from another platform. For the redirection to work, these URLs must point to pages that do not exist in the app.Caution: This is an advanced feature.Hosting files in the root directorySome services require you to upload some files in the root directory of your site, usually to prove ownership. You can upload some files and define the filename that will represent them. Since filenames will be used to generate a URL, they cannot contain spaces or non-alphanumeric characters. Files will be accessible at yourdomain.com/version-test/filename or yourdomain.com/filename. Note that you should deploy to live to expose the files without /version-test/.Caution: This is an advanced feature.​​​​​​​​​​​​​​​PreviousLanguagesNextAPILast modified 3mo agoCopy linkOn this pageFacebook & TwitterFacebook & Twitter TitleFacebook & Twitter Site nameFacebook & Twitter DescriptionThumbnail used for linksSEO settingsExpose the type of tags for text elementsEnable canonical url Customize robots.txt (advanced)Expose a sitemap fileAdvanced settingsScript/meta tags in headerScript in the body301 RedirectionsHosting files in the root directory








Page Element - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPage ElementWatch this video to learn about the Page elementThe Page Element is the fundamental element that contains all the other elements.Type of contentThis property defines the type of thing the page should expect. Once set, you can refer to the Current page thing in the Bubble Editor. A typical use case of this feature is to create a profile page. Set the type of content to 'user,' and in each element of this page, you can refer to the Current page user's email, Current page uer's picture, etc. If you set a type of content to a page, all links pointing to that page should define a thing to send.Backup field for readable URLThis page represents a thing of the type defined as Type of content. If the current page's thing does not have a value for its Slug field then the field chosen here will be displayed in the URL. URLs for things without a value for their Slug field usually look like example.com/page/1449154312665x293260311940684900. To make this URL readable, select a field to define what to display in the URL. Usually, it will be a short text field, like a name or title. For example, choosing the field 'location' with a value of 'work,' the URL becomes example.com/page/work-1449154312665x293260311940684900.Page titleThis property defines how the page will be displayed in the browser. It can be dynamic by using the 'Insert dynamic data' button.This page is a native appCheck this box to build a native app and if you want this page to be the app submitted to the app stores. Clicking this checkbox displays a popup listing tips for building a native app.
Note: This feature is in beta.Native app nameEnter the name of the app to be displayed on the homepage of a user's phone.Mobile versionTo have a specific design for the page when loaded on a mobile device, select a page from this dropdown menu. Because the URL remains the same, this is transparent to the user.Container LayoutSelect the container layout type for the page (Fixed, Align to Parent, Row, or Column). Since the page itself is a container, all child elements on the page will inherit different layout controls depending on your selection. More on this can be found in the Containers section.Preset page widthSelect a preset width for the page from this dropdown menu so that the page fits the target device, e.g., laptop, mobile, or tablet. Changing the page width or height dimensions in the Bubble Editor changes this setting to 'Custom.'Width for UI BuilderSet a specific pixel value for the width of the screen while you are building. When designing responsively, this value is used to determine the dimensions of child elements that might rely on having knowledge of the page width. This value can be updated by setting a custom value or selecting a Preset page width.Title (for SEO / FB)Enter the title you want social networks to crawl when looking at the page. This title is displayed by Facebook, for instance, when the site is listed. It should be approximately 50–60 characters including spaces. If left blank, the title entered in the SEO & Metatags section in the Settings Tab will be used.Description (for SEO / FB)Enter the meta description you want Google to crawl when looking at the page. This description is displayed by Google or Bing when the site is listed. It should be less than 160 characters including spaces. If left blank, the description entered in the SEO & Metatags section in the Settings Tab will be used.Image (for FB)Choose a dynamic image for Facebook to display.Page HTML HeaderEnter any HTML to include in the Header. For example, Google's or Facebook's tracking code for conversion.
Warning: This is for advanced users only because it could break the page.Background styleSelect a background style from this dropdown menu to apply a backdrop. Choose from None, Flat color, Gradient, Image, and Video.Background colorChoose the background color for the page.Note: The background color only applies to the page element itself, not the true (browser html) page background. In certain instances, like a popup that is longer than the page element, this html page background color (default: white) will be exposed. Coming soon: Ability to set this html background color.Gradient styleChoose either Linear or Radial from this dropdown menu.Gradient directionChoose the orientation of the gradient from this dropdown menu. Selecting 'Custom' displays a Direction degrees field to set the direction in degrees.Direction degreesEnter a number between 0 and 360 for the direction of the gradient.Gradient shapeChoose Ellipse or Circle from this dropdown menu to define the shape of the gradient.Gradient baseSelect a screen location from this dropdown menu to determine where to base the gradient. Choose from Closest-side, Closest-corner, Farthest-side, and Farthest-corner.X Center Position (%)Enter a percentage to offset the gradient from the gradient base horizontally. 50% will center the gradient horizontally.Y Center Position (%)Enter a percentage to offset the gradient from the gradient base vertically. 50% will center the gradient vertically.Starting colorSelect the starting color of the gradient.Ending colorSelect the ending color of the gradient.Intermediate colorSelect an optional middle color of the gradient. If the input is empty, no intermediate color will be applied.Background imageUpload or choose a dynamic image to use for the background.
Tip: Use an image from our royalty-free library.Center the imageCenters the image when the user resizes the browser window.Make image as wide as parent elementIf the parent element is wider than the image selected, the image will automatically resize to cover the entire element.Repeat the image verticallyRepeat the image vertically if the image is smaller than the page's height.Repeat the image horizontallyRepeat the image horizontally if the image is narrower than the page's width.Background color if emptyWhen using a dynamic image, it may take a few milliseconds for the image to load. This color displays until the image loads. The default is transparent.Apply a parallax effect (desktop only)Check this box to scroll the background image more slowly than the elements on the page. This gives an impression of depth.Parallax speedChoose a number from this dropdown menu to control the depth effect of the parallax. With a value of 0, the image will not scroll. With a value of 1, the image will scroll at the same speed as the elements.Video fileUpload an mp4 file or choose a dynamic video to use for the background.Fallback imageOn mobile devices, videos are not displayed due to data usage limit concerns. Upload an image to use in this case.Play video silentCheck this box to show the video without sound.Stripes (deprecated)Define screen-wide stripes for the page.PreviousStatesNextPage Element (Legacy)Last modified 8mo agoWas this page helpful?Copy linkOn this pageType of contentBackup field for readable URLPage titleThis page is a native appNative app nameMobile versionContainer LayoutPreset page widthWidth for UI BuilderTitle (for SEO / FB)Description (for SEO / FB)Image (for FB)Page HTML HeaderBackground styleBackground colorGradient styleGradient directionDirection degreesGradient shapeGradient baseX Center Position (%)Y Center Position (%)Starting colorEnding colorIntermediate colorBackground imageCenter the imageMake image as wide as parent elementRepeat the image verticallyRepeat the image horizontallyBackground color if emptyApply a parallax effect (desktop only)Parallax speedVideo fileFallback imagePlay video silentStripes (deprecated)

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Plugins tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPlugins tabThe Plugins Tab extends the functionality of Bubble by installing and configuring plugins. Plugins add additional elements, events, actions, and data sources. These plugins are created by the Bubble Team and other Bubble users, and there are both free and paid plugins. Most external services connecting to the app, including payment providers such as Stripe, analytics providers such as Mixpanel and Google Analytics, and social networks such as Facebook, are packaged as plugins.You can see the gallery of available plugins with the "+ Add plugins" button. Any plugins already installed in the app are shown in the left column of this sub-tab. Clicking on a particular installed plugin will show any configuration settings of that plugin in the right section, along with an opportunity for you to leave a rating of that plugin for others in the marketplace to see. For more information to get started, see the "Using plugins" guide.Installed pluginsPlugin versionsMany plugins will be updated over time by their creators. If you have a plugin installed in your app, new versions of that plugin do not immediately take effect for your app; this is because new versions might have changes that would break older functionality that your app may rely on. Instead, you will see the option to change the version of the plugin in the Plugins tab, on the details of that particular plugin. This allows you to change to a different version in development mode, assess and fix any issues caused by the update as needed, and then deploy to live. Note that similarly, you can also choose to move to an older version of the plugin, though there is no guarantee the older version will be available to revert to forever.  Add pluginsClicking this button will open the plugin marketplace, where you can browse, install and subscribe to plugins in the Bubble ecosystem.TypesPlugins can extend various functionality of your Bubble app; these varying kinds of functionality are categorized in the "Types" filter. For example, "Action" refers to plugins that add new workflow action choices, while "Login service" is where you'd find plugins that let your end-users log in with an external website (e.g. "log in with Facebook"). A plugin can be categorized under varying types.CategoriesCategories are different use cases and themes that plugins are categorized by. The plugin author self-selects which category/ies to be listed under.PricingThe Bubble ecosystem has free as well as paid ("premium") plugins. For paid plugins, sometimes you will have the choice of paying a one-time price, or subscribing to the plugin for a monthly recurring price. Remember that plugins are installed and purchased on a per-app basis.Built byWe at Bubble have created a number of plugins to provide useful functionality to apps. Our ecosystem of Bubble users and developers have created even more plugins to help you!Practically speaking, if you find a bug with a Bubble-built plugin, the Bubble team will triage and respond to you about it. If you find a bug with an ecosystem-built plugin, you should reach out to the plugin's creator with information about the bug.SortingThe plugin gallery can be sorted by a number of different dimensions to help you more easily find plugins. You can sort by the plugin's name, usage (# of apps it's installed on), rating, publishing date, or price.PreviousStyles tab (Legacy)NextSettings tabLast modified 1yr agoWas this page helpful?Copy linkOn this pageInstalled pluginsPlugin versionsAdd pluginsTypesCategoriesPricingBuilt bySorting

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Template tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookLogs tabThe Logs Tab monitors activity when users interact with the app. It shows the overall usage statistics, allowing you to keep an eye on your plan limits. It also allows to you view individual server-side workflow runs, so you can see when users modify data or take other server actions, such as sending an email. Finally, you can view and manually cancel scheduled future workflow runs.CapacityThis sub-tab shows you various data around your app's capacity usage. In other words, it shows the general activity of users on your app and the computing resources used by your app. If you suspect that your app is slower than expected because you are capacity-constrained (since each app plan comes with a certain level of capacity), this is where you can investigate that.Server capacity usage and real time metricsThis section of the page shows you various metrics around your app's capacity. See article.Email preferencesBy default, Bubble will send you certain emails when we detect that capacity has hit certain thresholds. One option you have is "Do not send daily emails when the application hits its maximum capacity usage over the previous 24 hours" - this will suppress the corresponding email.In addition, you can choose to "Only send emails when the maxed-out period exceeds this duration (minutes)".Server capacity usage detailsThis section of the page shows you a breakdown of what parts of your app are using capacity in a given time period. Note that you can click on sections of the chart to go into deeper levels of detail. Also note that the chart represents the % breakdown of what capacity was used on - so the chart will total 100% in periods of high and low capacity usage. Workflow runs history and storageThis section shows summary stats on how many workflows have run this month as well as how much file storage your app is using. For workflow runs, note that the number does not include workflows that have run solely on the end-user's browser (on the client).Page load metricsThis section shows various metrics relating to pages of your app being loaded, including data that shows how much data is being loaded on those pages.These charts show metrics about your pages loading time. This data is gathered over the latest page loads by all your users over the last 60 minutes.Metric to displayYou can see three different kind of metrics:
– Page load duration: render complete The time in milliseconds from when the Bubble server first receives a request for a page, to when all elements on the page are finished rendering. This includes the time it takes for the server to process the request, latency between the server and the web browser, the time it takes to load all client-side javascript and css, and the time it takes the browser to draw the elements on the page.
– Page load duration: data loaded: The time in milliseconds from when the Bubble server first receives a request for a page, to when all the elements on the page are rendered, and all the dynamic data required by above-the-fold elements is fetched and displayed. This is equivalent to the "Page Loaded Above Fold" data source. It includes all the time included "Page load duration: render complete", plus the time to load data (such as Repeating Groups lists).
– Page load: count of data items required: This is the number of data Things loaded during the period tracked by the "Page load duration: data loaded" metric. It's an estimate of the total data the page requires in order for all the above-fold elements to finish loading. It's useful for investigating the impact that loading data (for instance, in Repeating Groups) is having on page load times.Percentile (%)You can choose to show averages over the best X percents. The best 1% will show the best performance, while 99% will show all situations.Server logsThe Server Logs section in the Logs Tab allows searches of the log of server-side actions, such as send email or change data, executed when users interacted with the app. Search for a particular user by email or ID, within certain dates, or specific keywords. Scroll down to automatically load older events in the results view.Basic filtering You can filter your application's logs with the following options: From date - Choose the earliest date for which you want to see events. Searches start at midnight of that day. If empty, the search continues until the day the app was created. Results are currently limited to the previous two weeks.To date - Choose the latest date for which you want to see events. Searches end at 11:59 pm of that day. If empty, the current date is used.User - Filter actions by a specific user by typing in the user's email or unique ID. If this field is empty, the data for all users is returned.Contains - Enter some text to search for. For example, to search for the word: mountain, type: mountain, without quotes. To search for the exact phrase: tallest mountain, type: tallest mountain with single quotes, 'tallest mountain.' To search for log entries containing either: tall or mountain, type: tall OR mountain, without quotes. OR must be in all caps. If this field is empty, all log entries are returned.Advanced filteringClick "Show advanced" to toggle additional search criteria, such as: Started running workflow - This marks the beginning of a workflow executingEvent condition passed - The event condition evaluated to true (or wasn't set), so Bubble is going to run the workflowEvent condition not passed - The event condition evaluated to false, so Bubble is going to end the workflowRunning action - Bubble is beginning to run a specific workflow actionAction condition failed - Bubble is ending the execution of a workflow action because the condition evaluation to falseWorkflow error - The workflow stopped running because of an errorAutobinding operation - A user modified data by editing an input that uses autobindingPlugin server side output - A server-side plugin action ran; this is the raw output, for use in debuggingPlugin server side error - A server-side plugin action failed with an error; this is the error, for use in debuggingScheduled task to run - Bubble scheduled a task to be executed at a future point in timeScheduled task completed - A scheduled task that was running finished executionHTTP request - The app made an outbound HTTP request to an external APIHTTP response - An outbound HTTP request the app made completed with the given responseRequest for API workflow - An API endpoint in our workflow API was calledSending email failed - Bubble was unable to send an email because of an error Server log entriesFor each log entry, you will see a number of fields:Name: the name of the item relevant to the log, which sometimes is what kind of log it is or the name of a specific workflow action, for exampleEmail: the email of the user associated with this log running, often the end-user causing the workflow / action to happenID: the unique ID of the user with the email aboveTimestamp: when the log happened, in your local timeMessage / properties: the body of the log, which gives information about that particular entry; the information available will depend on what kind of log it isSchedulerOne feature of Bubble is the ability to set a workflow to run later at a certain time or on a recurring basis going into the future. You can see any such scheduled future workflows on this sub-tab. Scheduler entriesEach result from the search represents a scheduled workflow that will run in the future. For each result, you see the following information:Scheduled time: when the workflow will run, represented in your local timeID: the ID of this scheduled workflow, which you can use, for example, to cancel that scheduled workflow from another workflowAPI event: the workflow that will runCurrent user: generally signifies which user caused this workflow to be scheduled (may not map to the user whose permissions will be applied when the workflow runs, as that can be configured in the definition of the workflow itself)Parameters: any parameters that workflow will run with, as expected in the definition of the workflowPreviousSettings tabNextTemplate tabLast modified 1yr agoWas this page helpful?Copy linkOn this pageCapacityServer capacity usage and real time metricsEmail preferencesServer capacity usage detailsWorkflow runs history and storagePage load metricsMetric to displayPercentile (%)Server logsBasic filtering Advanced filteringServer log entriesSchedulerScheduler entries

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Authentication - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe Data APIAuthenticationData API endpointsData API requestsThe Workflow APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAuthenticationThis reference entry covers how to authenticate with  the Bubble Data APIThis is the short-form technical reference entry of the Bubble API authentication methods. If you are looking for more in-depth and long-form articles on how the Bubble API works, you may be interested in checking the Bubble API manual.Authenticating as an adminUsing an API Token gives a client full administrator access to your database. This means that privacy rules are ignored and the client gets the same access level that an admin gets in the Bubble editor.To generate an API token go to Settings - API and click the ‘Generate a new API token’ button. This will generate a 32-character token consisting of a combination of numbers and letters. To use the token in an API request, include it in the Authorization header of the request as a bearer token:Authorization: Bearer <token>API Token LabelThe API Token Label field lets you give each API Token a descriptive name. The label is visible only in the Bubble editor and does not affect the Data API in any way.Private KeyThis is the 32-character token used by the client to authenticate.Regenerate private keyClicking this button will generate a new API token using the same label. Note that the new token will replace the old one. If you want to create an additional new token, use the ‘Generate a new API token’ button instead.Authenticating as a UserAuthenticating as a User gives a client access to your database with the same privileges as that User has, as defined in the privacy rules.To authenticate as a User, set up an API Workflow with a ‘Log the User in’ action. Bubble will return a token in the JSON that can be used for subsequent calls.
Manual entriesThe Bubble manual gives extended information about Bubble's features and how to use them.How to set up authentication in an external appBubble uses the bearer token method to authenticate the client in incoming API requests.

Article: How to set up authentication in an external app​The different Bubble API authentication methodsThe Bubble API allows for different ways of authenticating the client in incoming API requests:

Article: Accessing the Bubble API without authentication
Article: Accessing the Bubble API authenticated as a User
Article: Accessing the Bubble API authenticated as an admin​PreviousThe Data APINextData API endpointsLast modified 1mo agoCopy linkOn this pageAuthenticating as an adminAPI Token LabelPrivate KeyRegenerate private keyAuthenticating as a User
Manual entries








Supported browsers - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSupported browsersApps in run-mode(This section will take effect in Q2 2021, with the public release of the new responsive engine - see forum thread.)Because the Bubble framework utilizes certain web technologies that are not compatible across all older browsers, the Bubble product offers official support for certain browsers and versions. Note that this applies to apps in run-mode - in other words, this impacts the end-users of your Bubble app.Bubble's browser support can be summarized as:Bubble officially supports Edge, Firefox, Chrome and Safari on web and mobile webWe encourage end-users to upgrade these browsers to the latest version widely available. Note that the supported browsers come with auto-update functionality; this is relevant in this case because when a new version of a browser breaks something, there will often be a fast follow-up version that fixes that bugWith the supported browsers, we will consider any bugs that only affect older versions of those browsers, but we do not guarantee we will fix themWhen an end-user uses an older version that is not explicitly supported above, many (if not most or all) of an app will still work. Specifically, browser support generally affects how your app is displayed, and generally leaves the workings of your workflows and database untouched. (This is a general rule of thumb - especially as technology changes over time, there may be more exceptions to this in the future.)Technical background:For example, the new responsive engine to be released in 2021 utilizes CSS Grid, a modern framework, for laying out the elements on a page - this is not supported by Internet Explorer. CSS Grid is used for rendering repeating groups with certain properties, so these specific repeating groups might not render correctly on Internet Explorer.Edit-mode, i.e. the Bubble editorEdit-mode is what you, the Bubble user, see to edit your app. This is not visible to end-users of the app.Bubble supports the latest version of Edge, Firefox, Chrome and Safari for edit-mode. We highly encourage Bubble users to upgrade these browsers to the latest version widely available. We generally will not explicitly support older versions of these browsers.PreviousUsing Server LogsNext - User manualOptimizing an ApplicationLast modified 1yr agoWas this page helpful?Copy linkOn this pageApps in run-modeEdit-mode, i.e. the Bubble editor

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Performance & Scaling - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPerformance & ScalingThe Bubble team is constantly looking to optimize scalability and performance. This means improvements to both the Bubble platform to handle all the thousands of Bubble apps (our scalability and performance), as well as to the platform so that Bubble apps provide a good experience for their end-users.Performance and scaling of a Bubble app are heavily impacted by how the app is built. This page will give an overview of app performance and scalability as well as offer some concrete tips.General principles & tips about performanceThe less data being fetched, the faster the performance - a page often needs to fetch some data on page load; a page that fetches 100 things on page load will load faster than a page that fetches 1 million data items; similarly, fetching simple data types like numbers will be faster than fetching MBs of dataSimilarly, having many small, simple pages will be faster than having fewer, complex pagesKeep any sorting or filtering as close to the original search as possible - Bubble already optimizes database queries in many ways, but performing a sort or filter at the database level is very efficient. This means that queries that apply :sort or :filter to them will tend to be more efficient than queries with sorting or filtering after some other kind of manipulation of the results (example: doing search:count will be more efficient than search:group by:count)Using advanced filters can slow queries down - An underlying principle is that if a filter (or sort) can be done "on the database", it will be faster than a filter (or sort) that Bubble has to do after retrieving an initial set of data from the database. Which filters are done on the database vs. not? Filters which show up in the Search palette (the additional sidebar which slides out when you click "Do a search for") are done on the database and are thus are generally fast. Filters which are applied with :filter are generally "advanced" filters that are generally slower.Chained queries run in series, not in parallel - With Bubble it's possible to use the results of one search as the constraints of another search, and so on. These searches run in series, not in parallel, so if the first search returns a lot of data, that will slow the second search down, and so onBubble already does a lot of performance optimization - Bubble tries to run queries on the database, resize images on the server, tell the browser to cache Javascript, etc. as appropriate. If you're running a query that feels relatively simple and retrieves a relatively small amount of data that's running very slowly, check if there is some optimization that can be done to the app's data hierarchy or queries, based on some of the guidance hereIn general, the simpler way to express a query is faster - Not always true but a good rule of thumb. Bubble is constantly working on database optimizations for the most common patternsAvoid modifying data on every page load - Changing element states is more performant than making additional database calls to accomplish the same behaviorTry moving expensive calculations to behind-the-scenes scheduled workflows - A scheduled workflow can run the heavy query then save the result somewhere to use later; this is more performant than running the heavy query on a page loadUse the "Make changes to a list of X" workflow action cautiously - This action is great when making a quick change to a short list of things, but as the number in the list grows, it quickly raises the risk of the workflow timing out. If you're experiencing timeouts with this action, consider instead "Schedule API Workflow on a list", which is more performant because it takes the list and schedules an API Workflow to run on each item of the list, separately (i.e. lowering the risk of a timeout)Watch out! Your Bubble app's database is very flexible and powerful. It can store a lot - but if you try to store too much data in one field, it can lead to performance issues relating to that field. For example, if you have a Blog data type with a field for Contents, this should be able to handle blog posts just fine. But, if you try to stuff all the contents from Wikipedia into that one field, it probably will not work as well! More realistically, if you try to store a base64-encoded image (which is a lot of text) in a text field, this can lead to slower performance and unexpected behavior.What happens on page load?Here is a rough sequence of events of what happens when Bubble loads a page:1.Bubble sends the code for all the elements (visible and invisible)2.Bubble draws all the visible elements on the page3.Bubble fetches all the dynamic data needed for the visible elementsThis means:Invisible elements aren't drawn until they get displayed later......unless a visible item refers to an invisible item's data source. (Note that using one visible element to cover another visible one does not make the latter one "invisible" in this context!)For page load speed, the number of elements is a bigger factor than the type of elementsAll the element types are fairly similar to each other in terms of performance, with two exceptions:1.Repeating groups load different amounts of data depending on the Layout Style property; notes on performance of the different choices are in the Reference. Note also that the more elements there are in each cell of the repeating group, the more time it takes to render the page1.A repeating group with 10 cells each with 2 elements is faster than 20 separate elements, but slower than 3 elements2.A nested repeating group has a multiplicative effect on the number of elements!2.Plugins have their code included on each page load regardless if it's used. This isn't as big a performance impact because Bubble won't render the plugin if it's not used, but in general, it's a good idea to uninstall plugins that the app isn't usingAdditional notes about performanceThe power of reuse:If a page has the same search in more than one place, Bubble will automatically combine them to run the query onceLeveraging Styles helps improve performanceThe first few times you run a particularly heavy search might be a bit slower than future runs, because after Bubble sees a heavy query run a few times, Bubble builds an index that should massively speed up the search in the future (building the index could take up to an hour or so)X vs Y:An action that changes a dozen fields is more efficient than a dozen actions that change one fieldChanging a list of things is fast for relatively small lists, but for bigger lists, an API workflow will be more scalable since it doesn't run the risk of timing out the workflowWhen changing a (large) list, recursively calling an API workflow for subsequent items on the list is more scalable, though a bit slower, than running the API workflow on the entire list at onceNavigating to a new page via a link element is generally a little bit faster, because workflow actions that navigate will wait on other workflows to save data before changing the pageFor situations where data type A has connections to multiple Bs (e.g. posts having categories but only one category per post; A = category, B = post), having a field on B that references the A it belongs to is generally better. Having a field on A that lists out all the Bs that belong to it is not going to work as well when that list can get very longFor API workflows, the number of items the workflow has to act upon is a bigger impact on performance than the size of each itemCapacityIn non-technical terms, "capacity" measures how much "stuff" your app can do in a given period of time. A user coming to your website uses a bit of capacity; having hordes of users coming to your website uses much more capacity. Calling the database uses capacity; performing lots of heavy database queries uses much more capacity. Running certain workflows (the ones that happen on the server) uses capacity, and similarly calling an app's APIs uses capacity.Throughout Bubble, there are references to "units" of capacity. A "unit" is a weighted measure of different scarce resources that Bubble's systems use; it includes factors like server CPU time, database CPU time, other backend systems, and more. The exact formula for a "unit" will change over time as Bubble adds, removes or improves backend systems; one of Bubble's goals is to improve the amount of user-facing performance that a unit of capacity delivers.On certain Bubble pricing tiers (namely Free and Personal), the app will have "Basic" server capacity, which means it's sharing the same computing resources with all other Bubble apps of these tiers. When an app is upgraded to the "Professional" and "Production" tiers, the app gets dedicated or "reserved" units of capacity which are reserved for that app. When capacity is exceeded, the app is rate-limited; again in non-technical terms, it means the app won't be able to do as much "stuff" in a given period of time, and users' requests on the app will effectively be slowed down. Thus, having more capacity generally means that the app can do more "stuff" if a lot of "stuff" is going on.There's a slight twist to this. Capacity can be compared to how many checkout lines there are at a grocery store. If the store adds more lines, it can handle more customers checking out at the same time. But, if a customer comes along with a cart of hundreds of items, that customer will still take up a whole checkout line for a while; also, having more checkout lines doesn't mean that resource-intensive customer will finish faster. Similarly, having more capacity won't make a very complex database query run that much faster - it's like that one customer checking out with a lot of items in their cart. (There is a caveat to this: if Bubble detects that a large query will eat up all of an app's capacity, Bubble will slow down that query to try to maintain a reasonable user experience for the rest of the app. Thus, in certain situations, adding capacity might make a large query run faster.)Users can see how much capacity their apps are using by going to Logs on the left-side nav. The first chart shows how much time the app has hit its maximum capacity; the second chart shows how much capacity has been used by the app relative to its maximum capacity. Further down on the page is the server capacity usage details chart, which shows the breakdown of capacity used by different parts of the app within the past 24 hours. If an app is slow and is hitting capacity limits, purchasing reserved additional capacity may help.Note: Our server logging provider, AppOptics, has limits on the metric we use for the Maximum Capacity charts. Very high-activity Bubble apps may hit this limit when trying to query the logs for a long time period (i.e. 30 days). If this happens in your app, consider setting the chart date range to a shorter duration (i.e. 7 days).What about dedicated instances?Dedicated instances can help with performance in three primary ways:1.Geography - a dedicated instance can be located geographically closer to your users, which helps with the performance of large static assets2.Heavy data operations - these can be substantially faster on a dedicated instance3.Stability - with dedicated instances you can test an app on the main Bubble cluster before upgrading the dedicated instance; this can be useful for ensuring an app's stability with a new version of Bubble, as well as eliminate the risk of a Bubble-wide outageIf you're interested in hosting your app on a Dedicated instance of Bubble and want to learn more, please contact our sales team here.In closingAt the end of the day, the above are general guidelines that are meant to provide some transparency into factors impacting performance. However, these are only guidelines; if performance is critical in a particular case for your app, try testing different approaches empirically to see what's faster!
​PreviousBubble App Security Best PracticesNextCapacity UsageLast modified 3mo agoWas this page helpful?Copy linkOn this pageGeneral principles & tips about performanceWhat happens on page load?Additional notes about performanceCapacityWhat about dedicated instances?In closing

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





iTunes - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookiTunesFetch song names, artists, and other data from the iTunes API. Note: This call is blocked on iOS.Get data from external API - Get iTunes songsWhen fetching a list of songs to display, this data source can be used to search for songs within the iTunes library.Term to searchThe search query used to fetch a relevant list of iTunes songs.Dynamic text operatorsiTunes song’s ArtistThe artist's name of the iTunes song.iTunes song’s Track titleThe title of the iTunes song.iTunes song’s Album titleThe album title that the iTunes song belongs to.iTunes song’s URLThe Apple Music URL to play the current song.iTunes song’s CountryThe country of origin for the creator of this song.iTunes song’s Album imageThe album image featured for the iTunes song.SetupAfter installing the iTunes plugin, it’s possible to display a list of song results by adding a repeating group to your application page.When configuring the repeating group, set the type of content to be ‘iTunes Song’. Then, for the data source, use the ‘get data from external API’ option.The API provider you’ll need to select is the ‘Get iTunes songs’ choice.Now, you can match a search term with any static or dynamic text value.

From here, it’s possible to add a list of dynamic elements into the repeating group’s cell.Simply choose the ‘current cell’s iTunes songs’ operator to display the results of a search query.

FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)PreviousIpiphyNextSlidebar MenuLast modified 1yr agoCopy linkOn this pageGet data from external API - Get iTunes songsTerm to searchDynamic text operatorsiTunes song’s ArtistiTunes song’s Track titleiTunes song’s Album titleiTunes song’s URLiTunes song’s CountryiTunes song’s Album imageSetupFAQ









Bubble-made Plugins - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble-made PluginsThis section covers all of the Bubble made plugins and their parameters. Some of the special plugins like the API Connector, App Connector, and SQL Database Connector have guides in the Help Guides section, while others have tutorials within here, where each bubble-made plugin is listed in alphabetical order.AddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoPreviousAdding callsNextAddtoAny Share ButtonsLast modified 1yr agoCopy link









Dedicated Plans - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBenefits of DedicatedUsing DedicatedBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDedicated PlansBubble offers a dedicated hosting plan, where we host your app on infrastructure isolated from other Bubble customers. In this section, you will learn all about Dedicated. If you are interested in Dedicated, please contact our sales team here.Benefits of DedicatedUsing Dedicated​PreviousSelling on the MarketplaceNextBenefits of DedicatedLast modified 6mo agoCopy link









Slack - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSlackThe Slack plugin can be used to interact with your Slack workspace from a Bubble app. You can log in with Slack, as well as dynamically post messages, set reminders, and more using Bubble workflows.Get Slack Bot Data Retrieve data from Slack, such as your workspace’s team members or list of channels. Post to channel as userChannel ID The identifier for your channel; you can find this in the channel’s URL, for example, https://yourworkspacename.slack.com/archives/channelID, where “channelID” is the ID.Message The content for your post to the channel. Post to channel as botThe identifier for your channel; you can find this in the channel’s URL, for example, https://yourworkspacename.slack.com/archives/channelID, where “channelID” is the ID.MessageThe content for the bot’s post to the channel. Send a message as userRecipient User ID The identifier for the user to receive the message; one option to find this by viewing the user’s profile, clicking “More,” then selecting the option to “Copy member ID.” MessageThe content for your message to the user. Add a teammate to a Slack channelChannel IDThe identifier for your channel; you can find this in the channel’s URL, for example, https://yourworkspacename.slack.com/archives/channelID, where “channelID” is the ID.Teammate IDThe identifier for the user to receive the message; one option to find this by viewing the user’s profile, clicking “More,” then selecting the option to “Copy member ID.” Set a Slack reminderReminder Text Content of the reminderReminder TimeWhen the reminder should be sentSetupCreate your Slack appNavigate to the Slack API page and log in with or sign up for a Slack workspace. Once you’ve successfully logged in, create a new Slack app. You can do this by clicking the “Your Apps” button in the upper right corner of the dashboard screen, then clicking “Create New App”.Bubble plugin setupInstall the Slack plugin in the Plugins tab of the Bubble editor.Return to your Slack app dashboard to find your Client ID and Client Secret. These credentials can be found on the main page of your Slack app dashboard, under the “Basic Settings” tab in the Slack menu.Workspace installation, Oauth Setup, & ScopesThe next step will be to install your app in your Slack workspace and set up your Slack permissions scopes in your Slack app. Do this by navigating to the “OAuth & Permissions” tab in your Slack app dashboard.You will need to set up at least one  “permission scope” before installing your app. Setting up OAuth scopes will determine which data and actions your app will have access to. In order to use the Slack plugin most successfully, include all of the following user and bot scopes.For User scopes, include:For Bot scopes, include:Finally, set up redirect URLs in your Slack app. This should be the same redirect URL as the one you set up in the Plugins tab, whether you’ve opted to use the default or provided a custom redirect URL.You’re all set up, and you should now be able to access your Slack workspace from your Bubble app!Slack Workspaces & Existing AccountsIf you wish to create a new user account with Slack OAuth, you can do so by using the “signup/login with a social network” workflow action and selecting Slack.You can also connect a Slack workspace with an existing Bubble app account. In order to do this, a user must already be logged in, then go through the OAuth flow with a Slack account that matches the email address they already signed up with. This will allow an existing user of your app to access their Slack workspace without creating a whole new account.Users can also switch between Slack workspaces by doing this. If they are already logged in and then go through the OAuth workflow, they can select a different Slack workspace to connect to. After they go through the flow, their account will be associated with that new workspace.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)PreviousSelectPDFNextSegmentLast modified 1yr agoCopy linkOn this pageGet Slack Bot Data Post to channel as userChannel ID Message Post to channel as botMessageSend a message as userRecipient User ID MessageAdd a teammate to a Slack channelChannel IDTeammate IDSet a Slack reminderReminder Text Reminder TimeSetupCreate your Slack appBubble plugin setupWorkspace installation, Oauth Setup, & ScopesSlack Workspaces & Existing AccountsFAQ









Data API endpoints - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe Data APIAuthenticationData API endpointsData API requestsThe Workflow APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookData API endpointsThis section describes how to identify the correct endpoints when using the Data APIYou can find the API endpoint for your application in Settings - API.Data API Root URLThe root URL of your application is structured as follows:https://appname.bubbleapps.io/api/1.1/obj/typenameor if you have registered a domain:https://yourdomain.com/api/1.1/obj/typenameWhere the following variables are replaced to construct the final endpoint:VariableContentCommentappname:the name of your applicationIf you have not registered a domainyourdomain.comThe domain of your applicationIf you have registered a domaintypenamethe name of the data type you are accessingUse the data type name, but in lowercase and with spaces removed.App versions and Data API URLThe different versions of your app will have different URLs. Developer versionThe developer version of your application will have the version-test string included:https://appname.bubbleapps.io/version-test/api/1.1/obj/typenameorhttps://yourdomain.com/version-test/api/1.1/obj/typenameLive versionshttps://yourdomain.com/api/1.1/obj/typenameorhttps://appname.bubbleapps.io/api/1.1/obj/typenameThe URL in Settings - API will show the root URL of the version you are currently working on.​The typenameThe typename in the URL represents the data type you want to interact with. We highly recommend that you give all your data types a unique name, especially if you are using the Data API. If two data types share the same name, the Data API will return the first one it finds.The typename is converted to a URL friendly format by removing spaces and setting it to lowercase. For example:Data Type name: Rental UnitTypename: rentalunitEndpoint URL: https://appname.bubbleapps.io/api/1.1/obj/rentalunitYou can read more about the formatting of type names in this article.​PreviousAuthenticationNextData API requestsLast modified 1mo agoCopy linkOn this pageData API Root URLApp versions and Data API URLDeveloper versionLive versionsThe typename









The API Connector - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe API ConnectorAuthenticationAdding callsBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe API ConnectorThe API Connector allows you to set up connections to external APIs from your Bubble application.IntroductionThe API Connector is a Bubble-developed plugin that lets you connect to almost any external API from your Bubble application. You can set up headers, parameters and a call, and each call can be set up to be used as an action in your app or asa a data source.Response formatThe API Connector expects a correctly formatted JSON body as a response.How calls are sentAPI Calls made with the API Connector are routed through Bubble's server unless specifically set not to do so (see article below).​Check this box to allow this API call to run directly from the browser, rather than Bubble's server. This option will only available in certain situations. More specifically, this option is only available for public API calls (Authentication is set to None) with no Headers or private Parameters. In addition, the call must be used as a data call. Support for Use as Action is coming soon. The biggest benefit of using this option, on top of performance, is that your API call will not count against API call quotas across all of Bubble, lessening the risk of accidental rate limiting by a 3rd party API.Note: API Connecter calls are by default sent from the Bubble server (for non-dedicated Bubble apps) and thus susceptible to 3rd party API rate limiting since the rate limit is shared across all Bubble apps. Consider sending the call from the browser, when appropriate, if rate limiting is a concern. The API Connector allows you to connect to almost any external API from Bubble. It expects a correctly formatted JSON body as a response. You can supply headers, parameters, and a call body. The API calls created can be used as actions or consumed as data. When used as data, they appear in the dropdown menu for "Get data from an external API" when "Insert dynamic data" is clicked. When used as actions, they appear in the Plugins section of the Actions dropdown menu.Once you configure an API call, you need to initialize it. If you don't, it will not appear in the Bubble Editor. Please note that initializing a call actually runs/executes it. If a call deletes an item or creates an item that requires a unique id, the Initialize call button will, if successful, delete or create the item. Thus, the next call will likely fail since the item already exists or was deleted. To initialize an API call with mandatory parameters and no sensible default, you can set a default as an example, click to   “Initialize,” then unset the default.An API call's URL is never sent to the user's browser. Call headers and parameters are only sent to the user's browser if you mark them as 'client safe.' Parameters, such as a secret API key or password, should never be marked as client safe. If you mark a parameter as client safe, you will be able to assign it dynamically in the Bubble Editor. A search term in a search query is a good example of a client-safe parameter. The call's body is sent to the user, thus it is not client safe. When you post a JSON body, you must create a header with key 'Content-Type' and value 'application/json.'To learn more, we put together a video tutorial on how to use the Etsy API and another that shows how to create a Body Mass Index calculator.Note: API Connecter calls are by default sent from the Bubble server (for non-dedicated Bubble apps) and thus susceptible to 3rd party API rate limiting since the rate limit is shared across all Bubble apps. Consider sending the call from the browser, when appropriate, if rate limiting is a concern. Note that even though by default, API calls are made from the server, a description of the call is sent to the browser and are thus visible to a savvy user. This means that any sensitive parts of the call, especially secrets / tokens, should be in fields marked "Private".​Installing the API ConnectorThe API Connector can be found in the plugin gallery from the Plugins tab like any other plugin. You can find it quickly by searching for the string API Connector.Once installed on your app, the plugin then requires further configuration for each API and each call desired. The API Connector can handle as many APIs and calls per API as needed.FAQHow do I know how to authenticate and set up calls?Most API providers have documentation available online that gives you the technical details needed to authenticate and set up the call correctly. Still, setting up API connections can in some cases be among the more technically challenging parts of Bubble development.Our introductory article on APIs can serve as a starting point to learn how APIs work in general. You may also be interested in checking our long-form article on How to use the AP Connector and you can check out our example case where we set up a connection with Google Cloud.Lastly, you may find it easier to set up and test a call in a service like Postman before setting it up in Bubble. You can export a successful call from Postman as a cURL command and import it into the API Connector.Most API providers have documentation for their API, including on the topic of authentication, which can be trickyThe API provider's documentation may show you "cURL commands" as examples of the various calls (these can be identified if you see code that starts with the command curl). The API Connector has a feature to import cURL commands, so you can copy and paste from the documentation to get a big head start on setting up a particular callDefault values for an API connector call (or plugin) behave differently if they are optional or mandatory. Optional default values are placeholders that aren't passed to a call unless they're changed to something else in the app. Mandatory default values are actual default values.Stuck? Try asking the forum for help or seeing if there is a post from somebody else about that API providerThings to noteThe API Connector currently does not support non-utf8 encodings. All API calls return bytes of data, which must be interpreted by clients like Bubble servers or your internet browser. The oldest, and most popular encoding standard, is called ASCII, for easily translating these bytes into text characters. As a part of this standard, the most widespread encoding format for special characters is 'UTF-8'.Because 'UTF-8' is so widely adopted, Bubble does not support any other text encodings.Note: When using the API Connector or App Connector, parameters currently cannot be a 'raw' list of Bubble Things, e.g. a dynamic statement that results in a List of Things.This is because a raw list of Bubble Things is not rendered in the kind of text formatting that API endpoints expect. One workaround for this is to use the ":join with" operator on the list of Bubble Things to turn it into a format accepted by the API endpoint (this is likely a format like ["first thing", "second thing"]).PreviousThe Workflow APINextAuthenticationLast modified 1mo agoCopy linkOn this pageIntroductionResponse formatHow calls are sentInstalling the API ConnectorFAQHow do I know how to authenticate and set up calls?Things to note








Supported browsers - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookUsing Server LogsWhile the Debugger lets you to test and debug the current situation, server logs enable you to explore issues in the past. That is what the Server Logs feature is for. It lets you see past executions of workflow runs that happened on the server. Searching logsThe Server Logs section in the Logs tab allows searches of the log of server-side actions, such as send email or change data, executed when users interacted with the app. Search for a particular user by email or ID, within certain dates, or specific keywords.  Note that server logs depend on the version of your app, so you should make sure you are focusing on the version where the issue was reported (Live versus Development). To search logs, you need to define the starting and the ending dates of the search. Searching logs can take some time, and the Editor will display entries as they arrive. When you already see some results and scroll down, the editor will fetch more entries (and the caption of the search button will change according to the situation).If your app has a lot of traffic, you'll see a lot of logs. It is useful to narrow down the search by using some search criteria. The most common criteria you can use when searching for logs is picking the type of events you're interested in.Workflow starts: shows all initiated workflows that run on the server, whether the condition is met and the workflow is executed, or not.Passed events: shows all workflows that run after the condition evaluated to yes.Non-passed events: shows all workflows that didn't run after the condition evaluated to no. This is useful as you try to debug something that didn't happen.Actions: only shows actions, and not the events that led to this action's execution.Errors: shows server-side errors that happened when executing a workflow. For instance, a credit card failure, or a send email failure. This will be especially useful to diagnose issues.TipIf your app has a lot of activity, chances are it has a lot of logs. If you're searching through the logs and the query is slow or timing out, try narrowing the time window of your search.When you search for logs, if you have more information about the problematic workflows, you can narrow down the search even more by searching for specific users and terms. The first input lets you enter a user's email or a user's unique ID. When this is filled, the search will only return workflows started by this user.The last box lets you type a string that you want to search for. If an action has a property that evaluated to some text and if you search for this text, the workflow will be retrieved. For instance, if you know an email was sent with the text 'Boston' in it, searching for 'Boston' will return the Send Email action.Looking at resultsOnce results are retrieved, they will be displayed in the results area, starting from the more recent events. For each entry, you'll see the name of the action/event, the email and the ID of the user (if the user isn't signed up, the email will be 'Anonymous user'), and you'll see on the right part the evaluation of the properties for this action, event, or the error message if it's an error. When you click on the action name (or of the event), you'll be taken to the place in the editor where this action is defined. A button 'zoom on this workflow' is a handy way to only show events, actions and errors for the current workflow. Seeing the succession of actions can be a good way to understand what happened and identify a pattern.PreviousUsing The DebuggerNextSupported browsersLast modified 1yr agoWas this page helpful?Copy linkOn this pageSearching logsLooking at results

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Bubble App Connector - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble App ConnectorThe App Connector connects two Bubble apps and accesses the API and data of one app in another. By doing so, you can sign up with OAuth with another app, run workflows as the user, etc.To make this work, set up an API with the first app A before using it in app B. To enable users to sign up with app A in app B, define some OAuth credentials in app A. Once this is done, install the Bubble App Connector and add app A in app B.Once you've added an app and installed some calls, you can use them either as a data source in 'Get data from API' or as actions in workflows.App domainEnter the domain of the app. It should be similar to https://appdomain.com or https://appname.bubbleapps.io, i.e., without a page. Using this domain, Bubble will automatically fetch the metadata of the app.Note: Be sure to use the bare domain (no 'www'), as including the 'www' can lead to unexpected behavior when using the App Connector in workflows. Match versions (Live vs Dev.)Check this box when you want the test version of app A to interact with the test version of app B. Typically, this box is checked.App nameThis is how to describe the app within the Bubble Editor. By default, this is the app name, but it can be renamed. This is important when referring to the different calls in the Bubble Editor.Private keyEnter the Private key generated in the API section in the Settings Tab of the app you want to connect with.Client IDEnter the Client ID of the app for OAuth purposes.Client secretEnter the Client secret of the app for OAuth purposes.Call nameSelect the call to install. It can either be an API Workflow or GET call.Call typeSelect whether to use the call as a data source or action. Normally, API Workflows will be actions, and GET calls will be data sources, but in some cases it may be different. For example, when an API Workflow returns data.AuthenticationSelect which type of authentication you want to call to run. If you select Private key, it will run as an admin in the second app. If you select OAuth and enter a Client ID and Client secret, calls will run as the current user after signing up with OAuth. In this case, privacy rules, etc. will apply as the user. No authentication will run calls without any credentials.Refresh app metadataTo modify both apps at the same time, click this button to refresh the data.SetupWhen you get started with the App Connector, you will have 2 apps: App A (which can be your main app) App B (which can be your sub app and you can add as many as you like)App A (main) is where most data operations and workflow executions usually happen. App A will be where the data is stored and data needs to be exposed through an endpoint while App B (sub) is used to drive those workflows and pull data from App A (main).First, we start by setting up app A (main) to give us the right access level (Private Key), allow sharing workflows (expose workflow API) and data (expose Data API), and something like an ID card to tell App A who is talking to it (Client ID & Secret). Then in App A (main) you setup actual workflows to signup but it can be other workflows too like charging a customer or sending them emails. Next, you use the App Connector plugin in App B (sub) to control A (main) by showing your ID, confirming your access level and then telling it what to do.Here is how we make this happen: Setup a signup workflow in app A (main app)

App A main workflowIn App A settings > API tab, enable ‘"This app exposes a Data API" and "Workflow API." Create a new API token and notice the Private Key, then set the login page as the one containing your signup popup.Add a new 3rd party app with name (such as app B’s name) and Redirect URI which should be the landing page back in App B.Notice Client ID and Secret – you will need this later.App A main settingsBack in app B, install the App Connector Plugin.Add a new Bubble app within the plugin with following details:App domain: yourappname.bubbleapps.io (use custom domain if applicable)Enable match versionsPrivate key – get from previous stepClient ID & Secret – get from previous step App B sub app connector settingsIn App B landing page, create a login buttonSet the workflow to account > signup/login with a social network, then choose "Bubble app - app name" as the OAuth provider.App B sub login button for userYou’re all setTry App B in run-mode > click login > you will get redirected to signup page on App A. Once logged in, you will get redirected to App B landing page and the user’s login details will be stored on both apps. Note that login is "User" type data that is special in that it gets stored in both apps. Any workflows you drive from the App Connector for App A (main) will run in App A and store data only in App A.If you want to pull non-user Data from App A (main) into App B (sub), the "expose Data API" will now be useful. You will expose that data type from App A (main) settings and then be able to select it from the app connector under add a call / Installed calls and then use it in elements within App B (sub) like any other "Do a search." App B sub adding callsFor each call in step 7, select "Action" in "Use as" for workflows and ‘"Data" for pulling a data type.For both workflows and data, typically set authentication as "OAuth" as this requires user signup and sets access through roles defined in the Privacy Settings of the app while "API key" grants admin access and "none" gives bare minimum access. FAQNote: When using the API Connector or App Connector, parameters currently cannot be a 'raw' list of Bubble Things, e.g. a dynamic statement that results in a List of Things. This is because a raw list of Bubble Things is not rendered in the kind of text formatting that API endpoints expect. One workaround for this is to use the ":join with" operator on the list of Bubble Things to turn it into a format accepted by the API endpoint (this is likely a format like ["first thing", "second thing"]).​PreviousBraintreeNextChart.jsLast modified 1yr agoCopy linkOn this pageApp domainMatch versions (Live vs Dev.)App namePrivate keyClient IDClient secretCall nameCall typeAuthenticationRefresh app metadataSetupSetup a signup workflow in app A (main app)
Back in app B, install the App Connector Plugin.In App B landing page, create a login buttonYou’re all setFAQ









Containers (Legacy) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookContainers (Legacy)GroupGroups are elements that contain other elements. A group has two roles. First, a group gathers elements from a visual perspective, and all the elements in that group move together. It also has a semantic significance. A group can have data injected into it, and the elements inside the group can refer to the Parent group's thing. For example, you can 'display' a user in a group, and all elements inside that group will be able to display the 'Parent group's user's email.' Use this functionality when you want some areas of the app's page to display items relative to a dynamic entry.Our Academy quick tip on how to group elements togetherType of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For example, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Note: As mentioned, Groups can have data assigned to them (e.g. 'this group should show data about user X'). When the data assigned to a group changes, the group will reset all the input fields within itself.This is useful when the input fields are supposed to change depending on the group's data. But, it can also cause confusion, for example, when a group's data depends on an input that's inside that group!Collapse this element's height when hiddenBy default, hiding an element leaves a blank space on the page, exposing whatever is underneath it. When you select this option, however, the elements below the hidden element are pulled upward to fill the space.Tip: A common pattern for a messaging UI involves a Repeating Group where cells have two Groups (Sender & Receiver) that display the text sent by each respective party. When the message belongs to the Sender, the Receiver group is hidden and vice versa. Because of a race condition between evaluating conditional visibility of groups in Repeating Group cells and evaluating cell height, blank spaces may appear when switching between the two groups when a new message is sent.To minimize the risk of this happening, consider enabling "Collapse this element's height when hidden" on both Groups. Note: the "collapse when hidden" property may not always work as expected when used on groups that overlap other groups using the setting.Animate the collapse operationThis option is only visible if 'Collapse this element's height when hidden' is selected. By default, elements collapse and expand instantly, but this option animates with either Fade In/Out or Slide Up/Down.Animation styleThis option allows you to choose whether an element's animation will Fade In/Out or Slide Up/Down.Note: Animation Style is not currently supported for use on a group in situations where a repeating group's underlying data is changing. In these situations, consider relying on the repeating group's built-in updating instead of adding an animation.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Tip: Conditionally changing the borders of a Group will not resize the content in the group, which can lead to undesirable formatting. Consider using two groups (one without a border), and toggling between the two if this behavior is desired. Repeating GroupWatch this video to learn about using the Repeating Group ElementA repeating group displays lists of things, either coming from the application database or from APIs. Design the first cell, and the remaining cells will follow that design.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceThis is the list of things to display in the group. It can either be
– The result of a search using 'Do a search for,'
– The content of a field whose type is list of things, or
– The result of an API call through the 'Get data from an external API.'
 
Once this is set, each cell will display one thing, and the elements drawn inside the cell will be able to refer to the 'Current cell's thing.'Note: Avoid the situation where you automatically change the data source of a repeating group based on a condition that references the repeating group itself! This will cause an infinite loop and the repeating group will not behave as you expect.Layout styleWatch our Academy quick tip for examples of each of these layoutsThis is where to define the general layout of the repeating group. Note that this has a major impact on the performance of your pages, as it impacts how many items get downloaded to draw the repeating group. There are five possible options:
– Vertical scrolling: The element adds cells as the user scrolls down, but it doesn't push the elements below it. Instead, users keep scrolling. This is efficient as it only loads visible items from the server to display the cells.
– Extendable vertical scrolling: The element adds cells as the user scrolls down, and it pushes the elements below down. This is like Facebook's feed and is also efficient for the same reason as above.
– Full list: The element draws as many cells as there are items in the data source. This is not the best approach when the list is long, as it loads many items, including some that aren't visible at first. This is not recommended for long lists.
– Fixed number of cells: Only shows a fixed number of entries. Use the show next/previous actions to navigate in the workflows. The performance depends on your design, with a low number of cells this is efficient, with many cells it can slow down your pages.
– Horizontal scrolling: The element add cells as the user scrolls right. In this mode, the repeating group can only have one row. Given the width of screens, this is usually safe performance-wise.
 
The cells are still expandable if the content inside them is 'Set to stretch to fit content.'Tip: The different types of repeating groups behave differently when there is too little content to fill even the drawn number of cells:Vertical scrolling, ext vertical scrolling and fixed number of cells will show, at minimum, the number of cells drawn in the editor, even if there is no content to fill those cellsA full list repeating group will shrink in height if there's not enough content to fill its cells, potentially even collapsing completely if there is no contentRowsEnter the number of rows to display in this repeating group. This setting only applies when the layout is set to 'Fixed number of cells.'ColumnsEnter the number of columns to display in this repeating group. Entering 1 will make the element like a list, while a larger number will give a tile aspect to the repeating group.Cell minimum width for responsive (px)When the page is responsive, specify the smallest width the cells can have when the page is resized. When the page becomes too narrow for all the cells to have that width, the repeating group displays fewer cells per row.Show partial list on last page if neededWhen the repeating group is set to Fixed number of cells, this controls whether an incomplete last page should be filled with items from the previous page. E.G: If there are 6 items in a 4x1 repeating group, then with this option off, the last page will contain the last four items, items 3 through 6, so items 3 and 4 will be duplicated on both pages; with this option on, the last page will only contain the remaining items, items 5 and 6.Allow more than one column when stretchedBy default, if a repeating group only has one column, e.g., Excel sheet style, no more columns are added when the page is stretched. To change this behavior, check this box.Separator StyleSelect the type of border to display between the cells. Choose from None or a stylized line, such as Solid, Dashed, and Double.Separator WidthEnter the width to apply to the separator in pixels. Set a width even with a separator of None. In this case, the cells will have some empty space between them.Separator ColorSelect the separator color.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.PopupPopups are hidden from the user until you display them from the Workflow Tab. When they are visible, they are fixed position in the center of the viewport. If the popup is longer than the viewport, the user will be able to scroll to see the full content. If the popup is shorter than the viewport, the user will not be able to scroll.Our Academy quick tip on how to use popups Tip: If the popup is longer than the viewport, scrolling will be enabled, and scroll distance is tied to the length of the page in the background. If you have a very long page, the user will be able to continue scrolling the entire length of the background page, potentially past the point where the popup is no longer visible.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For example, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.This popup can't be closed by pressing 'Esc'By default, popups can be closed by the user when pressing Esc. To disable this behavior and make the popup modal, check this box. In this case, the only way to close the popup is with a Hide Popup action in a workflow.Grayout colorSelect the color of the background when a popup is open. By default, it is set to a dark transparent layer.Grayout blurEnter a number greater than 0 to set a blur effect on the background. While this offers an interesting design, the display speed of the popup may be affected.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Floating GroupWatch our Academy quick tip on how to set up a floating groupFloating groups are groups that float on the screen on top of the page but are not contained within the page. These are useful to keep an element in the same place on the screen regardless of the scrolling position of the page or the visibility of groups within the page. Floating groups are useful for headers, buttons like 'Scroll to top,' etc.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For examle, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Vertically float relative toUsing this dropdown menu, choose the base to calculate the position of the floating group. Choose from:
– Top: The distance between the top edge of the group and the top of the user's screen remains constant, no matter the scrolling position of the page. This is the default.
– Bottom: The distance between the bottom of the group and the user's screen remains constant no matter the scrolling position of the page.
– Both: Both the top and bottom distances will remain constant, and a scrollbar will appear if the group is too short to show all its content.
– Nothing: The floating group will not float, meaning that it behaves like a regular group.
 
For example, the distance is calculated as the height between the top edge of the floating group and the top of the Bubble page. Then, it displays the floating group that distance from the top of the user's screen.
Note: By placing the floating group high on the page and making it float relative to the bottom, the element may be 'above' the top of the screen and not display.Horizontally float relative toUse this dropdown menu to determine whether the element floats relative to the Right or Left. Right and Left refer to the horizontal edges of the page. This option is less common than vertical reference, but it is useful when you want an element to display no matter the page width.Floating zindexFloating groups can be above other elements or beneath the page, and then be used as a background design option. Note that when a floating element is beneath elements, it will only visible if the page background is transparentParallax effect factorWhen a floating group is beneath the page, you can apply a parallax effect to give some depth to the page. A factor of 1 will remove any parallax effect, while a factor of 0 will keep the element fixed, and a factor of 2 will make the element move twice faster than the scrolling position. A negative number will have the element move into the different direction of the scroll movement.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Group FocusWatch our Academy quick tip on how to set up a Group FocusA group focus is a group that is automatically hidden when the user clicks outside of it. Position it relative to another element. This is especially useful for dropdown menus.Note: Although the Group Focus container is fixed relative to the page, the iOS keyboard appear event can cause the Group Focus container to move to an unexpected location due to how Apple handles this event.Tip: The same element can now be used to open and close a group focus element. Best practice would be to use a “Toggle an element” workflow action on the element to simply open & close the group focus.Note: If you have a searchbox within your Group Focus, clicking one of the searchbox's results will be considered clicking "outside" the Group Focus and therefore close it. A dropdown or custom searchbox are often used in these designs instead.Reference elementSpecify an element to be the location reference for the group.Offset topPushes the group this number of pixels below the reference element.Offset leftPushes the group this number of pixels left of the reference element.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For examle, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Collapse this element's height when hiddenBy default, hiding an element leaves a blank space on the page, exposing whatever is underneath it. When you select this option, however, the elements below the hidden element are pulled upward to fill the space.Animate the collapse operationThis option is only visible if 'Collapse this element's height when hidden' is selected. By default, elements collapse and expand instantly, but this option animates with either Fade In/Out or Slide Up/Down.Animation styleThis option allows you to choose whether an element's animation will Fade In/Out or Slide Up/Down.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.​​​​​​​​​​​​​​​PreviousContainer Layout TypesNextInput FormsLast modified 3mo agoCopy linkOn this pageGroupType of contentData sourceCollapse this element's height when hiddenAnimate the collapse operationAnimation styleStart/Edit workflowThis element isn't clickableRepeating GroupType of contentData sourceLayout styleRowsColumnsCell minimum width for responsive (px)Show partial list on last page if neededAllow more than one column when stretchedSeparator StyleSeparator WidthSeparator ColorStart/Edit workflowThis element isn't clickablePopupType of contentData sourceThis popup can't be closed by pressing 'Esc'Grayout colorGrayout blurStart/Edit workflowThis element isn't clickableFloating GroupType of contentData sourceVertically float relative toHorizontally float relative toFloating zindexParallax effect factorStart/Edit workflowThis element isn't clickableGroup FocusReference elementOffset topOffset leftType of contentData sourceCollapse this element's height when hiddenAnimate the collapse operationAnimation styleStart/Edit workflowThis element isn't clickable









Ipiphy - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookIpiphyIpiphy allows you to get the IP address of the user at their current location.Get data from external APIThis plugin isn’t used as an element action, but is instead used as a data source from the ‘get data from an external API’ data call.Current user’s IP addressThe text operator used to display a user’s IP address.SetupUnlike most API plugins, you won’t need to generate your own API keys to make use of this plugin.Once the plugin is installed, it’s possible to start storing and displaying a user’s IP address.Simply select the ‘get data from external API’ operator, then select the ‘get current user’s IP address’ option.This will automatically display the current user’s IP address as a text element.FAQHow do you store a user’s IP address within your database?Like any information, it’s possible to store a user’s IP address as a text data field. When updating the data field, use the ‘get data from external API’ option as the dynamic value.
​PreviousIonic ElementsNextiTunesLast modified 1yr agoCopy linkOn this pageGet data from external APICurrent user’s IP addressSetupFAQHow do you store a user’s IP address within your database?









Account - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAccountSign the user upThis action creates a new user in the application database. Signing up a user requires an email and password. Once a user is created, they will be able to login, logout, and information can be saved for that user. It is important to note that when a user signs up, they will be logged in immediately. Their information can be accessed through the Composer using 'Current user's email,' etc.EmailThis is the email used to sign the user up. It is the unique identifier of the user. Usually, this property is the value of an input and looks like 'Input email's value.'Note: Two users cannot have the same email.PasswordThis is the password used to sign the user up. Usually, this property is the value of an input and looks like 'Input password's value.'Require a password confirmationCheck this box to require users to type their password twice when they sign up to make sure the user did not make a mistake. If you check this box, the form should have two different inputs.Password ConfirmationThis field defines where to find the confirmation of the password. It should be the content of an input that is different from the initial input for the password.Send an email to confirm the emailCheck this box to send an email to the user confirming that their email address is valid and that they can access it. This email contains a link that once clicked will set the user's property 'email confirmed' to yes.You can customize the content of this email in the Languages section in the Settings Tab. Look for 'Email confirmation subject' and 'Email confirmation body.' in the list of strings.Create a token without sending an emailTo generate the confirmation token without sending an automated email, check the Just make token, don't send email checkbox in the action settings. This allows you to reference the token in a later step in the workflow using Result of step [#] (Send confirmation email ...) in an expression. Use this if you want to set up your own confirmation email or if you want to link to the confirmation page using the Go to page action and including the token parameter.Example including the token:https://yourdomain.com/[CONFIRMATION_PAGE]?confirmation_email=[LONG_ID]Replace the [CONFIRMATION_PAGE] with the name of the page from the Send confirmation email action and the [LONG_ID] with the token that was generated in that same action.Confirmation pageEnter the page where the user is taken after clicking the link in the confirmation email.Remember the emailSet this field to true for the browser to remember the email entered in the signup form. In this case, when the user is logged out, the email input will display the last saved email.Change another fieldClick this button to save additional fields for this user. This is equivalent to a 'Make change to current user' or 'Make change to thing' action modifying the current user.Log the user inThis action logs an existing user in with an email and password. The user must have already signed up for this action to proceed. When successful, this action triggers the event 'The current user is logged in.'EmailDefine where to find the email. Usually, it will be 'Input email's value.'PasswordDefine where to find the password. Usually, it will be 'Input password's value.'Stay logged inSet this field to true to keep users logged in after 24 hours. Make this option dynamic with a checkbox, which is a common UX pattern.Remember the emailSet this field to true for the browser to remember the email entered in the signup form. In this case, when the user is logged out, the email input will display the last saved email.Opt-in to cookiesThis action is only visible for applications that have enabled the "Do not set cookies on new visitors by default" setting. Call this action to indicate that the user has opted-in to your site storing cookies. Calling this action will create a new, temporary user associated with the current user's web browser, which you can use to store information about the user in between visits to your application. If this action is not called, information stored on the Current User object will be lost whenever the user closes their web browser tab. Note that we need to use cookies to enable signing up or logging in, so on sign up / log in, Bubble implicitly calls this action, even if you don't explicitly call it: if you do not want users to be able to sign up without explicitly opting into cookies, you must prevent them from calling the signup action yourself.Opt-out from cookiesThis action is only visible for applications that have enabled the "Do not set cookies on new visitors by default" setting. This action removes all Bubble-set cookies from the user's web browser, which will log them out of their account if they are currently logged in, and break the association between the user's browser and any temporary user that was created in the database to track them. Calling this action if the user has not previously opted-in to cookies will have no effect.Signup/login with a social networkThis action signs a user up using Facebook, Instagram, or other social network known as an OAuth provider. This action creates a user in the application database but does not use an email/password identification. Instead, Bubble uses a token provided by the OAuth provider. When a workflow hits this action, the user is prompted to approve the access to their information.
 
To use this action, create an application as a developer on Facebook or other provider and copy the keys the provider gives you in the Plugins Tab.Note: Some providers, such as Google, expect the exact URL to be specified in the Developers Console, including a '/' at the end.See Authenticating Users​OAuth providerChoose which service to use for authentication. Install the relevant plugin through the dropdown menu in the Plugins Tab or add an API with the API Connector.Log the user outLogs the user out and triggers the 'Current user is signed out' event.Update the user's credentialsThis action changes the user's email and/or password. The system requires the user to type their previous password again for security reasons. When using this action, the interface should have a form for the old password and the new email/password.Our Academy course includes how to update the user's credentialsOld passwordEnter where to find the old password, which is usually 'Input old password's value.'Change emailCheck this box to allow users to change their email.EmailDefine where to find the new email, which is usually 'Input new email's value.'Change passwordCheck this box to allow users to change their password.New passwordDefine where to find the new password, which is usually 'Input new password's value.'Require password confirmationCheck this box if you want users to type their password twice when modifying their credentials to make sure they do not make a mistake. If this box is selected, the form should have two different inputs.ConfirmationDefine where to find the password confirmation, which is usually 'Input new password confirmation's value.'Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Send an email to confirm the emailCheck this box to send an email to the user confirming the new email is valid and that the user can access it. This email contains a link that once clicked will set the user's property 'email confirmed' to yes. Customize the content of this email in the Languages section in the Settings Tab. Look for 'Email confirmation subject' and 'Email confirmation body.'Confirmation pageEnter the page where the user is taken after clicking the link in the confirmation email.Make changes to current userThis action modifies the current user and saves this information in the application database. This is equivalent to a 'Make change to thing,' modifying the current user.ChangesList the modifications to apply to the current user. Select the field to modify, the operation, and the new value.Send confirmation emailThis action sends an email to the currently logged-in user to confirm the email is valid and that they can access it. If an email was already confirmed, the user's property 'email confirmed' is marked as unconfirmed until the user clicks the link in the new email. If the user's account has been linked to an OAuth provider (e.g. Google), the user's property 'email confirmed' will automatically be marked as confirmed.Confirmation pageEnter the page where the user is taken after clicking the link in the confirmation email.Send password reset emailThis action sends an email with a reset link to the user when the password is forgotten. The link goes to the reset_pw page that is built into the Bubble Editor and handles the reset of the password.Email to resetEnter the email for where to send the link to reset the password. The form should have an input for the email.Note: The email should already exist in the database. Otherwise, there is no password to reset.SubjectEnter the subject of the email.BodyEnter the content of the email. The reset password link is added to the end of the email.Just make token, don't send emailIn the reset password email, there's a link that looks like https://yourdomain.com/reset_pw?reset=[LONG_ID].
 
The token is just the LONG_ID part of that link. Manually recreate the link at a later point in time and reset the password then. Tokens can only be used once.
 
This feature adds flexibility. For example, maybe you want an administrator to create an account for someone else and then email them from a personal account rather than having the user receive a system-generated email.
 
Get the LONG_ID as a result of this action in the subsequent actions of the workflow.Send magic login link 🆕 This action sends an email with a magic link to allow a user to login to their account. The link can only be used once to login and will expire after 1 hour. If 2FA is enabled on your app and the requesting user, the user will be directed to complete the required 2FA steps after clicking a valid login link.Note: Some email inboxes automatically screen embedded links for spam, which could mark the magic link as already clicked. End users should be encouraged to allow the magic link email address to their inbox provider’s allowlist to get around these security checks.Time Expiration (Hrs)Specify the length of time in hours the login link is valid for, starting from when the link is created (i.e. the user initiates the workflow action). The default value will be 1 hour, but can be any decimal or integer value between 0 and 24.EmailEnter the email for where to send the magic link, usually a dynamic value from a form input in your Bubble app. If the email address does not belong to a valid user account, no magic link or email will be sent.SubjectEnter the subject of the email.BodyEnter the content of the email.Magic link textEnter the text for the magic login link. This text containing the link will be added after the body of the email.Just create link, don't send emailCheck this box if you would like to handle sending the magic link to the user yourself. The magic link will be created on the server side but not sent to an email address. The magic link can be subsequently handled by any server side action (such as included in a custom email action) using "Result of Step N’s Send magic login link". Note: For security reasons, this link will not be available for use on the client side, for example, to display on a page in a text element.Redirect on successSpecify the page you would like to redirect the user when the user successfully logs in using the magic link. If 2FA is enabled on the user account, this page will be ignored in favor of the manual redirect location specified after your Check 2fa token action.Redirect on failureSpecify the page you would like to redirect the user when there is an issue logging the user in using the magic link, such as in the case of an invalid or expired link.Send data on loginCheck this box to send data and/or additional parameters in the url on page navigation after the user successfully logs in.Send data on failureCheck this box to send data and/or additional parameters in the url on page navigation if the there is an issue logging the user in.Data to sendChoose the thing for the page content of the destination page. The type of this thing should be consistent with the page's type of content. If the type is inconsistent, the expression will be red. If the page doesn't have a type, you can send text instead to append a path to the URL.Send more parameters to the pageAdditional data can be sent to the page. This can be a text, a number for a search, etc. This option defines the series of key/values to send. The way to use them in the destination page is by using the 'Get data from page URL' data source.Additional parametersDefine the key/values to send to the destination page.Warning: Because of Bubble's internal logic, do not use 'id,' 'debug_mode,' or 'resume' as keys.Send current page parametersIf there is any data stored in the page URL parameters when the page changes the parameters will be carried over to the destination page as well. These parameters will be overridden by any parameters with the same name added using the "Send more parameters to the page" option.Reset passwordThis action resets the password of a user on the reset_pw page and gives a token for the URL. See 'Just make token, don't send email' above. The token expires after 24 hours.Our Academy course includes how to build a reset_pw pagePasswordDefine where to find the password. The reset_pw form is built into the app. If you changed the form, however, define which input contains the password.ConfirmationDefine where to find the confirmation of the password. It should be the content of an input that is different from the initial input for the password.Create an account for someone elseWatch our Academy quick tip on to set up an account for someone elseThis action creates an account for someone else without logging the new user in. This is useful to create an admin page and control who is allowed to sign up. Access this user in the following actions.EmailEnter the email of the new user, which usually comes from an input.PasswordDefine the password for the new user. Hardcode a value or use an input.
Note: This field is deprecated and only available in older apps.Return the user if the account already existsWhen creating a new user that already exists, e.g., the email is already in the application database, the action returns an error. Check this box, and the action will simply return the user so that you can manipulate it in subsequent actions.ChangesAdd the modifications to apply to the new user. Select the field to modify, the operation, and the new value.Check password for the current userThis action checks a value against the 'Current user's password.' If the password is correct, the workflow continues. Otherwise, it stops and displays a message to the user. Use this to validate the password before an important operation, such as deleting an account.PasswordDefine which tentative password should be checked. Usually, it comes from an input element.Assign a temp password to a userThis action deletes the password of a user and assigns a temporary one. Text is returned by this action and can be used in upcoming workflows. When the user tries to log in using this password, they will be taken to the page defined in the 'Redirect users who haven't changed their password' option in the General section in the Settings Tab.UserDefine which user to assign the password to. It should be of type user. If the type is inconsistent, the expression will be red.Important: This workflow action is meant to be used in a situation where an admin is resetting the password for a user - the admin can see the new password. We do not recommend building this into an end-user-facing flow on a page because it is not a secure way to work with passwords. We generally recommend using the reset password action. If you really want an end-user self-serve solution, consider using this action in a backend workflow instead.Change the email for another userThis action modifies a user's login email. It is intended to be used in administrative workflows to modify the email of a user who may or may not be actively using the app at the time. To enable a user to change their own email, use the 'Update the user's credentials' action. This is more secure because it makes them re-enter their password to confirm that they are actually authorized to perform that action. In contrast, this action is intended for situations where an admin needs to update the account of another user, whose password they don't know.Warning: Do not include this action in workflows run by ordinary users.UserEnter the user whose email is being changed.New emailEnter the new email. The next time this user logs in, they must enter this email rather than their previous email.Log out other user's sessionsThis action lets you log out all sessions of the current user, except the one where the user triggers this action. This is a useful action for security, when you want to make sure no other devices have a logged-in session. If you need to log out the user from the current session as well, you can use a Log the user out action after this action.Note: This action will not automatically refresh the pages of the logged out sessions. Expired sessions will only redirect back to the login page after a user takes some sort of action. Generate a 2FA QR codeThis action lets you generate a unique QR code for a user, so that they can set up two-factor authentication with Google Authenticator or Authy. The user should confirm his/her password first.Note: This is an advanced feature and only accessible on the Production plan.PasswordTo set up two-factor authentication, users need to enter their password to confirm their identity. This property define where to find the existing password.Validate token and activate 2FAThis action lets the user validate the unique temporary token he will get from Google Authenticator or Authy the first time to validate the flow. Once the user has been through that process, he will be marked as using two-factor authentication and will have to go through the token check step to log in to your application.TokenThis is the token the user wants to validate. It should be coming from an input on the page.Check 2FA tokenThis action lets the user validate the unique temporary token he will get from Google Authenticator or Authy. If he goes through that step successfully he will be logged in to the application.TokenThis is the token the user wants to validate. It should be coming from an input on the page.Valid_30_daysWhen set to yes, the user will not be required to check his token for another thirty days on the current device/browser.Disable 2FA for the current userThis action disabled the check for a temporary token for the current user. Once a user has gone through that step, he won't have to enter a temporary code to log in.PasswordTo disable two-factor authentication, users need to enter their password to confirm their identity. This property define where to find the existing password.TokenThis is the token the user wants to validate. It should be coming from an input on the page.Generate one-time backup codesThis action lets you generate 10 unique codes that can be used by the user instead of a temporary two-factor authentication token to log in to his account. This codes can be used only once, and regenerating a list will cancel previous codes. These codes are useful when the user loses his phone, etc.PasswordTo disable two-factor authentication, users need to enter their password to confirm their identity. This property define where to find the existing password.TokenThis is the token the user wants to validate. It should be coming from an input on the page.Number_of_codesThis is the number of codes you want to generate. It defaults to 10.​​​​​​​​​​​​​​​PreviousNavigationNextData (Things)Last modified 13d agoCopy linkOn this pageSign the user upEmailPasswordRequire a password confirmationPassword ConfirmationSend an email to confirm the emailConfirmation pageRemember the emailChange another fieldLog the user inEmailPasswordStay logged inRemember the emailOpt-in to cookiesOpt-out from cookiesSignup/login with a social networkOAuth providerLog the user outUpdate the user's credentialsOld passwordChange emailEmailChange passwordNew passwordRequire password confirmationConfirmationDo not show success messageSend an email to confirm the emailConfirmation pageMake changes to current userChangesSend confirmation emailConfirmation pageSend password reset emailEmail to resetSubjectBodyJust make token, don't send emailSend magic login link  Time Expiration (Hrs)EmailSubjectBodyMagic link textJust create link, don't send emailRedirect on successRedirect on failureSend data on loginSend data on failureData to sendSend more parameters to the pageAdditional parametersSend current page parametersReset passwordPasswordConfirmationCreate an account for someone elseEmailPasswordReturn the user if the account already existsChangesCheck password for the current userPasswordAssign a temp password to a userUserChange the email for another userUserNew emailLog out other user's sessionsGenerate a 2FA QR codePasswordValidate token and activate 2FATokenCheck 2FA tokenTokenValid_30_daysDisable 2FA for the current userPasswordTokenGenerate one-time backup codesPasswordTokenNumber_of_codes









Container Layout Types - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookContainer Layout TypesContainer layouts define the behavior and positioning of its child elements. Container layout types are available on any container element (group, floating group, repeating group, etc.), including the page itself. Your page must be a responsive container type (ie not “fixed”) to be actually responsive to changes in screen size. Each container layout type has its own set of controls specific to that layout type. In addition, child elements will inherit unique controls depending on the parent container’s selected layout type. The new container layouts and their controls are outlined below and include sub-sections for Parent container and Child element controls. Note: Parent controls act on the container itself while the Child controls act on the child elements inside the parent container.FixedThe Fixed layout type defines a fixed width and height container with absolute positioning of its child elements. Child elements are positioned and re-sized by dragging and dropping as you are used to. A container that is fixed will not respond to changes in screen size or content size because what-you-see-is-what-you-get.Parent Controls​​Additional controls will be available dependent on the parent container of this element.Child Controls​​Width & HeightSee Responsive Properties​Align to ParentChild elements are aligned to a nonant in the parent container. A nonant is like a quadrant, but when a rectangle is divided into 9 parts instead of 4. New child elements drawn inside or dragged into an Align to Parent will snap to the nearest nonant. The position and size of child elements are controlled in the property editor, though elements can be re-positioned by dragging and dropping. As the parent container resizes, child elements will remain aligned to their respective nonant and can overlap each other.Parent Controls​​Additional controls will be available dependent on the parent container of this element.Child Controls​​Pin to nonant selection Select which nonant this element should be pinned to. The element will stay pinned there as the parent container resizes.Width & HeightSee Responsive Properties​RowChild elements in a row container are aligned horizontally. These child elements will wrap as the screen is resized or new elements are added. New child elements drawn inside the container will be added to the end of the list by default but can be re-ordered using the order controls or by dragging and dropping. The position and size of child elements are controlled in the property editor.Note: Child elements will grow to take up as much space as they can (within the limits of the max width setting) equally. For example, consider a parent row container that is 100px wide. It has two child elements with min widths of 20px and infinite max widths. These elements will grow to be 50px each. If we add a 3rd equal child element to that row, each element will shrink to 33.33 px wide.Parent Controls​​Container alignmentThis control defines how the child elements will be aligned with respect to the parent container.Left-alignedChild elements will align to the left edge of the parent.CenteredChild elements will align to the center of the parent.Right-alignedChild elements will align to the right edge of the parent.Space aroundChild elements will receive even spacing between the edges of the parent container and each other.Space betweenChild elements are placed at the start and end of a container with even spacing between elementsRow gap (px)See Responsive Properties​Column gap (px)See Responsive Properties​Width & HeightSee Responsive Properties​Additional parent controls will be available dependent on the parent container of this element.Child controls​​Vertical alignmentTop-alignedChild element will align to the top edge of the parent containerCenteredChild element will align to the center of the parent containerBottom-alignedChild element will align to the bottom of the parent containerVertical stretchChild element will stretch to its max height (or height of the parent container, whichever is smaller). This option is disabled if Make this element fixed-height is checked.Order selectionMake firstMove this element to the first position in the row.PreviousMove this element one position to the left in the row.NextMove this element one position to the right in the row.Make lastMove this element to the last position in the row.Width and HeightSee See Responsive Properties​ColumnContent is aligned vertically. Child elements will stretch or push other elements down as screen or content is resized. New child elements drawn inside the container will be added to the end of the list but can be re-ordered using the order controls or by dragging and dropping. Position and size are instead controlled in the property editor.Parent controls​​Container alignmentThis control defines how the child elements will be aligned with respect to the parent container.Top-alignedChild elements will align to the top edge of the parent.CenteredChild elements will align to the center of the parent.Bottom-alignedChild elements will align to the bottom edge of the parent.Space aroundChild elements will receive even vertical spacing between the edges of the parent container and each other.Space betweenChild elements are placed at the start and end of a container with even vertical spacing between elementsRow gap (px)See Responsive Properties​Width & HeightSee Responsive Properties​Additional parent controls will be available dependent on the parent container of this element.Child controls​​Horizontal alignmentLeft-alignedChild element will align to the left edge of the parent.CenteredChild element will align to the center of the parent.Right-alignedChild element will align to the right edge of the parent.Horizontal stretchChild element will stretch horizontally to its max width or the width of its parent container (whichever is less). This option is disabled if Make this element fixed-width is checked.Order selectionMake firstMove this element to the first position in the row.PreviousMove this element one position to the left in the row.NextMove this element one position to the right in the row.Make lastMove this element to the last position in the row.Width & HeightSee Responsive Properties​PreviousContainersNextContainers (Legacy)Last modified 7mo agoCopy linkOn this pageFixedWidth & HeightAlign to ParentPin to nonant selection Width & HeightRowContainer alignmentRow gap (px)Column gap (px)Width & HeightVertical alignmentOrder selectionWidth and HeightColumnContainer alignmentRow gap (px)Width & HeightHorizontal alignmentOrder selectionWidth & Height








Page Element (Legacy) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPage Element (Legacy)Watch this video to learn about the Page elementThe Page Element is the fundamental element that contains all the other elements.Type of contentThis property defines the type of thing the page should expect. Once set, you can refer to the Current page thing in the Bubble Editor. A typical use case of this feature is to create a profile page. Set the type of content to 'user,' and in each element of this page, you can refer to the Current page user's email, Current page uer's picture, etc. If you set a type of content to a page, all links pointing to that page should define a thing to send.Backup field for readable URLThis page represents a thing of the type defined as Type of content. If the current page's thing does not have a value for its Slug field then the field chosen here will be displayed in the URL. URLs for things without a value for their Slug field usually look like example.com/page/1449154312665x293260311940684900. To make this URL readable, select a field to define what to display in the URL. Usually, it will be a short text field, like a name or title. For example, choosing the field 'location' with a value of 'work,' the URL becomes example.com/page/work-1449154312665x293260311940684900.Page titleThis property defines how the page will be displayed in the browser. It can be dynamic by using the 'Insert dynamic data' button.This page is a native appCheck this box to build a native app and if you want this page to be the app submitted to the app stores. Clicking this checkbox displays a popup listing tips for building a native app.
Note: This feature is in beta.Native app nameEnter the name of the app to be displayed on the homepage of a user's phone.Mobile versionTo have a specific design for the page when loaded on a mobile device, select a page from this dropdown menu. Because the URL remains the same, this is transparent to the user.Preset page widthSelect a preset width for the page from this dropdown menu so that the page fits the target device, e.g., laptop, mobile, or tablet. Changing the page width or height dimensions in the Bubble Editor changes this setting to 'Custom.'Title (for SEO / FB)Enter the title you want social networks to crawl when looking at the page. This title is displayed by Facebook, for instance, when the site is listed. It should be approximately 50–60 characters including spaces. If left blank, the title entered in the SEO & Metatags section in the Settings Tab will be used.Description (for SEO / FB)Enter the meta description you want Google to crawl when looking at the page. This description is displayed by Google or Bing when the site is listed. It should be less than 160 characters including spaces. If left blank, the description entered in the SEO & Metatags section in the Settings Tab will be used.Image (for FB)Choose a dynamic image for Facebook to display.Page HTML HeaderEnter any HTML to include in the Header. For example, Google's or Facebook's tracking code for conversion.
Warning: This is for advanced users only because it could break the page.Background styleSelect a background style from this dropdown menu to apply a backdrop. Choose from None, Flat color, Gradient, Image, and Video.Background colorChoose the background color for the page.Note: The background color only applies to the page element itself, not the true (browser html) page background. In certain instances, like a popup that is longer than the page element, this html page background color (default: white) will be exposed. Coming soon: Ability to set this html background color.Gradient styleChoose either Linear or Radial from this dropdown menu.Gradient directionChoose the orientation of the gradient from this dropdown menu. Selecting 'Custom' displays a Direction degrees field to set the direction in degrees.Direction degreesEnter a number between 0 and 360 for the direction of the gradient.Gradient shapeChoose Ellipse or Circle from this dropdown menu to define the shape of the gradient.Gradient baseSelect a screen location from this dropdown menu to determine where to base the gradient. Choose from Closest-side, Closest-corner, Farthest-side, and Farthest-corner.X Center Position (%)Enter a percentage to offset the gradient from the gradient base horizontally. 50% will center the gradient horizontally.Y Center Position (%)Enter a percentage to offset the gradient from the gradient base vertically. 50% will center the gradient vertically.Starting colorSelect the starting color of the gradient.Ending colorSelect the ending color of the gradient.Intermediate colorSelect an optional middle color of the gradient. If the input is empty, no intermediate color will be applied.Background imageUpload or choose a dynamic image to use for the background.
Tip: Use an image from our royalty-free library.Center the imageCenters the image when the user resizes the browser window.Make image as wide as parent elementIf the parent element is wider than the image selected, the image will automatically resize to cover the entire element.Repeat the image verticallyRepeat the image vertically if the image is smaller than the page's height.Repeat the image horizontallyRepeat the image horizontally if the image is narrower than the page's width.Background color if emptyWhen using a dynamic image, it may take a few milliseconds for the image to load. This color displays until the image loads. The default is transparent.Apply a parallax effect (desktop only)Check this box to scroll the background image more slowly than the elements on the page. This gives an impression of depth.Parallax speedChoose a number from this dropdown menu to control the depth effect of the parallax. With a value of 0, the image will not scroll. With a value of 1, the image will scroll at the same speed as the elements.Video fileUpload an mp4 file or choose a dynamic video to use for the background.Fallback imageOn mobile devices, videos are not displayed due to data usage limit concerns. Upload an image to use in this case.Play video silentCheck this box to show the video without sound.Stripes (deprecated)Define screen-wide stripes for the page.PreviousPage ElementNextVisual ElementsLast modified 8mo agoWas this page helpful?Copy linkOn this pageType of contentBackup field for readable URLPage titleThis page is a native appNative app nameMobile versionPreset page widthTitle (for SEO / FB)Description (for SEO / FB)Image (for FB)Page HTML HeaderBackground styleBackground colorGradient styleGradient directionDirection degreesGradient shapeGradient baseX Center Position (%)Y Center Position (%)Starting colorEnding colorIntermediate colorBackground imageCenter the imageMake image as wide as parent elementRepeat the image verticallyRepeat the image horizontallyBackground color if emptyApply a parallax effect (desktop only)Parallax speedVideo fileFallback imagePlay video silentStripes (deprecated)

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Bubble app names - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble app namesApp names are used for indexing purposes on Bubble's side, so they cannot be changed or reused once the app is created. Once you are on a custom domain, however, the app name is no longer visible to your end users.If you are looking to change your app's name, you can create a copy of your existing app with the new app name that you prefer. However, if your app is currently on a paid plan or has any plugin licenses, please do keep in mind that those cannot be transferred to the new app.Bubble app names cannot be reused, even if the app is deleted, as Bubble app names must remain unique; information about deleted apps are still retained even after they are deleted. ​User manual - PreviousMore about Bubble appsNext - User manualMaintaining an ApplicationLast modified 1yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Github Integration - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGithub IntegrationBubble integrates with GitHub so that you can save a version of your plugin in a repository, and can benefit from Git's version control features. Note that the primary data store remains Bubble's servers, and what you have on GitHub is a copy of the plugin. If you modify the code on Git (see below), you'll be able to fetch the latest commits to Bubble's storage.Connecting with GitHubThe first step is to link your Bubble and your GitHub accounts. If you have used GitHub to sign up, you're all set, but otherwise you can link your account in the Account page or in the My plugins page.Once this is done, you'll be able to use the GitHub section in the Version Tab of the plugin Editor.Synchronizing with GitHubFirst synchronizationThe first time you hit 'Synchronize with GitHub', a new repository will be created in your GitHub account. Bubble will generate a repository name based on your plugin name you have defined in the General Tab. By default, Bubble will attempt to create a private repository. If you are not using a paid plan on GitHub, the operation will fail, and if you make your plugin Open Source, you will be able to create a public repo on the MIT license.Note that if you delete the repository in GitHub, the connection will be reset and the next synchronization will be similar to the first synchronization. A new repository will be created.Subsequent synchronizationsOnce the connection is set up, you will be able to regularly synchronize with GitHub. When a do so, a few situations can occur:1.The version in Bubble's storage (the one in the Editor) is ahead of the current commit. This means you have modified the plugin in Bubble since your last synchronization, and haven't committed anything directly in GitHub. The newer version of the plugin will be pushed to Git with an automated commit message.2.You have modified the plugin in GitHub (for instance pulling a change request, etc.) and haven't modified the version in Bubble. The new version will be fetched from GitHub and you'll be able to modify this one.3.Both versions (in Bubble and GitHub) have been modified, with a new commit in GitHub, and this can successfully be merged with Bubble's version. The synchronization will merge and pull the latest version from GitHub to Bubble.4.Both versions are modified, and there are some conflicts. The version in Bubble will not be modified, and a pull request will be created in your repo. You can then work on the merge, solve conflicts, pull into the master branch. Once you have done this, the next synchronization will fetch the conflict-free version to Bubble.Tip: If the linked Github repo is moved or deleted, that will confuse Bubble's plugin editor. If you find yourself unable to restore access, please reach out to our Success team, who will be happy to look into it for you.Forking pluginsOne of the key benefits of integrating with GitHub is that you can now fork published open source plugins, provided the author is using GitHub as well. If that's the case, a button will appear to fork the plugin into your account. This will copy the plugin, fork the Git repository and synchronize the new plugin with the new repository. You can then work on your plugin normally, and use GitHub's native features in terms of forking when working with the author of the original plugin.Folder & code structureWhen a plugin is synchronized with a git repository, the entire data is synchronized, in a structured manner. When you modify the plugin in GitHub (or in another code editor, or if you merge someone else's modifications), it is recommended to keep the structure identical. Here are the few key things about how a plugin's code and data is structured.File formatsData and code can be represented as JSON files, JavaScript files or HTML files. The HTML headers that are injected in the pages will be an HTML files, the code for the different elements' and actions' code will be in JavaScript. Everything else will be represented as a JSON file, and is what you can modify through Bubble's UI. Be careful when you modify JSON files, as some modifications can make the files not readable by Bubble.Folder structureThe folders tend to follow the architecture of the Plugin Editor. What you can find in the Shared Tech Tab is at the root level, while the API calls, the Elements and the Actions are in three separate folders. The API definition is one major JSON file, while the elements and actions are separated in sub folders.IDsWhen you navigate the folders, you will notice a few keys in the JSON files that are unique ID (such as 'AED'). This applies to elements, parameters in APIs, etc. Please do not modify these entries, as they are used in users' apps to represent the different entries (on the other hand, you can modify captions, etc.)Personal data and credentialsWhen you are testing a plugin, in particular an API, you are using some credentials for testing purposes. This data will not be synchronized with GitHub.PreviousPublishing & VersioningNext - Account & MarketplaceBuilding TemplatesLast modified 1yr agoCopy linkOn this pageConnecting with GitHubSynchronizing with GitHubFirst synchronizationSubsequent synchronizationsForking pluginsFolder & code structureFile formatsFolder structureIDsPersonal data and credentials









Twitter - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookTwitterLet users login with their Twitter accounts and fetch their latest tweets.Signup/login with a social networkThis workflow step allows you to integrate a Twitter authentication event when registering a new user or logging in an existing user.OAuth provider - TwitterAllows the Bubble editor to verify the correct social platform to login/signup the user.Current user’s TwitterWhen adding dynamic data, this operator allows you to fetch and display content from a user’s connected Twitter account.User’s IDThe unique ID of a user’s Twitter profileUser’s nameThe full name listed on a user’s Twitter profileUser’s handlerThe user’s Twitter handleUser’s locationThe location listed on a user’s Twitter profileUser’s descriptionThe user’s Twitter bioUser’s followers countThe total count of followers on a user’s profilesUser’s pictureA user’s Twitter profile pictureUser’s bannerThe banner image from a user’s Twitter profileSetupConfiguring your APIOnce you’ve installed the Twitter plugin, you’ll need to configure your API keys through the Twitter developer portal here. Add your API key into the ‘consumer key’ field, and the secret key into the ‘consumer secret’ field.

After connecting your plugin, you’ll now need to enable the Twitter OAuth settings within your developer portal. To find this, head to the settings page of your application, then select to edit the authentication settings.When enabling this service, you’ll also need to provide a URL to a terms and policies page within your application.Finally, you’ll then need to provide a callback URL. This is the page in your application that Twitter will redirect user’s to once their account has been verified.

Registering a user with Twitter OAuthAfter configuring your API and app settings, you can now use the ‘signup/login with social network’ step within a workflow. From the event dropdown menu, you’ll see an option to select the Twitter OAuth provider. This event can be added to an element like a login button.

After a user clicks this button, they’ll be redirected to a Twitter portal where they can verify their account, then be redirected back to the destination URL of your application.Now, you can choose to display data from a user’s Twitter profile by selecting the ‘current user’s Twitter’ operator.Fetching a user’s Twitter timelineAfter verifying a user’s Twitter account, it’s also possible to fetch a list of their previous tweets from their timeline.When adding a repeating group, select the type of content to be a Tweet.From here, select the data source to be the ‘current user’s Twitter timeline’ option.

Now, when adding a dynamic element within your repeating, select from the ‘current cell’s Tweet’ option.FAQHow do you store a user’s Twitter profile information within your own database?When signing a user up through Twitter OAuth, it’s possible to add an additional step to your workflow that makes changes to the current user’s account.Within this workflow step, connect your user data fields with the ‘current user’s Twitter’ operator.

PreviousTwilio Video ChatNextWistiaLast modified 1yr agoCopy linkOn this pageSignup/login with a social networkOAuth provider - TwitterCurrent user’s TwitterUser’s IDUser’s nameUser’s handlerUser’s locationUser’s descriptionUser’s followers countUser’s pictureUser’s bannerSetupConfiguring your APIRegistering a user with Twitter OAuthFetching a user’s Twitter timelineFAQHow do you store a user’s Twitter profile information within your own database?









Draggable Elements - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDraggable ElementsThe Draggable Elements Plugin adds two elements, Drag/drop Group and Drop Area, which add draggable elements to the app. They allow users to drag things and drop elements in a drop area.Note: The drag and drop plugin may have less smooth behavior on certain older browsers. Also, note that the smoothness and performance of the interaction will depend on your particular implementation of the plugin, meaning more complex implementations may see slightly degraded performance. We encourage you to test your implementation to see if you are happy with the resulting user experience.Drag/drop GroupThis element can be dragged by the user and dropped in a drop area. If a workflow is associated with this drop area, the workflow will run. This element is a container and has a thing as a data source. You can access the coordinates of the element when the user drags it as 'X position' and 'Y position'. These coordinates are relatively to the parent element and can be used in the Move element action (see below).Constrain the movement within the parentCheck this box to prevent users from dragging the element outside of its parent.Make this element droppableCheck this box to allow the group to be droppable in a drop area and trigger a workflow. Otherwise, the element will simply be a draggable palette.Note: When make this element droppable is checked, conditional logic that is triggered when an element is dragged will not work properly.Disable the ability to dragWhen this option is selected, the group will behave like an ordinary group, and the user will not be able to drag it.Behavior post dropThis option defines how the group should behave when dropped in a drop area and when a workflow is triggered. Choose from Hide group and Move back, which moves the element back to its initial position.Note: This setting is only available when make this element droppable is checked.Drop AreaThis element can trigger a workflow when a drag/drop group is dropped in it.ToleranceThis specifies which mode to use for testing whether a drag/drop group is dropped into a drop area. Choose from:Intersect: The drag/drop group overlaps the drop area by at least 50% in both directions.Fit: The drag/drop group overlaps the drop area entirely.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For example, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.A drop area has an element dropped in itThis workflow is triggered when a drag/drop group is being dropped into it. Only elements that are droppable can be dropped and trigger such an event.Type of workflow thingIf you want the workflow to be able to take an entry from the database, define the type of the thing here. If this field is set, the thing will be the data source of the dropped group. If there is a mismatch between the type defined here and the type of content of the dropped group, the workflow will not run.Move a draggable groupThis action lets you manually move a draggable group on the screen. You can use this to build a product tour of your app.Note: An element that is made droppable will not be available to be moved in this workflow action as the droppable setting already defines explicit behavior for that element.Movement typeYou can either pick an element to move the draggable group to, or specify some coordinates. Keep in mind that using coordinates can lead to unexpected results if the screen dimensions vary, etc. Therefore, we recommend using another element as a reference.Element to move toThe way to represent the new position is by reference to an element. The group will be moved so that the top-left corners of the draggable group and this element match. Droppable elements cannot be selected.Offset top (px)Pushes the moved element this number of pixels below the reference element.Offset left (px)Pushes the moved element this number of pixels left of the reference element.Left - X (px)Specify here the left coordinate of the element. This can be a dynamic expression. This coordinate is relatively to the parent element.Top - Y (px)Specify here the top coordinate of the element. This can be a dynamic expression. This coordinate is relatively to the parent element.Duration (ms)This field defines the length of the animation. If you enter 0, the move will be without animation.Setup You might use drag and drop groups to show tasks in a to-do app. As you make progress, you can drag a task from a "To Do" column to a "Done" column. If we check the option to make our drag and drop group draggable, then you can also start a workflow to update the status of a task in the database once it's dropped on a particular drop area.​In this case, you might start a workflow for when DropArea B, our drop area for "Done," has a group dropped on it, you update that group's task's status to "Done." FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousDocuSignNextDropzoneLast modified 4mo agoCopy linkOn this pageDrag/drop GroupConstrain the movement within the parentMake this element droppableDisable the ability to dragBehavior post dropDrop AreaToleranceType of contentData sourceA drop area has an element dropped in itType of workflow thingMove a draggable groupMovement typeElement to move toOffset top (px)Offset left (px)Left - X (px)Top - Y (px)Duration (ms)Setup FAQ








Styling Properties (Legacy) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookStyling PropertiesThese are common styling properties that can be applied to most elements in the Bubble Editor. They include borders, backgrounds, shadows, fonts, etc. These are also properties included in Styles.GeneralOpacityDefines the opacity of the entire element. 100 is fully opaque while 0 is fully transparent.Note: This is different than the opacity input, or alpha value, on the color picker. That value sets the opacity of the color itself. This setting sets the opacity of the entire element.DimensionsThese properties control the size and positioning of the selected element.WidthDefines the width of the selected element in pixels.HeightDefines the height of the selected element in pixels. This height adjusts if the element or content inside a container is 'Set to stretch to fit content.' In this case, the number entered here is the minimum height for that element.LeftDefines the horizontal position in pixels relative to the left border of the containing element, which is either a group or popup or the page.TopDefines the vertical position in pixels relative to the top border of the containing element, which is either a group, a popup, or the page.Rotation angleRotate the selected element by entering a number in this field. This number is expressed in degrees.ShadowsThese properties define a shadow for the selected element.Shadow styleChoose from None, Outset, and Inset to define a shadow to the selected element. Inset sets a show inside the element. Outset sets a show outside the element.Horizontal offsetDefines the position of the horizontal shadow. Negative values are allowed.Vertical offsetDefines the position of the vertical shadow. Negative values are allowed.Shadow Blur radiusDefine the blur distance in pixels. A higher number means a more diffuse shadow, and a lower number means a sharper shadow.Shadow spread radiusPositive values will cause the shadow to expand and grow bigger, negative values will cause the shadow to shrink. If not specified, it will be 0 (the shadow will be the same size as the element).Shadow colorDefines the color of the shadow.
Tip: Experiment with the transparency of the color.Font optionsThese properties style text.FontSelect the font family to apply to the selected element. Choose from the hundreds of fonts in the Google Fonts Library.Font WeightSelect the font weight to apply to the selected element. Choose from standard weights ranging from 100 to 900.Note: Not all fonts have all 9 weights.Font SizeEnter a font size in pixels for the text.BoldMakes the text darker and thicker.ItalicMakes the text slanted.UnderlineUnderlines the text. This is useful in conditional formatting, when a link is hovered, for instance.Text AlignmentAligns the text. Choose from Left, Center, and Right.Font ColorSelect the text color.Placeholder colorSelect the color to apply to the placeholder of the input element.Font ShadowThese properties add a shadow to texts.Show text shadowCheck this box to show a shadow on the text.Horizontal offsetDefines the position of the horizontal shadow. Negative values are allowed.Vertical offsetDefines the position of the vertical shadow. Negative values are allowed.Font Shadow Blur RadiusDefine the blur distance in pixels. A higher number means a more diffuse shadow, and a lower number means a sharper shadow.Font shadow ColorSelect the color of the shadow.
Tip: Experiment with the transparency of the color.Font optionsThese options control text spacing.Word spacingDefine the space between words in pixels.Line spacingDefine the line height in pixels.Letter spacingDefine the space between letters in pixels.BordersThese properties define the borders of the elements.Note: Top and left borders on an element will nudge the center alignment of items inside that element (e.g. text). One workaround is to have a text element inside of another element (e.g. group), and apply the border to the outside element instead.Define each border independentlyCheck this box if borders are to be set independently.Border styleChoose a style for the border. Choose from None, Dotted, Dashed, Double, Groove, Ridge, Inset, and Offset.Border roundnessDefine the border radius in pixels.Border WidthDefine the border width in pixels.Border colorSelect the border color.Tooltip on hoverTooltip text (on hover)This text is displayed by the browser when the user hovers over it with the mouse. Technically, it sets a title attribute to the element it is applied to.PaddingThese properties let you select the space between the borders and the actual content of the element.TopSpecify the amount of padding at the top of the container in pixels.RightSpecify the amount of padding on the right side of the container in pixels.BottomSpecify the amount of padding to the bottom of the container in pixels.LeftSpecify the amount of padding on the left side of the container in pixels.Center the text verticallyCheck this box to center the text vertically.Tip: Top and left borders on an element will nudge the center alignment of items inside that element (e.g. text). One workaround is to have a text element inside of another element (e.g. group), and apply the border to the outside element instead.BackgroundThese options define the background of the elements: color, image, etc.Background styleSelect the background style to apply to the element. Choose from None, Flat color, Gradient, and Image.Background ColorSelect the background color for the element.Gradient styleChoose from Linear and Radial to define the gradient style.Gradient directionChoose from Top, Left, Bottom, Right, and Custom to define the gradient direction.Direction degreesEnter a value between 0 and 360 for the direction of the gradient.Gradient shapeDefines the shape of the gradient. Choose from Ellipse and Circle.Gradient baseSelect a screen location from this dropdown menu to determine where to base the gradient. Choose from Closest-side, Closest-corner, Farthest-side, and Farthest-corner.X center position (%)Define the horizontal centering position. 50% will center the gradient.Y center position (%)Define the vertical centering position. 50% will center the gradient.Starting colorSelect the starting color of the gradient.Ending colorSelect the ending color of the gradient.Intermediate colorSelect the optional middle color of the gradient. If the input is empty, no intermediate color will be applied.Background imageUpload or define a dynamic image. Select an image from the Bubble royalty-free library, if desired.Center the imageCenters the image in the element.Make image as wide as parent elementIf the element is wider than the element selected, the image will automatically resize to cover the entire element.Crop the image to fit the element sizeIn Responsive mode, checking this option makes sure the element's background image will be cropped to fill the entire element's background without distorting the image.Repeat the image verticallyRepeat the image vertically if the image is smaller than the element's height.Repeat the image horizontallyRepeat the image horizontally if the image is narrower than the element's width.Background color if emptyWhen using a dynamic image, it might take a few milliseconds for the image to load. In the meantime, select a background color for the element. The default is transparent.Bubble renders the page to adjust to the screen width, i.e, responsive layout. A few options control the behavior of the page.PreviousGeneral Properties (Legacy)NextStyling Properties (Legacy)Last modified 2mo agoWas this page helpful?Copy linkOn this pageGeneralOpacityDimensionsWidthHeightLeftTopRotation angleShadowsShadow styleHorizontal offsetVertical offsetShadow Blur radiusShadow spread radiusShadow colorFont optionsFontFont WeightFont SizeBoldItalicUnderlineText AlignmentFont ColorPlaceholder colorFont ShadowShow text shadowHorizontal offsetVertical offsetFont Shadow Blur RadiusFont shadow ColorFont optionsWord spacingLine spacingLetter spacingBordersDefine each border independentlyBorder styleBorder roundnessBorder WidthBorder colorTooltip on hoverTooltip text (on hover)PaddingTopRightBottomLeftCenter the text verticallyBackgroundBackground styleBackground ColorGradient styleGradient directionDirection degreesGradient shapeGradient baseX center position (%)Y center position (%)Starting colorEnding colorIntermediate colorBackground imageCenter the imageMake image as wide as parent elementCrop the image to fit the element sizeRepeat the image verticallyRepeat the image horizontallyBackground color if empty

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





DocuSign - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDocuSignThis plugin lets you add a link to your application to open an Envelope's documents.Get Embedded Signing URLThis action returns a link to an Envelope's documents.Return_urlEnter your page’s URL as the return urlEnvelope_id To get the envelope ID, select the document in the DocuSign interface and copy the ID after /details. For example if this were our link: https://appdemo.docusign.com/documents/details/dd80befd-65c3-4a67-b7ef-1b594173cf61 45​We would copy dd80befd-65c3-4a67-b7ef-1b594173cf61. Make sure to use your own; this one won’t work.Setup The API domain allows you choose between the demo (demo.docusign.net) and production (docusign.net) versions of the API. Once you create an API with them as shown at https://support.docusign.com/en/guides/ndse-admin-guide-api-and-keys and got the certification, you should set it to docusign.net; in the meanwhile, please use demo.docusign.net. Here is how you can fill out the other fields in your Plugins tab: API DomainSet this to docusign.net if you completed the certification and are approved to use the API by DocuSign or demo.docusign.net if you are using the sandbox.EmailEnter the email for your DocuSign account.DocuSign Integrator KeyEnter the DocuSign Integrator Key for the envelope you want to access.DocuSign Account IDEnter the account ID under which the Envelope exists.To use the plugin create a Link, set it to External URL and set the destination URL to Get Data from external API and (after installing the plugin) choose Get Docusign Embedded URL.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousDisqusNextDraggable ElementsLast modified 1yr agoCopy linkOn this pageGet Embedded Signing URLReturn_urlEnvelope_id Setup API DomainEmailDocuSign Integrator KeyDocuSign Account IDFAQ









Adding calls - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe API ConnectorAuthenticationAdding callsBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAdding callsAfter authentication is set up, you can add as many calls as you need to the API provider.Call nameChoose a name for this call. It must be unique because no two API calls can have the same name.Use asSelect from Data or Action to determine how this call will be used in Bubble. Data calls appear in the 'Get data from an external API' dropdown menu and Action calls appear in the Plugins section of the Actions dropdown menu.Delete callThis deletes the API call.Warning: Deleting an API call is permanent and cannot be undone.MethodThis is the HTTP verb. The most common are GET, POST, PUT, PATCH, and DELETE.URLThis is the call's URL. It is not client safe, meaning the value is not sent to the user's browser when the call is made.BodyThis is the call's body. It is client safe, meaning values are sent to the user's browser when the call is made.HeadersClick to add and configure a new HTTP header to this specific call. Check the Private box to stop the information in the header to be visible client-side. Check the Optional box to set up this specific key to be optional.Body typeSelect here the body type of the request. Most requests will send a JSON body, but for more advanced usage (such as uploading a file), you can use a Form-data or Raw body.Note: If you are using a Raw (plain text) body, be sure to include a 'Content-Type' header that specifies the format you are using so that it can be parsed properly by the API you are calling. ParametersClick to add and configure a new call parameter. Parameters are not sent to the client by default, but they will be if you enable the Client-safe checkbox.Default values for an API connector call (or plugin) behave differently if they are optional or mandatory. Optional default values are placeholders that aren't passed to a call unless they're changed to something else in the app. Mandatory default values are actual default values.Allow blank Check this box to prevent a parameter default value used for initialization from being sent to the client or workflow inputs.Default values for an API connector call behave differently if they are optional or mandatory.

Optional default values are placeholders that aren't passed to a call unless they're changed to something else in the app.

Mandatory default values are actual default values.Include errors in response & allow workflow actions to continueCheck this box to handle API call response errors yourself. When this box is checked, Bubble will allow workflows or actions to continue when an api call error is returned and expose the error object for use in a dynamic expression. There are 4 parameters that are available as a part of the error object: error's status code (number), error's status message (text), error's body (text), and error's has returned error (yes/no).Note: If you check or un-check this option after initializing the call, you will need to re-initialize as this option changes the format of the response.Capture response headersWhen the parameters are detected from an initialization request, you can include the request headers in the detected data if some important data is in them.Allow call to run directly in the browser where applicable Check this box to allow this API call to run directly from the browser, rather than Bubble's server. This option will only available in certain situations. More specifically, this option is only available for public API calls (Authentication is set to None) with no Headers or private Parameters. In addition, the call must be used as a data call. Support for Use as Action is coming soon. The biggest benefit of using this option, on top of performance, is that your API call will not count against API call quotas across all of Bubble, lessening the risk of accidental rate limiting by a 3rd party API.Note: Due to the nature of this type of client-side (from the browser) API call, it will only be sent from the browser if it doesn't require interaction with the server. For example, using the API call response as a data source.If this option is selected, but the API call is included in a workflow that involves the server (i.e. making changes to a Data type), the API will revert to being sent from the server. Whenever an API call is made from the browser, information related to that call can be intercepted on the client side. That means you should be cautious exposing sensitive information (e.g. API keys) in these calls. 

If you are unsure of the potential risk of sending data to the browser we recommend not activating this setting.Initialize callEvery call needs to be initialized before it can be used in your app. Initialization is done for two reasons:To confirm that the call was successfulBubble uses the response to recognize the data being returned by the serverTake caution when utilizing initialization API calls as they may produce actual outcomes, including the modification of live data. Be mindful of what kind of results the initial call may produce prior to executing it.To initialize an API call with mandatory parameters and no obvious default, you can set a default as an example, click to “Initialize,” then unset the default or select Allow blank.PreviousAuthenticationNext - Core ReferenceBubble-made PluginsLast modified 1mo agoCopy linkOn this pageCall nameUse asDelete callMethodURLBodyHeadersBody typeParametersAllow blank Include errors in response & allow workflow actions to continueCapture response headersAllow call to run directly in the browser where applicable Initialize call








Limitations & Known Issues - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookLimitations & Known IssuesBelow are known issues you might encounter in rare cases while building your app. These bugs will be reviewed on a regular basis and removed upon resolution.GeneralDropdown elementsBecause Bubble "dropdown" elements use the native HTML "<select>" tag, you generally cannot apply styles (e.g. option alignment, border roundness, etc.) to the expanded list of options (this is a limitation with CSS in general - more info). For alternatives, consider plugins.Scroll barsScroll bars, especially when in repeating groups, can sometimes look subtly different than designed on different browsers and devices. This is because Bubble relies on the end-user's operating system and browser for how a scrollbar should look.Older HardwareWhile we try to keep the Bubble editor speedy, if you are using older hardware (e.g. mid-range laptops from before 2012 or desktops from before 2010), you may experience notable lag when using the editor.Platform / BrowserSome things are not fully supported across platform / browser configurations. These are important to note as you think about the users of your application:Android (mobile)Currency format for inputs not supportedSafari (mobile)Popups don't show until page reload or tilting deviceInput cursor is offset by few lines while typingPage behind open popup is still scrollableTwilio Plugin video chats do not work properly due to some quirks of Safari mobile that are difficult to workaround. When a call is initiated, the users on the call are only able to hear and see themselves, yet Twilio recognizes this call as a successful call. Safari 13+ Safari 13 prevents any 3rd party cookies from going to iframe requests. Because of this, if your Bubble app is running in an iframe, the bubble client will start workflows as the uid of the user that was attributed to it, but will register as no_user server-side, due to the lack of cookies. The mismatch will unfortunately prevent any workflow from running successfully.  As a workaround, set "Do not set cookies on new visitors by default" in Settings > General > Privacy & Security, so that both server and client know that this is an anonymous user.Microsoft EdgeDropping files from explorer to browser does not work as expected because of a browser compatibility issueFirefoxWe are aware that Firefox has a bug with their localStorage persistence when the browser setting "Delete cookies and site data when Firefox is closed" is enabled. The impact on Bubble apps is that some behaviors, especially ones involving cookies and iframes, may not work as expected for end users on Firefox with this setting. The most notable known source of error is with Stripe transactions, which may not redirect back to the app correctly. (This is, unfortunately, a bug at the Firefox level. We are monitoring the situation there in the hopes they will fix this soon.)Note that different browsers will have their own idiosyncrasies. While Bubble tries to ensure that Bubble app behavior is consistent across browsers, there are times when this is out of our control. For example: when an app's user clicks "back", that will usually fire the "When page is loaded" event, but Safari does not allow this behavior. This is because Safari follows a different paradigm for how "back" works relative to other browsers.Browser versions play an important role in the overall reliability of your Bubble app. Some Bubble features will break as browser versions become outdated. It is highly recommended to keep your browser updated to the latest version since browsers contain bugs that get fixed with their own subsequent updates.Some custom fonts are occasionally rendered slightly differently across different operating systems and browsers. This most commonly manifests itself in their height differences which may affect element layouts.Plugin Compatibility Because plugins are "blocks" of custom code that extend the functionality of your app, installed plugins are all compiled at the same time when your app is loaded. As a result, all of the Plugins installed in your app must be able to co-exist in the same environment. Sometimes, plugins can collide with each other and cause unexpected behavior, especially when they share similar resource names. While we strongly recommend plugin developers try their best to not overwrite some common parts of the browser code, this doesn't always happen. While these compatibility issues are hard to know in advance, we will try our best to document any known compatibility issues here until we implement a system of separating plugin code in runmode. AddToAny (Bubble) and Selectize Dropdown (3rd Party)​
​PreviousNotes on QueriesNext - User manualCustomizing an ApplicationLast modified 1yr agoWas this page helpful?Copy linkOn this pageGeneralOlder HardwarePlatform / BrowserAndroid (mobile)Safari (mobile)Safari 13+ Microsoft EdgeFirefoxPlugin Compatibility 


Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





API - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAPIBubble's API features allow you to set up incoming and outgoing requests to communicate with other applications and servicesThis is the short-form technical reference entry of Bubble's API features. If you are looking for more in-depth and long-form articles on how the Bubble API works, you may be interested in checking the Bubble API manual.

Throughout reading the reference and manual, you may also find our API Glossary helpful.​The Bubble APIThe Data APIThe Data API allows other systems to search for, read, create, modify and delete data in your application’s database via a RESTful interface.The Data APIThe Workflow APIThe Workflow API allows external applications to execute workflows in your Bubble app via a RESTful interface.The Workflow APIThe API ConnectorThe API Connector is used to make outgoing connections to external applications and use it as a data source or trigger actions.The API Connector​Manual referencesThe Bubble manual gives extended information about Bubble's features and how to use them.Introduction to APIsThis article series takes an in-depth look at what exactly an API is and how you can both set up an API in Bubble and connect to external APIs in different ways.Article: Introduction to APIs
Video: Introduction to APIs
Article: What is a RESTful API?​Authenticating with the Bubble APIAuthentication is the process of identifying who the client is in order to determine what they have access to.

Article series: The Bubble API and authentication
Authentication types
The Bubble API lets clients authenticate in different ways:

Article: Accessing the Bubble API without authentication
Article: Accessing the Bubble API authenticated as a User
Article: Accessing the Bubble API authenticated as an admin
How to set up authentication in the external system
The Bubble uses the bearer token method to authenticate clients.Article: How to set up authentication in an external app​The Data APIThe Data API lets you set up an API in your Bubble application that accepts incoming requests to search for, read, create, edit and delete entries in your database.

Article series: The Data API​The Workflow APIThe Data API lets you set up an API in your Bubble application that accepts incoming requests to trigger workflows.

Article series: The Workflow API​The API ConnectorThe API Connector lets you connect to external RESTful APIs to trigger workflows or to use as a data source.

Article series: The API Connector​Core Reference - PreviousStylesNextThe Bubble APILast modified 1mo agoCopy linkOn this pageThe Bubble APIThe Data APIThe Workflow APIThe API ConnectorManual references








Email - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookEmailYour application often sends emails to your users. It can be done through the Send Email action, but can also be done with the reset password action, etc using a shared email address. When your app does not use a custom domain, all emails will come from admin-no-reply@bubble.io. This is a shared email address from Sendgrid that comes out-of-the-box with your new Bubble app to help you get started.Note: Due to rate limiting from Sendgrid on this shared email address, a maximum of 50 recipients can be specified per email. If you need more than this limit for your app, consider creating your own Sendgrid account as outlined below.To change this email, you will need to setup a custom domain. Once you have set up your domain, you can customize this email by creating your own Sendgrid account. If the domain is yourdomain.com, you can change your admin email address to, for instance, hello@yourdomain.com, or contact@yourdomain.com, etc. Note that this email does not have to match the one you used to prove your site ownership for SSL encryption activation.Bubble lets you use SendGrid to send emails with your own domain. SendGrid lets you get analytics about your email activity, spam reports, reputation management, etc.Setting up SendGridTo get started, you should create an account with Sendgrid. Once you've set up your account (and successfully set up a custom domain for your app), you can activate your Sendgrid connection.First, you should get your API key from SendGrid (see Sendgrid documentation here). Enter it in the input box in the Domain tab, and click on 'Verify Sendgrid Key'. If your key is valid, a validation email will be sent to the account you used to sign up for Bubble.Once you have validated your SendGrid connection, you will be able to, optionally, enter a template ID (so that all emails coming from your app follow a template you design in SendGrid). You will also be able to modify the alias of the admin email.Note that there are some things you can do on SendGrid's end to optimize email delivery, such as domain white-labeling, IP white-labeling, etc. We recommend you read SendGrid's documentation for more details about their service.Tip: Creating your own Sendgrid account allows you to start viewing Sendgrid's logs to see what is happening to an email after it leaves Bubble. This is especially useful if you find that emails are sent successfully from your Bubble application but not received by certain email providers, such as @hotmail.com.PreviousDomain & DNSNextPassword PolicyLast modified 1yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





The Plugin Editor - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe Plugin EditorYou can access your Plugins Page at http://bubble.io/home/plugins and create a new plugins there. This page is also where you'll be able to define your Contributor profile, set your logo, connect with Stripe if you're selling templates or plugins, etc.Clicking on the edit icon for a plugin will take you to the Plugin Editor.The plugin editor follows a similar structure to the application editor, structured in 7 tabs.1.The General tab is where you define how the plugin looks in the library and some keywords to improve its visibility2.The Shared tab is where you can define some shared technical aspects of the plugin (shared HTML header, assets, etc.)3.The API calls tab is where you add new API connections and authentications method. It is very similar to the API connector.4.The Elements tab lets you create new Bubble elements.5.The Actions tab lets you add actions that can be used in Bubble workflows.6.The Settings tab lets you publish your plugin, see the version history and pick a license7.The Review tab lets you see reviews from users.While adding API connections does not require coding skills (but a good understanding of REST API mechanisms), adding elements and actions requires Javascript coding skills.The plugin editor automatically saves your work as you are modifying the plugin. Note that the editor does not support multi-user editing.Account & Marketplace - PreviousBuilding PluginsNextGeneral SettingsLast modified 2mo agoCopy link








Workflow tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDesign tab (Legacy)This is where you design the visual appearance of the app. Draw elements on the page, drag and resize them, and adjust their properties and appearance. For new users, we recommend starting here.
 
To add a new element, click an element type in the Palette on the left, then click and drag on the page to insert it. Double-clicking on an element reveals the Property Editor, where you can customize the element's appearance and behavior. Right-clicking on an element displays a drop-down menu with additional editing options.For more information to get started, see the "Building a user interface" guide.UI BuilderThe UI Builder subtab is where you can add new elements to the page and modify any existing elements. Bubble is generally a "what you see is what you get" (WYSIWYG) editing experience - whatever you create in this tab is generally what an end-user of your app will see, though there are many features to help you design your app exactly how you want it.Your app can have multiple pages, and in fact comes by default with a few pages: the 404 page which end-users see if they visit a URL on your app that doesn't exist, and the reset_pw page which end-users use to reset their passwords. You can create new pages or switch to editing other pages (or reusable elements) via the dropdown in the upper left, in the top bar.Elements TreeThe elements tree shows all the elements that currently exist on the page. Indentation signifies a relationship between a container and the contents of that container - remember that there can be multiple levels of nesting (e.g. groups within groups within ...).The top-down ordering of the elements tree corresponds to the vertical positioning of elements on the page (note: not the z-ordering). Greyed out items in the list are currently hidden; you can click on these in the elements tree to make them visible and select them.Element paletteBelow the elements tree is the palette of all elements that you have access to for building your app. Bubble comes with many built-in element choices; you can also gain access to new elements via plugins. The element palette is divided into a couple of sections for organization. Visual elements are ones that generally simply display something on the page. Container elements are elements that can contain other elements, including other containers. Input form elements generally allow the end-user to provide some kind of input, whether it be text, files, or something else. Below that is the section of reusable elements available in the app. And at the bottom is a section of two special element templates: tab element and signup login form, which are two common user interfaces that might be helpful in your app.Element InspectorThis slidable inspector shows a view of how the selected element is used on the page. Since an element can be used in many different places, such as in events, actions, or other elements, this centralized view is helpful. The Element Inspector shows the element's custom states and allows you to modify, delete, and add a new state. The element's events and actions are also shown along with the other page elements referring to the current element. Clicking on an entry takes you to the appropriate place in the Bubble Editor.ResponsiveYou can switch the Design tab to the Responsive sub-tab. This is where you control the responsive settings of the page and all the elements within. Responsive settings refer to the configuration of how the page is displayed on varying screen widths - how the layout 'responds' to changing widths. At the top of the left flyout of this sub-tab, there are shortcuts to snap the page width to different common screen widths, e.g. mobile portrait, mobile landscape, tablet and laptop. You can also change the page width to any arbitrary width using the ruler at the top.  PreviousDesign tabNextWorkflow tabLast modified 8mo agoWas this page helpful?Copy linkOn this pageUI BuilderElements TreeElement paletteElement InspectorResponsive

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Capacity Usage - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCapacity UsageThis section of the editor shows your app's capacity usage and real time metrics. These metrics are useful for pricing purposes and assessing app performance.Page load metricsThese charts show metrics about your pages loading time. This data is gathered over the latest page loads by all your users over the last 60 minutes.Metric to displayYou can see three different kinds of metrics:Page load duration: render complete The time in milliseconds from when the Bubble server first receives a request for a page, to when all elements on the page are finished rendering. This includes the time it takes for the server to process the request, latency between the server and the web browser, the time it takes to load all client-side javascript and css, and the time it takes the browser to draw the elements on the page.Page load duration: data loaded: The time in milliseconds from when the Bubble server first receives a request for a page, to when all the elements on the page are rendered, and all the dynamic data required by above-the-fold elements is fetched and displayed. This is equivalent to the "Page Loaded Above Fold" data source. It includes all the time included "Page load duration: render complete", plus the time to load data (such as Repeating Groups lists).Page load: count of data items required: This is the number of data Things loaded during the period tracked by the "Page load duration: data loaded" metric. It's an estimate of the total data the page requires in order for all the above-fold elements to finish loading. It's useful for investigating the impact that loading data (for instance, in Repeating Groups) is having on page load times.PercentileYou can choose to show averages over the best X percents. The best 1% will show the best performance, while 99% will show all situations.PreviousPerformance & ScalingNextNotes on QueriesLast modified 2yr agoWas this page helpful?Copy linkOn this pagePage load metricsMetric to displayPercentile

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Facebook - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookFacebookLet users log in with their Facebook accounts, and fetch their Facebook profile data.Facebook LikeThis element displays a Facebook like button on the page.Link to likeThis is the link of the page you want users to like.ActionChoose from Like and Recommend for the verb.Color SchemeChoose from Light and Dark for the color scheme.LayoutChoose from the Facebook layout options, Standard, Button_count, Button, and Box_count.Share buttonCheck this box to display a share button.Show facesCheck this box to show faces of the friends who liked the page.Facebook PageThis element displays a Facebook Page Plugin for a Facebook page.Page linkThis is the link of the page you want the element to display.Hide page coverCheck this box to hide the cover of the page and make the element smaller.Show facesCheck this box to show the faces of the people who like the page.Show postsCheck this box to display the latest posts of the page.Send Facebook MessageThis action enables users to send a Facebook message through a Facebook popup.LinkThis is the link you want the user to share by default. It can be changed in this popup, per Facebook's policy.Facebook userThis is the user you want users to send the message to. It should be the Facebook profile of the user and is accessible if the designated user also signed up with Facebook through the app.Setup App ID / API KeyOnce you create an app in your Facebook developer account, open the Basic section of your app's settings to copy and paste its App ID into this field.App SecretIn your Facebook developer account, copy your app's secret from its Basic settings and paste here.ScopeChoose from "Simple" or "With friends" permissions. "Simple" will give you access to the user's name, email,  and profile picture, for example, and "With friends" will additionally give you access to the user's list of friends. The latter option requires approval by Facebook.Include user profile URLThis setting requires app approval by Facebook.Use a generic redirect URLCheck this box to use the suggested redirect URL (recommended). This is the URL that Facebook will redirect to when authenticating a user.App ID / API Key - devOptionally enter a development API Key. When your app is in development (version-test), Bubble will use this key. App Secret - devOptionally enter a development App Secret. When your app is in development (version-test), Bubble will use this key. FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)PreviousDropzoneNextFitbitLast modified 1yr agoCopy linkOn this pageFacebook LikeLink to likeActionColor SchemeLayoutShare buttonShow facesFacebook PagePage linkHide page coverShow facesShow postsSend Facebook MessageLinkFacebook userSetup App ID / API KeyApp SecretScopeInclude user profile URLUse a generic redirect URLApp ID / API Key - devApp Secret - devFAQ









Screenshotlayer - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookScreenshotlayerThis plugin allows you to take a screenshot of a page within your Bubble application.Get data from external APIBy adding this call in a workflow or dynamic field, it allows you to generate a screenshot of a page within your Bubble application.API providerThe external API that you’ll call. Select the Screenshotlayer - Get screenshot option.(param). urlThe url of the application page you’d like to capture a screenshot of.(param). widthThe width of the generated screenshot image.(param). forceSet to "1" if you want to force the API to capture a fresh screenshot.(param). placeholderAdd a URL containing a custom placeholder image or set to "1" to use default placeholder. The placeholder image will act as a template for a starting screenshot.(param). viewportThe section of a screen’s viewport that will be captured.(param). delayThe delay from the screenshot event trigger and the time of the actual screenshot capture.SetupAfter installing the Screenshotlayer plugin, you’ll be required to add your own API keys to begin capturing images. You can request your own API key on the Screenshotlayer developer portal here. Once you’ve created an account, you can generate an API key. Now, copy the API key value into both the ‘API key’ & ‘API key’ - dev field of your Bubble plugin.

After configuring your API keys, you’ll now need to create an image data field within your database to store a screenshot.Now, within a workflow, you can reference the external API service to update the image field within your database with a screenshot. From the API provider dropdown menu, select the ‘ScreenshotLayer - Get screenshot’ option.

From here, you’ll then need to update the (param.)url field to identify what page of your application you’d like to capture a screenshot of. If you’d like to capture the current page, insert dynamic data of this url.At this point, you can also update additional parameters of the screenshot, including the dimensions and delay.

Additionally, it’s also possible to specify what file type or format you’d like to store the screenshot in using the more operator.

FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)

PreviousRich Text Editor (Legacy)NextSelectPDFLast modified 1yr agoCopy linkOn this pageGet data from external APIAPI provider(param). url(param). width(param). force(param). placeholder(param). viewport(param). delaySetupFAQ









Mouse & Keyboard Interactions - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMouse & Keyboard InteractionsThis is a highly experimental feature - we built this plugin with its collection of advanced features because we like to think about how we can push the frontiers of what Bubble apps are capable of. While we believe the functionality generally works at the time of launch, we explicitly do not guarantee that we will fix bugs or build follow-on features relating to this plugin. That means you should be cautious before over-relying on any of these features, but we hope you have fun and we’d love to hear about how you use these features! (For more information / discussion on this plugin, see the forum announcement.)The Mouse & Keyboard Interactions plugin contains a number of more advanced features that let you customize the keyboard and mouse interactions on your app.

InstallationYou can find the Mouse & Keyboard Interactions plugin in the plugin gallery. It’s free to install and there are no configuration settings at the plugin level.Data source: Get mouse dataThis is a new data source that’s an option in the data source dropdown in a dynamic statement. It gives access to the following operators:Get mouse data’s X positionThis is the mouse’s X (horizontal) position on the page, where the left side of the window is 0.Note: Using this in conditionals (”Only when...”) on certain workflow actions may not work; try using this as the conditional on the event instead.Get mouse data’s Y positionThis is the mouse’s Y (vertical) position on the page, where the top of the window is 0.Note: Using this in conditionals (”Only when...”) on certain workflow actions may not work; try using this as the conditional on the event instead.Get mouse data’s right mouse clicked downThis is a yes/no value that starts off “no” when the page is loaded and becomes “yes” when the right mouse button is clicked down. It should flip back to “no” when the right mouse click is released.Get mouse data’s right mouse click releasedThis is a yes/no value that starts off “no” when the page is loaded and becomes “yes” when the right mouse was clicked but has since been released. It stays “yes” until the next time the right mouse button is clicked down, at which point it flips to “no”.Note: This will only work reliably if there’s a right-click workflow event on the page that has the default prevented.Get mouse data’s left mouse clicked downThis is a yes/no value that starts off “no” when the page is loaded and becomes “yes” when the left mouse button is clicked down. It should flip back to “no” when the left mouse click is released.Get mouse data’s left mouse click releasedThis is a yes/no value that starts off “no” when the page is loaded and becomes “yes” when the left mouse was clicked but has since been released. It stays “yes” until the next time the left mouse button is clicked down, at which point it flips to “no”.Event: Mouse is clicked downThis event, found in the new events category “Interactions”, fires when a mouse button is clicked.Click sideThis event can respond to the left, middle or right buttons on the mouse.Prevent defaultIf this event is triggered by the right mouse button, there is the option to prevent the default right-click behavior, which usually brings up the browser’s / system’s right-click menu.Tip: Clicks on elements like buttons will also trigger this workflowNote: If an event on the page is a right-click event that has the default prevented, then all right-clicks on the page will have their defaults prevents even if there’s an “Only when” statement on the event that isn’t satisfied.Note: Clicks on an Apple Magic Mouse may not produce the desired effect.Event: User scrolls on pageThis event, found in the new events category “Interactions”, fires when a user scrolls on the page using a mouse wheel. This is explicitly not when a user manually move the page’s scrollbar up or down, but this means that this event can trigger on a mouse wheel scroll even on a page that’s not long enough to need a scrollbar.Scroll directionChoice of when the user scrolls up, down or in either directionTriggerThis event can trigger either when the user begins their scroll or ends their scrollPrevent defaultIf checked, the mouse wheel scroll will not actually scroll the page for the user, but will still run this workflow.Tip: If you use this action in conjunction with the mouse’s X / Y positions, it will get a bit confusing whether the X / Y refers to before or after the scroll, so consider using the “prevent default” toggle.An element is hoveredThis event, found in the events category “Elements”, fires when the user’s mouse begins to hover over the specified element.ElementThis is the element on the page that, when hovered, will initiate this workflow.An element stops being hoveredThis event, found in the events category “Elements”, fires when the user’s mouse stops hovering over the specified element.ElementThis is the element on the page that, when it stops being hovered, will initiate this workflow.User presses a key or combination of keysThis event, found in the new events category “Interactions”, lets you create custom keyboard shortcuts for your apps. See below for which keyboard shortcuts are supported.Keyboard shortcutThe combination of keys that when pressed, fires this workflow. Note that when you are focused on this field, it detects which key combination you are pressing, and you cannot manually edit the combo it detects.These combos are supported:A shortcut can have multiple of these keys together (often called modifier keys): Shift, Control, Option (Mac) / Alt (Windows), and Command (Mac) / Windows (Windows)A shortcut can only ever have at most 1 of these keys: letters on an English keyboard, digits, tab, caps lock, a directional arrow, backspace, escape, page down / page up, F1-10, F12, + (via numpad), the symbols ` - = [ ] \ ; ‘ , /These keys explicitly will not work: F11, Fn, EnterAny special modifier key not in the list above will probably not workMany keyboard shortcuts (especially ones with the Windows key) are reserved by the operating system and cannot be overwrittenNon-English keyboards will have special characters that generally do not work with this featureNote: If you want to rely on a custom shortcut key, be sure to test it out on both Mac and Windows (and other operating systems if you expect your users to use them). Generally speaking, Option on a Mac corresponds to Alt on Windows, and Command on a Mac corresponds to Windows on Windows. But, there can be exceptions to this rule, and the two operating systems definitely have slightly different sets of reserved shortcuts.
If in doubt, your best bet is to test any potential shortcut out on different operating systems.Disable when input is focusedLets you choose whether this custom keyboard shortcut should work when the user is focused in an input fieldAction: RepositionThis action, found in the “Plugins” category, will reposition an element on the page. This only works for popups, floating groups, alerts and group focuses.Note: Be careful when creating workflows that have different actions that might trigger together when using these interaction features, because certain combinations can confuse Bubble. For example, if you have a workflow event for clicking on a button that shows an alert and a second workflow event for a left mouse click that repositions the same alert, in a situation where both workflows should fire, Bubble will not know which to fire first. One workaround is to combine the actions into just one workflow.X positionThe X (horizontal) coordinate on the page that the top-left corner of the element will move to, where the left side of the window is 0.Y positionThe Y (vertical) coordinate on the page that the top-left corner of the element will move to, where the top of the window is 0.PreviousMixpanelNextMultiselect DropdownLast modified 1yr agoCopy linkOn this pageInstallationData source: Get mouse dataGet mouse data’s X positionGet mouse data’s Y positionGet mouse data’s right mouse clicked downGet mouse data’s right mouse click releasedGet mouse data’s left mouse clicked downGet mouse data’s left mouse click releasedEvent: Mouse is clicked downClick sidePrevent defaultEvent: User scrolls on pageScroll directionTriggerPrevent defaultAn element is hoveredElementAn element stops being hoveredElementUser presses a key or combination of keysKeyboard shortcutDisable when input is focusedAction: RepositionX positionY position









Element Events - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsGeneral EventsElement EventsCustom EventsRecurring EventTrigger EventActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookElement EventsAn element is clickedWatch this video to learn how to use An Element is Clicked EventThis event is triggered when the user clicks on the element. Most visual elements can trigger this event, including texts, buttons, images, and icons.An input's value is changedOur Academy quick tip on how to trigger workflows from inputsThis event is triggered when the value of an input changes. For text inputs, the event is triggered when the user removes focus from the input.A map's marker is clickedWatch this video to learn more about the Map Marker is Clicked EventThis event is triggered when the user clicks a map's marker. 'This map's current marker' refers to the marker the user clicked.A popup is openedWatch our Academy quick tip on how to start workflows based on a popupThis event is triggered when a popup opens through a 'Show element' action.A popup is closedThis event is triggered when a popup closes, either through a 'Hide element' action or when the user presses Esc.An element has an error running a workflowWatch this video to learn more about this eventThis event is triggered when the user interacts with an element, like clicking a button, and an error occurs. This happens for both expected errors, such as a failed login attempt, and unexpected errors, such as a bug with the Bubble platform.
 
If no error workflows are defined, the default is to display an alert with an error message. If at least one error workflow runs successfully, i.e., the condition passes and the workflow runs without an error, the error message will not be displayed, and the workflow notifies the user that an error occurred, if appropriate.
 
Use 'Current workflow error' to see the original error message. It has two properties, 'code' and 'message.' 'code' is a short phrase to use in conditions. 'message' is the actual error message that would display if there were no error workflows. Use 'message' to show the message in an Alert element, for example. Do not use 'message' in conditions since it is language-dependent and can change. 'code' will always be the same no matter what language the app displays. The codes and error messages are listed in the Languages section in the Settings Tab.
 
For error workflows meant to provide a nicer response to unexpected errors, we do not recommend reading data from the database or an external API because if the error is caused by a network or connectivity issue, the error workflow may also fail if it relies on data that cannot be loaded. If the error workflow fails, the user will see an error alert.
 
See 'An unhandled error occurs' below to create error handlers that are not element specific.​​​​​​​​​​​​​​​PreviousGeneral EventsNextCustom EventsLast modified 1yr agoCopy linkOn this pageAn element is clickedAn input's value is changedA map's marker is clickedA popup is openedA popup is closedAn element has an error running a workflow








Commenting - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSchedulerIn the Logs tab of your application editor, you can access the Scheduler to view all upcoming scheduled workflows. Please note that the scheduler is a queue. We can think of the scheduler as a funnel. If we fill a funnel with water faster than the rate at which it drains, the water will fill up the funnel. Similarly, if we “fill” the scheduler by scheduling a lot of workflows, we can see the tasks “fill up” the scheduler and experience delays.Currently, we cap the scheduler’s drain speed at roughly 60% CPU to prevent the app from going down under the scheduler load. Making the tasks lighter or scheduling fewer of them in a set time frame should improve this “draining speed”.ShowYou can select a time and then click “Show” to search for workflows set to occur after that time. ​Pause Tasks Click here to pause upcoming workflows. If your workflows are not running as expected in live or development, check that your workflows have not been paused. If they are already on pause, this will read “Resume tasks,” which you can click in order for scheduled workflows to run again.Cancel all You can delete all past workflows that have not run yet, or scheduled workflows in their entirety. PreviousBulk OperationsNextCommentingLast modified 8mo agoWas this page helpful?Copy linkOn this pageShowPause Tasks Cancel all 

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Segment - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSegmentSegment is a third party tool that helps you manage the data generated by your web properties. In a nutshell, it lets you connect "Sources" of data (e.g. your Bubble app) with "Destinations" that the data should flow to. Destinations include analytics tools like Google Analytics, marketing tools like Mailchimp, data warehouses like Snowflake, and more.At Bubble, we use Segment because it lets us implement all the event logging we want in our product once, and lets us direct that stream of data to all the other tools we use. In fact, we use this Segment plugin ourselves on bubble.io!Note: Segment is a third-party tool that has its own Pricing structure, though there is a free tier.Track an event with SegmentSegment connects you with more than one analytics service at a time. This action tracks an event, which can be sent to Mixpanel, Hipp, etc. You must create an account with Mixpanel and enter the keys in the Plugins Tab. This action tracks events on the client side.Event nameSelect the name of the event to send. Select an existing one or create a new one.Additional valuesDefine more key/values to send more data to Segment, such as age, gender, etc.Track an event with Segment (Server)This action tracks an event and sends to Segment from the Bubble server instead of the client. Use this method for tracking events that require greater reliability, as it ensures ad blockers do not disrupt the event. This action uses capacity, so use for only critical events. This option will automatically package some client data such as page, user agent, locale, ip address, and email of the user.Event nameSelect the name of the event to send. Select an existing one or create a new one.Additional valuesDefine more key/values to send more data to Segment, such as age, gender, etc.Send a page view to SegmentThis registers a page view with Segment, to send to Google Analytics, for example.Page categoryDefine categories for the pages. Select an existing one or create a new one.Additional valuesDefine more key/values to send more data to Segment, such as age, gender, etc.Identify a user with SegmentCalling this action makes sure all events are attached to the relevant user in Segment and the other services Segment connects to.SetupInstalling the Segment pluginYou can find the Segment plugin just like any other plugin: in the marketplace in the Plugins tab from your Bubble editor. (These instructions are for the Bubble-made Segment plugin.)After you install it, you should see the plugin's settings like this:Write keyThis key is used to send data from your app to Segment. You can find this information in the Segment UI by navigating to Sources → Settings → API Keys.Using this with Google AnalyticsGoogle Analytics is a popular tool to measure traffic to your app, as well as log events.Note that if you begin using Segment, you should not also use the Google Analytics Bubble plugin. Instead, you should connect GA as a Destination in your Segment account.To finish establishing the Segment -> Google Analytics connection, in the Destinations tab -> Settings (for Google Analytics), make sure to set:Website Tracking ID (as your Google Analytics id)Serverside Tracking ID (same as above, your Google Analytics id)​FAQNote that various browser extensions and settings can interfere with Segment tracking. In practice, this usually only impacts a smaller minority of your potential logs, but may differ by demographics of your audience. If there's a user action you really want to log, consider using the "Track an event with Segment (Server)" action, which does the logging on the Bubble server, but note that these events will be logged without some of the usual metadata (i.e. not the metadata that comes from the user's browser)Segment has a live debugger where you can see events being logged by Segment in real time.You generally will want to use the "Identify a user with Segment" action if you're using any of the other Segment tracking actions​PreviousSlackNextSlick SlideshowLast modified 1yr agoCopy linkOn this pageTrack an event with SegmentEvent nameAdditional valuesTrack an event with Segment (Server)Event nameAdditional valuesSend a page view to SegmentPage categoryAdditional valuesIdentify a user with SegmentSetupInstalling the Segment pluginWrite keyUsing this with Google AnalyticsFAQ








API Glossary - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorPlugins that connect to APIsAPI GlossaryTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAPI GlossaryThis section covers widely used API terminology.Help us improve this articleThis article is part of a significant update to the Bubble manual and your feedback is critical to our efforts to continuously enhance our written documentation.

We would greatly appreciate if you could take a moment to let us know your thoughts on the quality of it. Thank you for your support!

Give feedback on this article​​Authentication and authorizationAuthentication is the process of verifying the identity of a client sending an API request (who the client is). For example, the Bubble API can be set up to require a bearer token to prove the identity of the client trying to connect. This process of providing the credentials and the server verifies them is the authentication process.

Authorization is the process of determining what a client has access to after they have authenticated themselves. It is the mechanism by which an API can determine what a user or system is allowed to do once they have been authenticated. For example, after a client has authenticated themselves with the Bubble API, the API will check your app's Privacy API settings, Privacy Rules and other details to determine whether they have access to specific resources.In short: Authentication is the process of verifying who you are, while authorization is the process of verifying what you have access to.​Further reading:Article: Authenticating with the Bubble API
Article: Setting up Authentication in the API Connector
Article: The Data API and Privacy Rules
Article: The Workflow API and Privacy Rules​APIAPI stands for "Application Programming Interface" and it is a set of protocols, routines, and tools for allowing different software systems to communicate with each other.

Further reading:
Article: Introduction to APIs
Article: What is a RESTful API?​Client/ServerIn the context of an API call, the Client is the one that initiates the call and the server is the one to respond.

In the case of an incoming API request (The Data API or Workflow API) the system sending the request is the client and the Bubble server that hosts your app is the server.

In the case of outgoing API request (The API Connector) your Bubble app is the client and the system you are connecting with is the server.

Further reading:
Article: The Client/Server relationship​EndpointAn endpoint is a specific URL that an application can send requests to, to retrieve or manipulate data.

In the Bubble API, the endpoint is the URL that identifies a data type or a specific API Workflow. In outgoing requests made via the API Connector, the endpoint is the HTTP action and URL that you are pointing the call towards.

Further reading:Article: Data API endpoints
Article: Workflow API endpoints​HTTP MethodThe HTTP method is the instruction for the server to indicate the desired action to be performed on the specified resource (e.g. GET, POST, PUT, DELETE).

Further reading:Article: What is the HTTP method?
Article: Introduction to APIs​JSONJSON is a lightweight data interchange format typically used in Javascript. It uses human-readable text to transmit data objects that consist of attribute–value pairs and array data types.

It is commonly used both in incoming API Connections (the Data API and Workflow API) and outgoing API Connections (The API Connector).

Further reading:
Article section: What is the JSON format?​Oauth2OAuth2 is a protocol used by a server to determine a client's authorization. It lets a User grant an app (like your Bubble app) access to the resources stored in an external app without having to share their login credentials with the first app.

Instead, the server that hosts the external app will issue a token that your app can use to access the User's resources. That way, subsequent requests can be made without the User having to authorize each one or share their credentials.

Examples:A User wants to connect their social media account (such as Facebook or Twitter) to your Bubble-built social media management app in order to share posts automatically. The User grants your app access to their social media account using OAuth2, and your app is issued a token that it can use to post photos on behalf of the User.A User wants to be able to automatically add appoints to Google Calendar when a meeting is booked in your Bubble-built CRM. The User grants your app access to their Google account your app is issued a token that lets your app make changes to the User's calendar as needed.An enterprise clients wants to allow your app to access resources from their server without giving them actual login credentials. They use OAuth2 to issue a token to your app that you can use for subsequent calls.PayloadThe payload is the data or information sent in an API request or response.ResourceA resource is a specific data object or service that is made available by an API and can be accessed via a unique endpoint using methods such as GET, POST, PUT, and DELETE.

For example, if you are trying to access data about a specific User in your Bubble app from an external application, the User endpoint can be considered a resource. The same can be said about a specific API Workflow.

In other words, a resource represents a specific piece of information or functionality that an API can provide.

Further reading:
Article: What is a RESTful API?​Request/ResponseIn an API call, the request is the data sent from the client to initiate the connection. It contains all the data needed to authenticate and instruct the server what the request is about.

The response is the data sent back from the server to the client in response to the request.

Further reading:Article: Introduction to APIs​RESTfulAPIs that are RESTful mean that they are built on a set of architectural principles for building web services known as Representational State Transfer (REST). Most commercial and public API services adhere to these principles.

In short, this is a way to ensure that APIs that communicate with each other are compatible, or "speak the same language" if you will. Bubble's API and the API Connector is built around RESTful principles, which means it can connect to almost any web API.

Further reading:Article: What is a RESTful API?​TokenA token is a string that identifies the client sending an API request.

In the case of incoming requests (The Data API or Workflow API) the token is issued by Bubble.

In the case of outgoing requests (The API Connector) the token is issued by the server you are connecting to.

Further reading:
Article section: What is a bearer token?
​PreviousPlugins that connect to APIsNext - User manualTesting an ApplicationLast modified 1mo agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





App plan - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookApp planApplication planBubble plans apply to a specific app. Higher plans unlock certain features as well as provide more capacity for the app. You can upgrade or downgrade your app's plan here, as well as see which features you would gain or lose in the process. In addition, any coupons you have active on your account will display here. Bubble uses Stripe to process all payments.Capacity temporary boostCapacity is a measure of the computing resources your app uses and the amount of capacity available to your app at any given one time depends on the plan it is on. The capacity temporary boost feature lets your app temporarily access more capacity, useful for an unexpected surge in popularity, for debugging purposes, or for experimenting with some of the capabilities of a higher plan. You have a certain number of boosts available within a given time period.Additional capacity & storageOn certain higher app plans, you can add additional units of capacity or storage (measured in 10 GB increments) as needed.Paid pluginsThis section of Settings will show any paid plugins that the current app is subscribed to.​​​​​​​​​​​​​​​Core Reference - PreviousApplication SettingsNextGeneralLast modified 1yr agoCopy linkOn this pageApplication planCapacity temporary boostAdditional capacity & storagePaid plugins








Data tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookData tabThe Data Tab manages the data that users create when using the app. It is where you configure and see the data within your app's database. It consists of a number of sub-tabs.For more information to get started, see the "Working with data" guide.Data typesThis sub-tab is where you define the data types that your app has - the kinds of things that you want to store data about in your database. The list of existing data types is listed on the left, along with a place to create a new data type. When a data type is selected, its fields are shown on the right side, along with the ability to create a new field on that data type.Note that a savvy outsider can see the structure of an app's data types, including all the data types' names and what fields exist on the data types.Make this data type privateWhen creating a new data type, you have the option to make it private or public. If the data type is made private, it will be created with a privacy rule that allows only a thing's creator to view all fields, find the thing in searches and view attached files, with the "Everybody else" permission set to nothing allowed. If instead the data type is created as public, things of the type will be visible by everyone.For more information about why privacy rules are important and how they work, see this article.PrivacyThis sub-tab is where you define rules around which users can see different kinds of data, or under which situations a user can see the data. Privacy rules are very important for the data privacy of your app! By default, new data types are generally visible to all end-users, so it's important to set privacy rules before you begin handling real end-user data.For more information to get started, see the "Protecting data" article.App dataThis sub-tab shows you the data in your app's database. You view the data by data type, and you can create custom views of a data type to show a specific set of fields as columns, a filtered subset of data, sorted data, etc. Note that the development and live versions of your app have separate databases, so you need to switch between them in the upper right in order to see the respective data. You can also create, modify or delete specific things (rows) in the database, or do bulk upload, export or modify actions.Run asWhen looking at the user table, clicking the button 'Run as' runs the app as if you were that user, which makes debugging particular cases much easier.Warning: Until you logout, you are using the app as this user, so do not make modifications.New viewClicking this button displays a popup that creates a new database view, which defines the fields that are seen on the right side of the screen. Constraints can be added to create a smaller list. By default, each type has a view that shows most fields with no constraints. The number of views is unlimited, and these views are shared between the Live and Development versions.Duplicate views Click the "Copy" icon next to the name of an existing database view to create another view just like it. You can then modify and add additional constraints to the duplicate. SearchEnter something into the input box, and the things in the current view that contain the entered text are listed. Use this for a quick search of the app data.New entryClicking this button displays a popup where you create a new database entry. Choose the type of thing and enter information into the predefined fields. This is equivalent to using a 'Create a new thing' action in a workflow.Note: If you are uploading a file directly in App Data when creating or modifying an entry, there is a maximum file size of 50 MB. You can use the file uploader element instead to upload files up to 5 GB.UploadClicking this button displays a popup where you upload a comma-separated CSV file of data. The type of data and relevant fields should be defined in the app before importing the file. This feature is available to users with a paid Bubble plan.
 
Select the type of data and file to upload. Map the columns from the file to the fields of the data type and then validate and upload the data.Important: The first row of your CSV file must be a header row containing the names of the fields for the data. Here's a sample file for reference.ModifyYou can bulk-modify data via a CSV upload. To do so, you should have a file with a column containing the unique ID of the things you want to modify, and enter the values that should be modified in subsequent columns.ExportThis button generates a CSV file with the data of the current view. The file is exported to the Download folder of your browser. This file can be edited. Because the app owner performs this operation, no privacy rules apply, and all fields chosen in the current view are exported. This feature is available to users with a paid Bubble plan.Bulk ActionClicking this button displays a popup that runs an API workflow on the entries in the current view. This is useful when you want to modify a list of things in the database. Select the API workflow you want to run. The workflow takes only a thing as a parameter.Warning: This operation permanently modifies the data. If processing many entries, this may take some time.Switch to Live/Switch to Dev.Clicking this displays the Version dropdown menu to switch between the Development and Live versions of the app. Remember that each version has a separate database.Copy and restore databaseClicking this button opens a popup to overwrite the Live version of the data with the Development version, and vice and versa. Use this to test the app with real data or migrate the Development version data to the Live mode.
 
For users with a paid Bubble plan, the application database can be restored to an earlier point in time. The restore functionality is designed to recover from mistakes that corrupt or delete big chunks of data. It restores the complete state of the database, including all the users' account information, a list of images, scheduled workflow runs, etc.Warning: Any data created after the restored version will be deleted. This option should be used only in catastrophic situations where it is better to revert to a previous database than to work with the current database. Restore operations are reversible. Simply perform another restore to the point in time right before the first restore.Primary fieldsClicking this button opens a popup where you define the primary field for each of the data types. This determines the way the data is displayed and how the CSV files are generated. For example, a user may be represented by his email, an apartment, an address, etc. This is for display purposes only.Refresh data Refresh to view recent changes to your data, especially as the result of a backend workflow or database trigger event. Load 50 more itemsClick here to display an additional 50 rows in this database view. Upload data as a CSVThis popup uploads existing data from a CSV file. CSV is a standard way to represent rows and columns of data in a text format. Microsoft Excel, for example, generates these files. This feature is available to users with a paid Bubble plan.Note: This feature is now in public Beta and some limitations may exist. For example, there is a minor inconsistency in formatting between how Bubble exports a list"x , y , z"and the list format it requires on import"[x , y , z]".Type of dataSelect which type of data to upload. The type of data and relevant fields should be defined in the app before importing the file.Data delimiterCommas are typically used to delimit entries, but different delimiters are possible. Tab or pipe delimiters are useful when working with text that includes commas. Choose the delimiter in the application creating the CSV file.Pick a file to uploadSelect a CSV file to upload.Map fieldsThis very important step is where you map the columns of data to the fields in the application database.Custom fieldSelect a data type field in the dropdown menu for each column of data. These fields should be defined in the data type before the upload.Composite fieldIf the field you're matching the column with is a custom type, then specify which field of the subtype should be used to match the text entry. For example, let's say you're uploading a list of apartments, and one of the fields is an owner. If the owner is represented by a last name in the CSV file, choose 'Last name' as the composite field. The entries should exist in the database before you upload the file. If two entries in the Bubble application database match the same value, an error will be returned.List delimiterThis is the delimiter to use when a field is a list of things. It should be different from the main delimiter. For example, if ';' is used as the delimiter, the data should be in this form: 12;54;32;67.Note: When importing data for type list, optionally enclose the list in '[' and ']', and then separate the individual items with the delimiter. For example, "[kitchen; bedroom; bathroom]", or "kitchen; bedroom; bathroom".Overwrite data when the field value is emptyWhen unchecked, empty entries in your CSV for a field will be ignored. When checked, instead they will explicitly overwrite the existing value with an empty value. In both cases, unmapped fields are ignored and will not be overwritten.Validate dataClicking this button does a quick analysis of the data to be uploaded, to make sure the first couple of rows are valid.Upload dataClicking this button uploads the data. First, it uploads the file to our servers. Then, it processes the upload in the background using your server capacity. While this happens, you are free to close the webpage and come back. An email will be sent on completion, or if there is an error while uploading.Note: Only one upload or modify can occur at a time for a given application.Option setsOption sets are lists of a given set of options that are defined by you for use throughout your app. Examples would include things like a pre-defined list of statuses that tasks can go through, a list of all countries in the world, types of user privilege levels, etc. Unlike data, the options in an option set cannot be added to, deleted or modified by an end-user - they are defined as part of the app. This sub-tab is where you manage your option sets: which sets exist, the specific options in a set, and any additional attributes you've created on a set.File managerThe File Manager section in the Data Tab shows the files or images that you or your users have uploaded in either the development or live version of your application. These are stored separately from the defined data types or option sets, and you can manage them here. Note: Apps on free plans do not have the ability to upload .html file types. If you need to upload an .html file type for your app's use case, consider upgrading to a Paid plan.File nameThe name of this file when it was uploaded to your application. Enter a name to search for a specific file.Only private filesIf this box is checked, only files attached to a data type, and therefore controlled by that type's privacy rules, will appear in your list of files.File type Limit the displayed files based on type, for example, show only jpegs, pngs, or PDFs.Sort by Choose whether to sort by file size or created date, and check the "Descending" box to largest to smallest files, or most to least recent.SearchClick this button to apply your search constraints for file name, private files, file type, and sort by field.Size The size of the uploaded file in bytes.Type The format of the uploaded file, such as csv, css, jpeg, png, pdf, or ttf.Uploaded dateThe time at which the file was uploaded. User ID The unique ID of the user who uploaded the file. Attached toFor private files, the unique ID of the thing this file is attached to. ViewClick this link to preview the uploaded file. When you click this from the File Manager, you have admin access and will also be able to view private files. ​PreviousWorkflow tabNextStyles tabLast modified 3mo agoCopy linkOn this pageData typesMake this data type privatePrivacyApp dataRun asNew viewDuplicate views SearchNew entryUploadModifyExportBulk ActionSwitch to Live/Switch to Dev.Copy and restore databasePrimary fieldsRefresh data Load 50 more itemsUpload data as a CSVType of dataData delimiterPick a file to uploadMap fieldsCustom fieldComposite fieldList delimiterOverwrite data when the field value is emptyValidate dataUpload dataOption setsFile managerFile nameOnly private filesFile type Sort by SearchSize Type Uploaded dateUser ID Attached toView

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





YouTube - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookYouTubeLet users login with their YouTube accounts and fetch a list of videos they've uploaded.Signup/login with a social networkThis workflow step allows you to integrate the YouTube authentication event when registering a new user, or logging in an existing user.OAuth provider - YouTubeAllows the Bubble editor to verify the correct social platform to login/signup the user.Current user’s YouTubeWhen adding dynamic data, this operator allows you to fetch and display content from a user’s connected YouTube account.YouTube video’s IDThe unique ID of a YouTube video.YouTube video’s titleThe title displayed on the public YouTube video.YouTube video’s descriptionThe description field of a YouTube Video.YouTube video’s thumbnail URLThe image file destination URL storing the thumbnail image.SetupConfiguring your APIOnce you’ve installed the YouTube plugin, you’ll need to create an OAuth credential within your Google Developer Console. Within your application project, select the ‘create credentials’ button, then choose the ‘OAuth client ID’ option.

From here, you’ll need to configure your application settings, as well as add a relevant redirect URI.The URI value will be the link to the page in your application that a user will be redirected to once their account is validated.

Note: It’s also possible to enable a generic redirect URL within the Bubble plugin settings itself.

After saving your OAuth configurations, copy both the client ID and client secret key into their relevant fields within your YouTube plugin.For reference: The YouTube secret key will be added to the ‘App secret’ field of your plugin settings.The YouTube client ID will be added into the ‘App ID/App API’ of your plugin.Logging a user in through YouTubeAfter configuring your OAuth credentials, you can now use the ‘signup/login with social network’ step within a workflow. From the event dropdown menu, you’ll see an option to select the YouTube OAuth provider. This event can be added to an element like a login button.

After a user clicks this button, they’ll be redirected to a Google portal where they can verify their account, then be redirected back to the destination URI of your application.Now, you can choose to display videos from a user’s YouTube account. If you’d like to display a list of a user’s videos within a repeating group, configure the type of content to be ‘YouTube video’, then set the data source to be the ‘current user’s YouTube videos’.

Within each repeating group cell, you can then display data about each video by selecting the ‘current cell’s YouTube video’s’ operator.

FAQWhen testing my YouTube OAuth experience, it says I don’t have permission to login through the application account.Before testing your application in development, you’ll need to provide access to a test user by whitelisting their email in your console settings here
When testing my OAuth login, I keep receiving a ‘Error 400: redirect_uri_mismatch’ message. What’s causing this to occur?When testing your application in development mode, you’ll need to verify that the login page matches the exact same value as the redirect URI you added in your OAuth credentials. For example, your redirect URI might be configured as: https://your-app-name.bubbleapps.io/version-test/login - but by default, the Bubble page preview will add an additional string for the debugger: https://your-app-name.bubbleapps.io/version-test/login?debug_mode=true.Simply remove the additional debugger URL string to resolve this error.

PreviousWistiaNextZapierLast modified 1yr agoCopy linkOn this pageSignup/login with a social networkOAuth provider - YouTubeCurrent user’s YouTubeYouTube video’s IDYouTube video’s titleYouTube video’s descriptionYouTube video’s thumbnail URLSetupConfiguring your APILogging a user in through YouTubeFAQWhen testing my YouTube OAuth experience, it says I don’t have permission to login through the application account.When testing my OAuth login, I keep receiving a ‘Error 400: redirect_uri_mismatch’ message. What’s causing this to occur?








Bulk Operations - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDatabase Copy & BackupsBubble backs up your application data in a few redundant ways to ensure no data loss. How far back in time you can go will depend on your plan. The database is all the 'things' that have been created by your users through some workflows or the app data tab. From a maintenance perspective, you can do two things with your application database. You can restore it to a previous point in time, or copy it across versions.Restoring your databaseIn the case of something going wrong, for instance a workflow being wrongly set up that deletes some things, you can restore your data to a previous point in time. This is a dangerous operation and should only be done in case of absolute necessity. If you revert your database to a week from today, all users that signed up to your service over the last week will lose their accounts and will not be able to login.Restoring your data is done in the App Data section of the Data tab.You first pick the version you want to restore, then a time and confirm. You can decide to only restore one type of thing, but you should do this with caution as if some things are related, this can lead to data inconsistencies. Similarly to version control for your app, you can revert a restore that didn't lead to the expected result by reverting again to a few seconds before the previous revert.Restore operations can take a few minutes to execute if your database is large. You'll see a progress bar once you have started the process, and can close the popup and keep working on your app. It is safe to refresh the editor or close it once you have kicked off the process.Copying across versionsThis option lets you cover the entire database, or only one type, from development to live and vice and versa. This option is usually used when you're launching your application in live and populated the database in development first (development to live), or to test a newer version of your app (or do some debugging) with live data.
​PreviousVersion ControlNextBulk OperationsLast modified 2yr agoWas this page helpful?Copy linkOn this pageRestoring your databaseCopying across versions

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Google Analytics - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGoogle AnalyticsGoogle Analytics lets you track visits on your website and get some insights on your audience for free.Adding your Google Analytics tracking codeIntegrating your analytics account is as simple as adding your unique tracking ID within the settings of your plugin page. To track changes in your live app, remember to deploy after adding the tracking ID.Populating website dataOnce installed, application data will immediately send and populate data within your Google Analytics accounts. SetupTo integrate Google Analytics, simply source the account tracking code from your Analytics account.You can find this under the settings tab > properties > tracking code.

For universal accounts, simply copy the tracking code beginning with ‘UA’.Past this tracking code into the tracking ID field of the plugin settings.Note: If you’re using the universal version of Google Analytics, select the V1 plugin version from the dropdown menu.

If you’re using a Google Analytics 4 account, copy across your properties measurement ID field from the same settings page.You’ll also need to update the version type dropdown to the V2 gtag.js choice.

FAQHow do I make Google Analytics GDPR compliant?By updating the settings of your application to not store cookies by default, your Google Analytics integration will not pass data through when a user cookie is unavailable. This post highlights how to update the cookie opt-in settings of your application.How can I track custom events?It’s still possible to create custom events as normal within your Google Analytics account. These can include events like minimum session times, lead events, and success pages. Any events you create will propagate through to your Bubble application.Why is my live app not tracking anything?Keep in mind that you need to deploy your app before the tracking is active in your live version.PreviousFull CalendarNextGoogle OptimizeLast modified 3mo agoCopy linkOn this pageAdding your Google Analytics tracking codePopulating website dataSetupFAQHow do I make Google Analytics GDPR compliant?How can I track custom events?Why is my live app not tracking anything?









Benefits of Dedicated - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBenefits of DedicatedUsing DedicatedBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBenefits of DedicatedIf you're interested in hosting your app on a Dedicated instance of Bubble and want to learn more, please contact our sales team here.Bubble offers a dedicated hosting plan, where we host your app on infrastructure isolated from other Bubble customers. Like with our shared plans, we run your app: no need for you to deal with setting up servers and installing software, or monitoring them to keep them healthy. Unlike our shared plans, however, we run your app on dedicated servers that aren’t shared with any other customers, giving you increased reliability and the ability to scale as needed.A typical dedicated installation consists of a database, a cache server, and one or more application servers. On a dedicated plan, we don’t monitor the number of workflows you run; instead, your only limit is the physical capacity of the hardware. We monitor the performance of your infrastructure, and if it looks like your app is slowing down due to more users than you have the hardware for (congratulations!), we’ll reach out to you and suggest an upgrade.

BenefitsDedicated hardware has the following benefits.Scalability. We can quickly add more capacity to your dedicated cluster to deal with increased demand.More consistent application performance. Because you aren’t sharing the hardware with other Bubble customers, the only impact on application performance is how active your users are.Greater reliability. Having your own infrastructure isolates you from the majority of Bubble-wide issues.Data isolation. Your app's data is isolated from other customers’ data, leading to a stronger security profile.Control. You decide when new Bubble code is rolled out to your cluster. Planning a major client meeting? You can wait until afterward to deploy the latest version of Bubble.Hosting region choice. Choose from our list of AWS regions: Oregon, Ireland, Frankfurt, Mumbai, Singapore, Tokyo, Seoul, Sydney, Sao Paulo, Montreal, London, Bahrain. Prices vary from region to region.SecurityWe work hard to keep your data safe. Some key points:Our dedicated infrastructure is hosted on top of Amazon Web Services, which is a world-class hosting platform with extremely high security standards.User data on a dedicated plan is stored in a dedicated AWS RDS instance. Data is encrypted at rest, and the credentials for accessing the database are controlled by an automated system that logs all access to them.Dedicated plans come with free SSL certificates to ensure that all communication with your app servers are secure. Once you have a certificate installed, we force all communication with the app to occur over https.Bubble’s privacy rules are a powerful way of implementing application-level security. They provide you with fine-grained control over which items and which fields each user on your app can see and edit. If you have questions about how to set up privacy rules to ensure that your users’ data is protected, we’re happy to help.Uptime and ReliabilityBackups and data integrityWe offer point-in-time recovery for application changes and user data. You can jump back to how your data was at any point on the timeline. It’s up to you how long we retain data for; you can scale up your data storage as needed to retain it for as long as you want. In addition, we use Amazon’s RDS automatic backups to ensure that we can recover from the total loss of a database server.UptimeBubble is new, rapidly developing technology, and we are constantly working to keep applications online. We monitor dedicated infrastructure 24 / 7, and respond as fast as possible to outages. We plan on offering uptime SLAs as technology matures.Dedicated plans offer two uptime advantages over shared hosting. The first is that, since your app is isolated from other customers, issues with another customer’s app can’t spill over to affect your app. The second is that we deploy new code to our shared hosting environment before deploying it to dedicated clusters, so you are less likely to be impacted by new bugs as we add features and extend the Bubble platform.Finally, for customers who are especially concerned with uptime, we offer high-availability dedicated configurations. This means we have spare servers constantly running that can be swapped in if something goes wrong with a primary server. In terms of greatest impact, having the database server as high-availability is most important, followed by the cache cluster, followed by the application server.SupportWe offer two tiers of Support on Dedicated: Standard, which is included, and Premium, which can be added on to your Dedicated subscription. With Standard, our team will prioritize your requests before requests from users of the main cluster. With Premium, we will meet response-time SLAs during availability, and provide professional services, while you are onboarding onto Dedicated, learning new platform features, and expanding app functionality.ConfigurationHow big your infrastructure needs to be depends on a lot of factors, including how your app works, the number of users you have, and the way those users interact with the app. We will conduct a needs-analysis with your team to determine the configuration that you need, which will also be based on our experience maintaining infrastructure for other Dedicated users. Our team will manage changes to your infrastructure for you. Account & Marketplace - PreviousDedicated PlansNextUsing DedicatedLast modified 6mo agoCopy linkOn this pageBenefitsSecurityUptime and ReliabilityBackups and data integrityUptimeSupportConfiguration









General Settings - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGeneral SettingsIn the first tab of the plugin editor, you'll be able to set general settings for your plugin. You can modify the plugins name, URL, icons, and select the few categories relevant to the plugin. This is important to make your plugin searchable by Bubblers.Shared technical settingsThe second tab lets you define a few technical settings for your plugin.This plugin uses jQuery 3. If you are building an element that relies on jQuery 3, check this box. The API will give you access to the jQuery plugin.HTML Header. If you need to insert some HTML in all the pages of an app that use this plugin, you can enter the HTML here. Analytics services, for instance, usually require to add a HTML snippet on all pages. If you need users to be able to enter a key in an HTML snippet (for instance a Google Analytics tracking code), you can add the dynamic key in your snippet between the sequence of characters _*_, such a _*_API KEY_*_. Once a user uses your plugin in their app, this key will be a setting to be filled in the Plugins tab, and the key will be replaced by the actual value in Run-mode.Note: The only valid header tags are <script>, <meta>, and <link>. Any invalid header code will end up in the body due to automatic repair logic in most modern browsers. Whenever the HTML for your page is parsed by a browser like Google Chrome, it will detect any invalid HTML tag used in the headers, assume that this was a mistake, that the closing </head> tag was missing, and just add it to the body automatically with an opening tag.Additional keys. If you need your plugin's users to enter some keys in the Plugins tab, you can enter these key definitions in this tab. These keys will be made accessible in the context object that is sent to all the functions used in your elements and actions (see the following sections for more details). Note that if you are adding API connections to your app, the API call tab will let you pick the different keys that are need for your API to function.Shared assets and resources. If your plugin implementation requires some assets (images, CSS file, JS files), you can upload them to Bubble's storage and use their URL in your code. All assets are accessible through Bubble's CDN, ensure high speed when accessing the files.PreviousThe Plugin EditorNextAdding API ConnectionsLast modified 1yr agoCopy link









Building Apps for Others - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingAccount ManagementPlans & BillingBuilding Apps for OthersSelling on the MarketplaceDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBuilding Apps for OthersAgency SubscriptionWe encourage Bubble users to build apps for others. We have set up the Agency Subscription to let you build apps and transfer ownership to your clients smoothly. This subscription provides you with a specific plan for the apps you are building for your clients. Once an app is on the Agency plan, generally all features will be accessible and the branding will be removed in the Development Version of the app.*Apps on this plan are all password protected in Run-mode.You can subscribe to the Agency Subscription in the account page. Once an agency is created, you will be able to add agency members to your subscription and they can start working on apps.*This plan enables all features that help you build functionality of your Bubble app. It does not necessarily grant access to features which are only needed once an app is in production (e.g. bulk data operations), because that would likely be the purview of your client.Full details for this plan can be found here; that is the definitive source.Getting listed as an agencyThere are pages on the Bubble website, notably bubble.io/agencies, that show agencies that wish to be publicly listed. If you are the admin for an agency, you can submit your agency to be shown via your Account > Billing page. Upon submission, a member of the Bubble team will reach out to verify certain details before you will be shown in the list. (This does not constitute an official endorsement by Bubble or partnership with Bubble - this is just to verify that you exist as an agency and to filter out the more egregious forms of abuse of agency status.)PreviousPlans & BillingNextSelling on the MarketplaceLast modified 1yr agoCopy linkOn this pageAgency SubscriptionGetting listed as an agency









Operators & Comparisons - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataData SourcesOperators & ComparisonsSearchPrivacyStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookOperators & ComparisonsShared operatorsThese operators are shared among all types of data.Note: Bubble does its best to match the 'type' when a custom value is used with the "is" or "is not" operators. For example, in the dynamic expression MyNumber Input's Value is "6", Bubble will treat the "6" as a number since the input is of type Number. If you were to change the input to type Text without changing the dynamic expression, it may register as a missing value in the Issue Checker. If this happens, re-enter the custom value.... is ...This checks whether two entries are equal or not. If so, yes is returned.... is not ...This checks whether two entries are equal or not. If not, yes is returned.... is emptyThis checks whether the entry is empty, i.e., has no content.... is not emptyThis checks whether the entry is not empty, i.e., has content.:formatted as JSON-safeThis operator sanitizes a text string, date, yes/no, or list of texts into a JSON-acceptable format by escaping characters (adding a \ so it is not recognized) that would otherwise break expected JSON formatting. This includes characters like line breaks, double quotations, or tabs. For more technical users familiar with Javascript, we are using the JSON.stringify() method in the backend.When used on a text, the operator will wrap the text in quotations and escape any breaking characters in the middle of the text.When used on a yes/no value, the operator will convert the value into true or false, as most 3rd party services only know how to handle true/false, not yes/no.When used on a list of texts, the operator will add quotation marks around each text list entry (and escape any breaking characters).When used on a date, the operator will convert the input date to the equivalent of “myDate:formatted_as ISO simplified, UTC”.  For example: Jun 17, 2021 12:34 pm → "2021-06-17T10:35:22.941Z"Note: This method is only suitable for use in sanitizing a text string, a date, yes/no, or a list of texts. It is not designed to support the use case where a user builds a partial or entire json-style object in a multi-line input or :formatted_as_text editor canvas as this operator will escape the double quotes around key value pairs (”) that are otherwise required. Consider instead using Find & Replace ( \ → \\) to escape line breaks if you wish to pass the value of a pre-formatted multi-line input as the key value in an API call.Example of a pre-formatted multi-line input Text typeis not inReturns false if and only if the value is not present in the argument list.... containsThis operation tests if the first entry contains the argument. The substring of text should match the sequence of characters of the first entry exactly, including case. This search respects the order of the words in the entry. For example, searching for 'cat', 'hat', 'cat in', 'cat in the', 'in the hat', 'at in', or 'cat in the hat' would all return the phrase 'the cat in the hat'. However, searching for 'cat the hat', 'cat hat', or 'Cat' would not return 'the cat in the hat'. This search is useful for returning exact matches for partial words, like searching 'pepp' and returning 'peppers'.... doesn't containThis operation tests if the first entry does not contain the argument. It behaves as the opposite of the 'contains' constraint described above.... contains keyword(s)This operator tests whether some text contains certain words. It takes the argument supplied, breaks it up into component words, removes any 'stop' words (short, common words like 'the' or 'a'), and looks for the resulting word(s). For example, searching for ‘cat hat’, ‘cat in hat’, ‘cat in the hat’, ‘the hat cat’, or ‘hat cat’ would return ‘the cat in the hat’. This does not respect partial words that are not of the same stem, so 'pepp' would not return 'peppers'.To emphasize, this operator will ignore any short, common words for the search. These short, common words are known as "stop words", and an example of such a list (though this is more illustrative, and not the definitive list involved in Bubble's text searches) can be found here.... doesn't contain keyword(s)This operator behaves as the opposite of 'contains keyword(s)' above.:capitalized wordsReturns the text with the first letter of each word capitalized. For example, 'this is bob' becomes 'This Is Bob.':uppercaseReturns the text with the all letters capitalized. For example, 'helLo' becomes 'HELLO.':lowercaseReturns the text with all lowercase letters. For example, 'HelLo' becomes 'hello.':appendReturns the concatenation of the text and the argument.:formatted as ...Formats a text in a specific way. Choose from US Phone, URL Encoded, and MD5 Hash.:used as ...Uses the URL based text as a file or image representation.:trimmedRemoves the spaces at the beginning and end of the text. For example, ' fd ' becomes 'fd.':number of charactersReturns the number of characters of a text.:truncated toOnly keeps the first X characters of a text. For example, if you have "supercalifragilisticexpialidocious: truncated to 5," this will return "super.":truncated from end toOnly keeps the last X characters of a text. For example, if you have "supercalifragilisticexpialidocious: truncated from end to 5," this will return "cious.":extract...Extracts text from a text. For example, extract the domain name of an email.:converted to numberConverts a text value containing numbers into a number value. It takes the user's browser locale setting into consideration for deciphering symbols denoting decimal and thousands separators:split by...Returns a List of Texts version of the original string of text, using the argument as the separator between the items. Using a line_break separator will recognize each new line as a separate entry.:find/replace...Dynamically defines text to use in find and replace. It returns a new text. The find and replace happens for the entire text.:extract with RegexThis is an advanced feature that extracts entries from a text using a Regular Expression (regex). For example, if the regex is @\S+and the text is '@one_name and @another_name,' this returns a list of texts: @one_name, @another_name.Tip: This returns a full list of matches, so sometimes it may return the whole text if that's also a match.Tip: Bubble uses JavaScript Regex, which handles certain expressions differently than other flavors (such as PHP). Similarly, we do not yet expose capture groups so your expressions might need a little more massaging. For example, consider the following scenario:You'd like to extract all of the characters in the following urlhttps://domain.com/abc/text-that-i-want after the pattern 'abc/'. A commonly used expression might be abc\/(.*). Used in Bubble, this would extract 'abc/text-that-i-want'. Thus, we need to adjust the expression to (?<=abc/)(.*) to exclude the 'abc/' using a positive lookbehind. This would leave us with just 'text-that-i-want'.We recommend using a Regex builder to test your expressions before using them in Bubble.:defaulting toReturns a default value if the original text is empty.Number typeTip: Numbers on computers are stored in scientific notation and in binary, which means that sometimes the result that you get from a calculation can be off from what you expect. To help ensure that you have a number as close as possible to the expected mathematical result, Bubble automatically rounds the final output of math calculations to 15 significant figures before it is displayed or translated to a non-number type.​Note that if you're performing operations with an end result of more than 15 significant figures, the additional digits may be cut off due to this rounding operation. You can retrieve the additional digits by using the :formatted as operator.is not inReturns false if and only if the value is not present in the argument list.:formatted as ...Watch our Academy quick tip on how to use this operator  Formats a text in various ways.
Caution: Once a number is formatted, it is considered text and cannot be used for calculations.... > ...Returns yes if the first number is greater than the second number.... ≥ ...Returns yes if the first number is greater than or equal to the second number.... < ...Returns yes if the first number is less than the second number.... ≤ ...Returns yes if the first number is less than or equal to the second number.... + ...Sums the first and second number.... - ...Subtracts the second number from the first number.... * ...Multiplies the first number by the second number.... / ...Divides the first number by the second number.:rounded toRounds the first number so that it has X digits after the decimal. For example, '0.234' becomes '0.23' with an argument of '2,' and '0.5' becomes '1' with an argument of '0.':floorRounds the number down to the nearest integer. For example, floor '1.234' becomes '1,' and floor '-2.3' becomes '-3.':ceilingRounds the number up to the nearest integer. For example, ceil '1.234' becomes '2,' and ceil '-2.3' becomes '-2.'... ^ ...This defines an exponential equation. The first number is the base, and the second number is the exponent. For example, '2 ^ 3' becomes '8.'<- range ->Generates a number range from two numbers and returns a range whose lower bound is the smaller of the two numbers and the higher bound is the larger one.... <- max -> ...Returns the larger of the two numbers.... <- min -> ...Returns the smaller of the two numbers.... <- modulo -> ...Returns the remainder when the first number is divided by the second number. For example, '5 <- modulo -> 2' becomes '1.'
Tip: Use this to figure out if a number is odd or even.Number range typeWhen set to range, the slider input returns two numbers. The type is number range.is not inReturns false if and only if the value is not present in the argument list.:minReturns the start of the range, the smallest value.:maxReturns the end of the range, the largest value.:averageReturns the center of the range by averaging the start and end.contains rangeTakes a first range and a second range. Returns yes if the first range contains the second range. "Contains" means that the start of the second range is greater than or equal to the start of the first range, and the end of the second range is less than or equal to the end of the first range. So, if the two ranges are the same, then this will return yes.contains pointTakes a range and a single number. Returns yes if the number is contained by the range. It is contained if it is greater than or equal to the start of the range and less than or equal to the end of the range.is contained byTakes a first range and a second range. Returns yes if the first range is contained by the second range. "Contains" means that the start of the first range is greater than or equal to the start of the second range, and the end of the first range is less than or equal to the end of the second range. So, if the two ranges are the same, then this will return yes.overlaps withTakes a first range and a second range. Returns yes if there are any numbers contained by both ranges. So, if the end of the first range is the start of the second range or vice versa, then this will return yes.is greaterTakes a first range and a second range. Returns yes if the start of the first range is strictly greater than the end of the second range.is greater (point)Takes a range and a number. Returns yes if the start of the first range is strictly greater than the number.is smallerTakes a first range and a second range. Returns yes if the end of the first range is strictly less than the start of the second range.is smaller (point)Takes a range and a number. Returns yes if the end of the first range is strictly less than the number.Date typeThis type represents a precise moment in time (measured to the nearest millisecond). When displaying dates, we turn them into an easily readable date and time in the user's current time zone; you can use the "formatted as ..." operator to customize how we display it. If a user in one timezone saves a date, and a second user in a different timezone views the saved date, the second user will see it displayed in their local time zone.
 
The user's timezone is the timezone as reported by the user's web browser. Most modern browsers report the timezone; in cases where they don't, we make a best-effort attempt to guess what the timezone is from the user's clock settings. When running a workflow, we use the timezone the user was in when they initiated the workflow. For scheduled and recurring workflows, we remember the timezone from when the user initially scheduled the workflow to run. (So if the user runs workflow A, which schedules workflow B to run two days later, then hops on a plan, and runs workflow C in a new timezone, workflows A and B will run in the same timezone; workflow C will run in a different timezone). In situations where a web browser is not involved, such as triggering a workflow to run via Bubble's API, we use UTC time in our calculations.
 
When doing math with dates, there are two kinds of math: calendar-aware math, where the size of the units of time vary based on things such as the number of days in a month and daylight savings time, and absolute math, where the units you add and subtract have a a fixed number of milliseconds. Most of Bubble's date functions do calendar math. For instance, if a user in the ET timezone in the United States enters the date 'March 11, 2018, 1 am', and uses the '+(days)' operator with a value of 1, they'll see 'March 12, 2018, 1 am' even though, because of daylight savings time, that is actually only 23 hours later, not 24 hours later. Calendar-aware math is always performed relative to the user's current timezone, so it's possible that two users, in two different time zones, could perform the same computation on the same date and get different results.
 
The main exceptions to this rule are the "+(seconds)" and "+(hours)" operators, which perform absolute math: calling them with an argument of 1 always adds exactly one second and 3,600 seconds respectively to the given moment in time. Note that the "change hours to" and "change seconds to" do perform calendar-aware calculations. Absolute math is not impacted by timezones: if two users in different time zones call "+(seconds)" with the same argument on the same date, they will get the exact same moment in time as the result (though that moment in time will be displayed to them in their local timezone if the result is displayed on the screen).
 
When performing calendar-aware math, fractional amounts are rounded to the nearest integer, so adding 0.9 days is the same as adding one day. The exception is adding years, which are rounded to the nearest number of months. When performing absolute math, fractions are rounded to the nearest millisecond, so adding 1.2005 seconds will add 1,201 milliseconds.is not inReturns false if and only if the value is not present in the argument list.:formatted as ...Formats the date.
Caution: Once a date is formatted, it is considered text and cannot be manipulated as a date.<- range ->Generates a date range from two dates. This represents a span of time from the moment of the first date to the moment of the second date. Date ranges are a useful tool for representing availabilities or time slots.... +(seconds):Creates a new date by adding the given number of seconds to the date, or subtracts that number of seconds if it is a negative number. This performs absolute, not calendar-aware math: we always add exactly one-thousand milliseconds per second.... +(minutes):Creates a new date by adding the given number of minutes to the date, or subtracts that number of minutes if it is a negative number. This performs absolute, not calendar-aware math: we always add exactly 60,000 milliseconds per minute.... +(hours):Creates a new date by adding the given number of hours to the date, or subtracts that number of hours if it is a negative number. This performs absolute, not calendar-aware math: we always add exactly 3,600,000 milliseconds per hour.... +(days):Creates a new date by adding the given number of days to the date, or subtracts that number of days if it is a negative number. This performs calendar-aware math in the user's current timezone. For instance, if adding a day crosses the start of daylight savings time in the user's timezone, this function might add 23 hours instead of 24 hours.... +(months):Creates a new date by adding the given number of month to the date, or subtracts that number of months if it is a negative number. This performs calendar-aware math in the user's current timezone. If the final month doesn't contain a corresponding day because it is shorter than the original month, we use the last day of the month, so adding one day to January 30th yields February 28th (or 29th on leap years).... +(years):Creates a new date by adding the given number of years to the date, or subtracts that number of years if it is a negative number. This performs calendar-aware math in the user's current timezone.... change seconds to ...Creates a new date by setting the seconds in the user's current timezone. For example, 'Wed Aug 12 2015 22:21:42' becomes 'Wed Aug 12 2015 22:21:00' with an argument of '0.' Changing to a value greater than 59 will bubble up to minutes. Whenever you call change seconds, we set the milliseconds to 0. This is so that if you set a date to the same seconds, minutes, hours, day, month, and year, it compares equal with another date set to the same values.... change minutes to ...Creates a new date by setting the minutes in the user's current timezone. For example, 'Wed Aug 12 2015 22:21:42' becomes 'Wed Aug 12 2015 22:55:42' with an argument of '55.' Changing to a value greater than 59 will bubble up to hours.... change hours to ...Creates a new date by setting the hours in the user's current timezone. For example, 'Wed Aug 12 2015 22:21:42' becomes 'Wed Aug 12 2015 19:21:42' with an argument of '19.' Setting to a value greater than 23 will bubble up to days.... change date (day) to ...Creates a new date by setting the days in the user's current timezone.. For example, 'Thu Dec 24 2015 13:35:38' becomes 'Sun Dec 6 2015 13:35:38' with an argument of '6.' Setting to a value greater than the number of days in the current month will change to the next month.... change month to ...Creates a new date by setting the month in the user's current timezone. For example, 'Thu Dec 24 2015 13:35:38' becomes 'Tue Feb 24 2015 13:35:38' with an argument of '2.' The second number is the numeric value for the month, e.g., '1' for January, '2' for February, etc. Setting a value greater than 12 will change to the next year. If the new month has fewer days than the current date, this will change the date to the last day of the new month.... change years to ...Creates a new date by setting the year in the user's current timezone. For example, 'Wed Aug 12 2015 22:21:42' becomes 'Mon Aug 12 2013 22:21:42' with an argument of '2013.'... > ...Returns yes if the first date is after the second date.... < ...Returns yes if the first date is before the second date.... - ...Subtracts the two dates and returns the difference as a Time difference.Extract from dateExtracts a component from the date, relative to the passed in timezone. Returns the component as a number. Choose from the following options:
 
minute (0 - 59)
 
hour (0 - 23, on the 24-hour clock)
 
day (of week: Sun = 0, Mon = 1, ... Sat = 6)
 
date (of month: 1 - 31)
 
week (of year: 1 - 53. We use the ISO week date system for calculating which week it is, which may differ from local conventions)
 
month (1 (Jan) - 12 (Dec))
 
year (e.g. 2,018)
 
UNIX (in milliseconds: the total number of milliseconds since January 1, 1970 00:00:00 UTC. This is the same format returned by Javascript's Date.now() function, and it is how dates are tracked behind-the-scenes in Bubble. Note that many computer systems measure unix timestamps in seconds: to convert to seconds, divide this value by 1,000.Rounded downRound down a date to a given component, relative to the user's current time zone. Returns the rounded date. See 'Extract from date' for options.Equals rounded downReturns yes if, when rounding both dates to the given component, the results are identical. See 'Rounded down' for more details.... <- max -> ...Returns the later of the two dates.... <- min -> ...Returns the earlier of the two dates.Date range typeThis type is composed of two dates. The range is the time in between. Use this to build scheduling, booking systems, etc.is not inReturns false if and only if the value is not present in the argument list.:startReturns the start of the range, the smallest value.:endReturns the end of the range, the largest value.:centerReturns the center of the range by averaging the start and end.contains rangeTakes a first range and a second range. Returns yes if the first range contains the second range. "Contains" means that the start of the second range is greater than or equal to the start of the first range, and the end of the second range is less than or equal to the end of the first range. So, if the two ranges are the same, then this will return yes.containsTakes a range and a single date. Returns yes if the date is contained by the range. It is contained if it is greater than or equal to the start of the range and less than or equal to the end of the range.is contained byTakes a first range and a second range. Returns yes if the first range is contained by the second range. "Contains" means that the start of the first range is greater than or equal to the start of the second range, and the end of the first range is less than or equal to the end of the second range. So, if the two ranges are the same, then this will return yes.overlaps withTakes a first range and a second range. Returns yes if there are any dates contained by both ranges. So, if the end of the first range is the start of the second range or vice versa, then this will return yes.is afterTakes a first range and a second range. Returns yes if the start of the first range is strictly greater than the end of the second range.is after (point)Takes a range and a date. Returns yes if the start of the first range is strictly greater than the date.is beforeTakes a first range and a second range. Returns yes if the end of the first range is strictly less than the start of the second range.is before (point)Takes a range and a date. Returns yes if the end of the first range is strictly less than the date.Date interval typeThis type represents a difference between two dates. It represents a precise number of milliseconds, rather than a calendar-friendly quantity such as "one day". Adding and subtracting Date intervals always performs absolute math, not calendar-aware math. See the Date type above for more information on the difference between calendar-aware math and absolute math.is not inReturns false if and only if the value is not present in the argument list.:format as daysFormats the difference as a number of days. We calculate this by dividing by 24 hours, then rounding to the nearest tenth (so 298944000 milliseconds becomes 3.5 days).:format as hoursFormats the difference as a number of hours. We calculate this by dividing by one hour (i.e. 3,600,000 milliseconds) and rounding to the nearest tenth.:format as minutesFormats the difference as a number of minutes. We divide through by 60,000 milliseconds and round to the nearest whole number.:format as secondsFormats the difference as a number of seconds. We divide through by 1,000 milliseconds and round to the nearest whole number.Boolean typeWatch out!With a yes/no field, there is a difference between "no value" and "no"! If you have a mix of the two, keep in mind that this distinction might show up, for example, when you sort Things by this field.is not inReturns false if and only if the value is not present in the argument list.is "yes"Returns yes if the boolean value is true.is "no"Returns no if the boolean value is false.... and ....Returns the logic AND of two yes/no values. Returns yes if both values are yes.... or ....Returns the logic OR of two yes/no values. Returns yes if either of the two values is yes....:formatted as textFormats the result of the yes/no differently. Use this function to change the language of 'yes' and 'no.'...:formatted as numberFormats the result of the yes/no as a number to use in a calculation. A standard use case is '1' for yes and '0' for no, but you can use any numbers.File typeThis represents a file, i.e., the link of a file uploaded to the server.is not inReturns false if and only if the value is not present in the argument list....'s file nameExtracts the file name from a link. For example, '//s3.amazonaws.com/appforest_uf/id/filename.pdf' returns 'filename.pdf.'...'s URLReturns the link of the file.:saved to S3When saving a file, the link that represents it on the web is saved. If it comes from an external API, it may be hosted elsewhere. To save it to Bubble's server, to use Imgix on for instance, use this option. This occurs only in workflows that save things.If a file is added using this operator, but the file already exists in S3, the original link will be saved. A new version will not be uploaded.Tip: If you click into this operator, you may also see the option for "New file name." This feature allows you to rename files before they are uploaded. It's for the case where you are generating a file, say from an external API, and then saving it to your Bubble app. This option to rename the file as a part of the workflow would be the way to do it. If the file you are looking to rename has already been saved to S3, this will not update the name.:encoded in base64This fetches the contents of the file and encodes it using base64, which is a common standard used for passing file data. Use this for uploading files to certain APIs that require data in base64 form.
Note: At the moment, this operator only works in server-side workflows. Running it in the web browser returns nothing.Note: Private files in base64 cannot be decoded through API workflows and the API Connector, as these functions rely on the file to be publicly downloadable.Image typeThis represents an image, i.e., the link of an image uploaded to the server.is not inReturns false if and only if the value is not present in the argument list....'s file nameExtracts the file name from a link. For example, '//s3.amazonaws.com/appforest_uf/id/picture.png' returns 'picture.png.'...'s URLReturns the link of the image.:saved to S3When saving a file, the link that represents it on the web is saved. If it comes from an external API, it may be hosted elsewhere. To save it to Bubble's server, to use Imgix on for instance, use this option. This occurs only in workflows that save things.:encoded in base64This fetches the contents of the file and encodes it using base64, which is a common standard used for passing file data. Use this for uploading files to certain APIs that require data in base64 form.
Note: At the moment, this operator only works in server-side workflows. Running it in the web browser returns nothing.:processed with ImgixProcesses the image with Imgix. For example, automatically crop the picture to keep the face, enhance it, reduce red eyes, apply sepia effects, etc. See the Imgix documentation for more details.
Note: Only images hosted on Bubble's server can use this feature.Known IssueIn rare situations, processing an app with Imgix will actually result in a larger file than the original image. If this is happening to you and undesirable, you can add &ignore_imgix to the end of the image's URL to disable Imgix.Geographic AddressThis represents an address.is not inReturns false if and only if the value is not present in the argument list....'s formatted addressThis returns a text version of the address, which can be printed in a standard way.
Caution: Once an address is formatted, it is considered text and cannot be manipulated as an address....'s link to Google MapsReturns a link that, when clicked, opens a Google Map window and centers the marker on the position of the current address.... distance from ...Returns the distance between the two addresses, either in the metric or US system.:extract ...Extracts particular data from an address, like the country, state, street, etc....'s latitudeThis returns the latitude of the address as a number....'s longitudeThis returns the longitude of the address as a number....'s time zone IDThis returns the time zone of an address as a string, following the standard encoding returned by Google. See this for more information....'s time zone nameReturns the name of the time zone of an address, such as 'Eastern Daylight Time.' This is not what you should use for time zone formatting. Use the ID instead....'s daylight saving time offsetThe offset for daylight saving time in seconds. This will be zero if the time zone is not in daylight saving time at the current time....'s offset from UTC (minutes)This is the offset from UTC (in minutes) for the given location. This does not take into effect daylight savings.List of thingsIt is common to deal with lists of texts, numbers, things, users, etc. This manipulates these lists. Currently, lists are limited to 10,000 items. Trying to add additional items will result in an error message.... :countOur Academy quick tip on how to use :countReturns the number of items in the list.... contains ...Returns yes if the list contains the argument.... doesn't contains ...Returns yes if the list does not contain the argument....:first itemWatch our Academy quick tip on how to retrieve the first item of a list  Returns the first item of the list....:last itemReturns the last item of the list....:random itemReturns any single item from the list. This is mostly for display purposes, because the return may not be mathematically random....:item #Returns the #th item of the list....:items until #Returns a sublist of the list, from the first item to the #th item....:items from #Returns a sublist of the list, from the #th item to the end.... contains list ...Returns yes if the first list contains all the entries from the second list.... join with ...Returns a text version of the list, using the argument as the separator between the items. Using a 'line_break' separator will make each entry be on a new line.... :sumSums the elements in a list of numbers by adding them together. For instance, the sum of the list [2, 4, 7] is 13. Empty entries are ignored. The sum of an empty list is the "empty" value.... :productMultiplies the elements in a list of numbers together. For instance, the product of the list [2, 4, 7] is 56. Empty entries are ignored. The product of an empty list is the "empty" value.... :averageComputes the arithmetic average of the elements in a list of numbers, by adding them together and then dividing by the number of entries. For instance, the average of the list [2, 4, 7] is 6.5. Empty entries are ignored, which means that the average of a list of numbers might not exactly equal the sum of the list divided by the count. The average of an empty list is the "empty" value.... :medianComputes the median element of the elements in a list of numbers. Empty entries are ignored, and don't count towards the determination of what the median element is. For lists with an even number of elements, the median is the arithmetic average of the middle two elements. For instance, the median of the list [2, 4, 7] is 4, and the median of the list [2, 4, 7, 8] is 5.5. The median of an empty list is the "empty" value.... :minReturns the smallest of the elements in a list of numbers. A large negative number counts as being very small for the purpose of min, so the min of the list [-100, -5, 0, 1] is -100. Empty entries are ignored, and the min of an empty list is the "empty" value.... :maxReturns the largest of the elements in a list of numbers. The max of the list [-100, 2, 4, 7] is 7. Empty entries are ignored, and the max of an empty list is the "empty" value.... :approximate countReturns an approximate count of the number of items in a list. This is a performance optimizing operator that trades accuracy for a speed increase. It will be faster to return results than the :count operator, but it will be, as the name suggests, an approximation of the count (we estimate it to be within 2% of the actual count for most use cases).... :cached aggregationAllows you to reuse recently computed aggregation results across page views instead of recalculating a value every time it is requested from the server. The server will store the result of the specified aggregation for 30 seconds, during which it will return that already calculated result for all identical requests instead of computing a new value. Note that the lifetime of the cached value is not extended upon subsequent requests, so the value will always be recomputed when requested again after the initial 30 seconds. Allowed aggregation operators are “count”, “approximate count”, “max”, “min”, “median”, “average”, “sum”, and “product”, though some of these are only available on certain underlying list types....:filteredFilters a list of things with a criteria. It's similar to a search but happens after the search and can also be used on a field that is a list of things. The filtering constraints work similarly to a search constraint.Tip: Use operators such as "and" to indicate that an item in the list should meet all specified criteria, or ":join with" to define a list where an item can meet one of a list of criteria....:format as textFormats a list of things to display its content. You can choose a delimiter for your list, and the content to show per list item. All items will share the format that you specify. For example, if you have a list of names, you can choose to display “This name” in bold with a space delimiter. This will show all the names in bold separated by a space: name1 name2 name3.
 
This is also useful for sending emails to your users. In the body of your email, you might format a list of Events to display start times for upcoming events. You can also add bb code to customize its appearance. For example, if you specify your content to show as “[li][b]This date[/b][/li]” and your delimiter as a line break, you can create a bolded list with bullets:

January 1, 2021 1:00 pmJanuary 2, 2021 2:00 pm
If you need to format text as a JSON to send to an external API, you may also use this operator. You can create
{
key: “value”
}
formatting for as many of the values as there are in your database. For example, you might pass a list as:
{
key: “This value’s field”
}
Then if your list contained two items, the result could look like:
{
key: “Value1's field”
},
{
key: “Value2's field”
}

...:sortedSorts a list of things.:ranked by...Ranks a list of things by average RMS similarity of all numerical fields to a target item of the same type. Use this to match people for a dating app for instance.... merged with ...This operation merges two lists of things. It returns a new list with entries from both lists. If an entry is in both, it will only appear once in the returned list.... intersect with ...This operation takes two lists of things and returns the entries that are in both lists.... :unique elementsWatch this video to learn more about the Unique Elements OperatorThis operation removes all double items from the list....:plus itemThis operation adds an item to a list of things. It returns a new list with the original list plus the new item. If the new item is already in the list, it will not be added....:minus itemThis operation removes an item to a list of things. It returns a new list with the original list minus the item. If the new item is not in the list, it will not be removed....:minus listReturns the original list minus any elements that are present in the argument list....:make staticThis operation converts a list that relies on dynamic data, e.g., input's values in search constraints, and converts it into a list with the current items. Once converted to static, the list will not change if underlying values change. Note that this works only within the context of workflows; it will not change the behavior of repeating groups. Caution: This is an advanced feature...:group byGroups the list into chunks of related entries, and computes summaries of each group. This is useful for visualizing your data in a chart or table: for instance, you could create a table showing the number and dollar values of orders by customer, or the number of new users to your application by month. Selecting ":group by" will open a panel with the option to add groupings and add aggregations. In the sentence, "Show the total X grouped by Y", X is an aggregation and Y is a grouping.
 
For each grouping you add, you'll see "Field 1 to group by", "Field 2 group by", and so on. This is the field of the list item used to pick which group to put in. Currently we support grouping on users and custom data types, text fields, numbers, and dates.
 
For many uses, adding a single grouping is sufficient. Adding multiple groupings allows grouping items by two fields. For example, suppose you have a list of orders, each with a customer and a date. You might want to see a chart showing orders grouped by customer and month, in which case you could add both fields as groupings. The order of the groupings determines the order of the list results: we first sort by the first grouping, and then by the second. For instance, if you group by customer, and then month, you might see an output list with {Customer 1, Jan}, {Customer 1, Feb}, {Customer 1, Mar}, {Customer 2, Jan}, {Customer 2, Feb}, {Customer 2, Mar}. Whereas if your first grouping was month, followed by customer, the results would be {Customer 1, Jan}, {Customer 2, Jan}, {Customer 1, Feb}, {Customer 2, Feb}, {Customer 1, Mar}, {Customer 2, Mar}.
 
When you select a number field to group on, you will see additional options. A "Type of grouping" dropdown will let you pick between "Exact" and "Bucket". If you pick exact, grouping by numbers will work the same as grouping by text or by a custom type: list entries with the exact same value for that field will be put in the same group. So all entries with the value 3.1 will be grouped together, and all entries with the value 9.2 will be in a different group. In contrast, if you pick "Bucket", you can group similar numbers into buckets. You'll be prompted to pick an "Interval" and "Starting value", which determines how the bucketing works. The first bucket is the starting value, and then they increase by the interval, so for example, if you pick a starting value of 10, and an interval of 5, your buckets will be 10, 15, 20, 25, 30, and so on. List entries are placed in the largest bucket that they are equal to or greater than: so, 15 goes in bucket 15, as does 19.999, but 20 goes in bucket 20. Entries below the starting value, such as 9 in this example, are left out of the final results.
 
If a "Bucket" grouping on a number field is the last grouping in your list of groupings (or if it is the only grouping), you will also see the checkbox "Do not skip empty groups". If you check it, you will be prompted to enter an "Ending value". This option allows you to specify a continuous range of buckets to display, regardless of whether you actually have data for every bucket in that range. It is most useful in combination with a chart element, to construct a graph that doesn't skip things that you do not have values for. So for instance, if your start value is 20, and your interval is 10, and your end value is 50, the buckets you will get are 20, 30, 40, and 50, even if you don't have any data between 30 and 40. (If your end value doesn't exactly match a bucket, the final bucket will be the one that the end value would fall into: so if your end is 58 in this example, the final bucket would still be 50). Items after the final bucket will be left out (so 61 would not be included).
 
If you use the "Do not skip empty groups" option with multiple groupings, we compute the entire range of buckets for each preceding grouping. So for instance, if you first group by a text field that contains the names of fruits, and then group by a bucketed number from from 20 to 50 as in our above example, you might see groupings that look like the following: {apple, 20}, {apple, 30}, {apple, 40}, {apple, 50}, {banana, 20}, {banana, 30}, {banana, 40}, {banana, 50}, {pear, 20}, {pear, 30}, {pear, 40}, {pear, 50}. You will see all twelve of these groupings as long as you have at least one apple, at least one banana, and at least one pear with a number between 20 and 60.
 
Grouping on date fields is very similar to grouping on number fields. There is an "Exact" option that groups list entries with the exact same date together. Note that, because dates represent moments in time accurate to a millisecond, two entries might look like they have the same date, but actually be half a second apart from each other: in that case, they would end up in different groups.
 
In addition to the "Exact" option, there are also "Day" and "Month" options. These work similarly to the "Bucket" option for numbers, but they compute the beginning and the ends of buckets using calendar-aware math in the user's current time zone in order to group dates that share the same calendar day or calendar month. It's easiest to illustrate with an example. Suppose you are in New York, you group by "Day", with "Interval" set to 2, and set the "Starting date" to be 11:03 am, April 17, 2018 ET. The first bucket will be the beginning of the starting date in the current timezone: so in this case, midnight, April 17, 2018 ET. The second bucket will be two days later in the current timezone (because you picked an interval of 2): midnight, April 19, 2018 ET. Adding the interval uses the same logic as the +(days) operator. Like with the "Bucket" option on number fields, entries are placed in the bucket that they are greater than or equal to, so 11:59 pm April 18 would go in the midnight April 17 bucket, but midnight April 19 would go in the midnight April 19 bucket.
 
The "Month" option works the same as the day option, but the starting value is rounded down to the beginning of the month, so a starting value of 11:03 am, April 17, 2018 ET would become midnight, April 1, 2018 ET if the user is in the ET timezone. Subsequent buckets are calculated by adding the interval value using the same logic as the +(months) operator.
 
If the final grouping is a "Day" or "Month" grouping, there will be a "Do not skip empty groups" option. This works exactly the same way as it does for number "Bucket" groupings, described above, and is useful if you want to display data as a time series: a chart showing a line graph of user signups by month would look strange if it skipped months where no one signed up instead of showing 0. As with "Bucket" groupings, the ending date indicates the final bucket. So, if you are grouping by month, interval 1, and your ending date is a moment in June 17, 2018, your final bucket will be midnight, June 1, 2018. This bucket will include any data point that falls in June, including ones after the 17th! If you want to make sure that data for June 19 does not show up in your groupings, you need to filter those items out of the list prior to calling ":group by" on it.
 
Whereas groupings determine how the entries in the original list are grouped together, aggregations determine what we calculate for each grouping. The simplest aggregation is "Count", which just counts the number of items that were placed into each group. The other aggregations all perform mathematical operations on a number field: if you select one of them, you will be prompted to choose a field to calculate on. These aggregations all work the same as their equivalently-named operator on a list of numbers: Sum, Product, Average, Median, Min, and Max.
 
The output of doing a ":group by" operation on a list is a new list. You can feed this list to a repeating group or chart, or do further list transformations on it. The list contains one item for each group generated, and each item has one field for each grouping and one field for each aggregation.
 
The field name for each grouping will have the same name of the field that was grouped on, and will contain the bucket value for that group. So for instance, if you do a "Bucket" grouping on a number field called "my magic number", grouped by interval 10 starting from 0, the output list will will have a field called "my magic number". The grouping that represents all entries that fell in bucket 20 -- in other words, had a magic number greater than or equal to 20, but less than 30 -- will have that field set to 20.
 
Each aggregation you add to the grouping generates a field in the result list named after both the aggregation function and the number field it was calculated on. So for example, if you added an aggregation that computed the average of "my magic number", you would see a field called "average of my magic number" in the output list. The "Count" aggregation, since it does not operate on a specific field but rather just counts the number of entries in the grouping, simply adds a field named "count" to the output.Note: The Group by operator prioritizes performance. As a result, Groupings do not include much information about each individual item contained within them. While work is in progress to address this limitation, in the mean time, a grouped dataset will not automatically update if any item within that dataset is created, updated, or destroyed....:each item...The :each item prefix is added to a List operator when the operator acts on an item in the List rather than the List itself. This prefix does not change any functionality, it is merely there to clarify the intended behavior of the selected operator.Custom TypesThese types of data are the types defined when you created your data structure. Most of these operations also apply to the user type.CreatorThis returns the user who created the current thing. If the user was not logged in when the thing was created, it will be empty.Created DateThis returns the date of the creation of the thing. Its type is date and can be manipulated as a date.Modified DateThis returns the date of the last modification of the thing. Its type is date and can be manipulated as a date.Slug [Beta]This returns the slug value of the thing selected. This slug is unique for each thing of a certain type and its value is displayed in URLs when a page is associated to this thing....'s unique idThis returns the unique id of the thing in the Bubble application database. Each entry has a unique id. Use this to generate links, etc.
Caution: This is an advanced feature that is not normally necessary....'s linkThis feature generates a link to a page of the app whose type of content is the type of the current thing. Clicking that link will open that page with that thing as the current page's thing....:converted to listThis feature converts a unique item into a list when you need to work with other lists or a repeating group.Custom FieldsCreate new fields for the custom types defined in the app. In the Workflow Tab, 'Create a new thing' action, then select 'Create a new field' in the dropdown menu. This is the same as adding a new field in the Data Tab.Our Academy quick tip on adding data types as custom fields Field nameEnter a name to describe the field.Field typeA field must have a type. It can be a number, text, yes/no, address, etc. It can also be a custom type already created to store a composite object. For example, an apartment will have a field of type booking, which is also defined as a custom type.This field is a list (multiple entries)It is common to deal with lists of texts, numbers, things, users, etc. Checking this box defines a field as a list of things. Currently, lists are limited to 10,000 items. Trying to add additional items will result in an error message.Default valueThe default value is a way to define what the field should be if there is no information in the 'Create new thing' action for the current field.User TypeThese are the specific fields and options to use for the type user.EmailThis applies to the type user only and returns the user's email. If the user used a social network to sign up, it will return the email provided to that social network, if available....is logged inReturns yes when the current user is logged in....has an accountReturns yes when the user has an account. This option is shown when the data source is not the current user....isn't logged inReturns yes when the current user isn't logged in....doesn't have an accountReturns yes when the user doesn’t have an account. This option is shown when the data source is not the current user....'s email confirmedReturns yes if the current user confirmed their email by clicking on the link in the confirmation email.... uses passwordReturns yes if the current user used a password to create an account, and not an OAuth provider.... uses 2FAReturns yes if the current user has activated 2-factor authentication on his account.... has 2FA backup codesReturns yes if the current user has set up some backup codes on his account.... is using cookiesThis operator is only visible for applications that have enabled the "Do not set cookies on new visitors by default" setting. Returns yes if the user has cookies set via the opt-in to cookies action or via signing up or logging in, and no if we are not setting cookies on the user.Option SetsOption sets define a static list of choices for use in dropdowns, etc.. Options inside the sets have at least a text display, but they can have additional attributes defined in the Data tab....'s DisplayThis gets the text value of the option for use in displaying in things like dropdowns and text fields....:defaulting toThis feature sets an option to a default value, if the selected option is missing....:converted to listThis feature converts a single option into a list.Option AttributesCreate new attributes for the option sets defined in the app. Attributes define additional values attached to your options in a set. You can add attributes in the Data tab.Attribute nameEnter a name to describe the attribute.Attribute typeAn attribute must have a type. It can be a number, text, yes/no, address, etc. It can also be another Option set.This attribute is a list (multiple entries)It is common to deal with lists of texts, numbers, things, users, etc. Checking this box defines a attributes as a list of things. Currently, lists are limited to 10,000 items. Trying to add additional items will result in an error message.OptionsCreate new options for the option sets defined in the app. An option set can have many different options in it, each with a display text (as well as any additional attributes you want). You can add options in the Data tab.Option nameEnter a name to describe the option. This will be the new option's "Display" attribute.​​​​​​​​​​​​​​PreviousData SourcesNextSearchLast modified 1d agoCopy linkOn this pageShared operators... is ...... is not ...... is empty... is not empty:formatted as JSON-safeText typeis not in... contains... doesn't contain... contains keyword(s)... doesn't contain keyword(s):capitalized words:uppercase:lowercase:append:formatted as ...:used as ...:trimmed:number of characters:truncated to:truncated from end to:extract...:converted to number:split by...:find/replace...:extract with Regex:defaulting toNumber typeis not in:formatted as ...... > ...... ≥ ...... < ...... ≤ ...... + ...... - ...... * ...... / ...:rounded to:floor:ceiling... ^ ...<- range ->... <- max -> ...... <- min -> ...... <- modulo -> ...Number range typeis not in:min:max:averagecontains rangecontains pointis contained byoverlaps withis greateris greater (point)is smalleris smaller (point)Date typeis not in:formatted as ...<- range ->... +(seconds):... +(minutes):... +(hours):... +(days):... +(months):... +(years):... change seconds to ...... change minutes to ...... change hours to ...... change date (day) to ...... change month to ...... change years to ...... > ...... < ...... - ...Extract from dateRounded downEquals rounded down... <- max -> ...... <- min -> ...Date range typeis not in:start:end:centercontains rangecontainsis contained byoverlaps withis afteris after (point)is beforeis before (point)Date interval typeis not in:format as days:format as hours:format as minutes:format as secondsBoolean typeis not inis "yes"is "no"... and ....... or .......:formatted as text...:formatted as numberFile typeis not in...'s file name...'s URL:saved to S3:encoded in base64Image typeis not in...'s file name...'s URL:saved to S3:encoded in base64:processed with ImgixGeographic Addressis not in...'s formatted address...'s link to Google Maps... distance from ...:extract ......'s latitude...'s longitude...'s time zone ID...'s time zone name...'s daylight saving time offset...'s offset from UTC (minutes)List of things... :count... contains ...... doesn't contains ......:first item...:last item...:random item...:item #...:items until #...:items from #... contains list ...... join with ...... :sum... :product... :average... :median... :min... :max... :approximate count... :cached aggregation...:filtered...:format as text...:sorted:ranked by...... merged with ...... intersect with ...... :unique elements...:plus item...:minus item...:minus list...:make static..:group by...:each item...Custom TypesCreatorCreated DateModified DateSlug [Beta]...'s unique id...'s link...:converted to listCustom FieldsField nameField typeThis field is a list (multiple entries)Default valueUser TypeEmail...is logged in...isn't logged in...'s email confirmed... uses password... uses 2FA... has 2FA backup codes... is using cookiesOption Sets...'s Display...:defaulting to...:converted to listOption AttributesAttribute nameAttribute typeThis attribute is a list (multiple entries)OptionsOption name









Mailchimp - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMailchimpThe Mailchimp Plugin adds emails to a Mailchimp mailing list.Add an email to a MailChimp listThis action adds an email to an email list defined in Mailchimp.Email addressDefine the email to add to the list.List nameAfter entering your keys in the Mailchimp section in the Plugins Tab, we fetch the list you created with Mailchimp to populate this list. Select the list to add the user to.Remove an email from a MailChimp listThis action removes an email from an email list defined in Mailchimp.Email addressDefine the email to remove from the list.List nameAfter entering your keys in the Mailchimp section in the Plugins Tab, we fetch the list you created with Mailchimp to populate this list. Select the list to remove the user from.Setup After installing the plugin from the plugins gallery, you need to obtain your Mailchimp API key and input it into the plugin's settings. In the Mailchimp interface, your Mailchimp API key can be found by clicking on your profile avatar in the bottom left > Account > Extras > API Keys. Generally, you should create a new API Key for each service you're connecting to Mailchimp.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousLocalize TranslationNextMixpanelLast modified 1yr agoCopy linkOn this pageAdd an email to a MailChimp listEmail addressList nameRemove an email from a MailChimp listEmail addressList nameSetup FAQ








Version Control - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMaintaining an ApplicationIn this guide, you will learn about the different concepts and features that let you maintain your application as it scales. This includes backups, bulk operations, collaboration, etc.Version ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationPreviousBubble app namesNextVersion ControlLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Custom Events - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsGeneral EventsElement EventsCustom EventsRecurring EventTrigger EventActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCustom EventsCreate a custom event...Bubble allows custom workflows to reuse the same logic in more than one workflow. This event defines that workflow. Name the workflow, and then use a 'Trigger a custom event' action to run this workflow from another workflow. Think about this feature as 'functions' in Bubble.Event nameEnter the name of the workflow. Select custom workflows in the 'Trigger a custom event' action by name.Call parametersIf you want the custom workflow to take a thing as an argument, i.e., an entry from the application database, define the type here as a new parameter. If there are mandatory parameters, the 'Trigger a custom event' action prompts you to define which thing(s) should be sent when running the workflow.​​​​​​​​​​​​​​​PreviousElement EventsNextRecurring EventLast modified 9mo agoCopy linkOn this pageCreate a custom event...Event nameCall parameters








Plugins tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookStyles tab (Legacy)The Styles Tab manages collections of visual and layout properties that are shared across elements in the app. Styles make it easy to maintain and modify a consistent visual identity. Rather than setting the font, background, and border for each element, define a style and apply it to all the elements of a given type. Bubble includes some built-in themes to help you get started. Use these to completely restyle the app. We integrate some popular themes from across the web, such as Bootstrap and Material Design.For more information to get started, see the "Using Styles" article.PreviousStyles tabNextPlugins tabLast modified 8mo agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





The Showcase - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe ShowcaseThe Bubble Showcase is where we feature apps from the community to show off the cool ideas that Bubblers are working on.Submitting to the showcaseWe are currently accepting submissions from app creators for the showcase. To submit your app, use the button in the modal that you see upon successfully deploying your app. Clicking on that button alerts the Bubble team that you're open to having your app in the Showcase.The Bubble team will review submissions periodically and follow up with the submissions that are a good fit for the Showcase page. You do not need to submit your app more than once - though if it's been months since the last time you submitted and your app has changed significantly, feel free to submit again.Showcase guidelinesSome rough guidelines for what makes a good Showcase app (these are not necessarily hard-and-fast rules; we're always open to seeing cool apps):It has a clean, professional design that looks good on different sizes of screensIt should be deployed and look like it's ready for viewers and users; it should not be password protectedThe purpose or idea behind the app should be clear to somebody visiting the appIt should either:Not require an account / logging in in order to see the 'main functionality' of the app, OR If the app relies on users having an account, it should have clear landing pages explaining the app and should have its 'main functionality' built on BubbleIt likely has a custom domain attached (i.e. is not a Free app), OR is a very cool Free appIt most likely is more than just landing pagesIt is probably not a personal blog (unless it has some quite un-blog-like features!)Account & Marketplace - PreviousBuilding TemplatesNext - MiscellaneousMore features for your to-do appLast modified 2yr agoCopy linkOn this pageSubmitting to the showcaseShowcase guidelines









Mixpanel - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMixpanelThe Mixpanel Plugin lets you track your user's activity in the app. The snippet is automatically added to the pages when you install the plugin, so do not add it yourself because Mixpanel will fail if the snippet is added more than once.Send an event to MixpanelThis action sends an event to Mixpanel to track what's going on with the app. You can send specific values to Mixpanel with this action. You must create an account with Mixpanel and enter the keys in the Plugins Tab.Event nameSelect the name of the event to send. Select an existing one or create a new one.Additional valuesDefine more key/values to send more data to Mixpanel, such as age, gender, etc.Send the user to MixpanelThis action registers the user with Mixpanel. In this case, all of the events triggered by this user are gathered under one unique user in Mixpanel.User name or idChoose how to identify the user on Mixpanel's dashboard. Their email is a good choice.Additional valuesDefine more key/values to send more data to Mixpanel, such as age, gender, etc.Send a user charge to MixpanelThis specific action sends a dollar charge attached to a specific user to leverage Mixpanel's revenue analytics.Charge amountEnter the amount of the charge to track.Additional valuesDefine more key/values to send more data to Mixpanel, such as age, gender, etc.Delete the current user from MixpanelThis action deletes the current user from the Mixpanel database.Setup After installing the Mixpanel plugin from the plugins gallery, you will be prompted to enter different keys from Mixpanel.​Here's an article from Mixpanel on where to find the necessary keys. You should copy and paste these into the settings for the plugin in the Plugins tab, and you can decide whether to use the same or different keys for your app's development vs. live versions.(Note that in many cases you don't need to fill in the "API Key" field in the plugin's settings. It's worth testing out the plugin with just the Token and API Secret to see if that's sufficient for you.)FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousMailchimpNextMouse & Keyboard InteractionsLast modified 1yr agoCopy linkOn this pageSend an event to MixpanelEvent nameAdditional valuesSend the user to MixpanelUser name or idAdditional valuesSend a user charge to MixpanelCharge amountAdditional valuesDelete the current user from MixpanelSetup FAQ









Full Calendar - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookFull CalendarAdd a calendar element to your application and display events from your database.CalendarThe Full Calendar Plugin creates an element that displays a daily/weekly/monthly calendar on the page and displays events based on the application database.Type of eventsThese are the type of things that will be used to display events.Data sourceThis is the list of things that should be displayed by the calendar element. Typically, it is a result from a search.Start time fieldDefine which field contains the start time. For example, a type of thing could be 'Booking,' and the field will be 'Start time.' This field should be of type date.End time fieldThis field is similar to the start time field but is optional. The default value of 30 minutes is used if this field is left blankAll day field (yes/no)To support all-day events, enter a yes/no field from the event that contains this information.Tip: If you set this field to "yes," calendar events will display as ending 1 day before their end date. For example, an end date of August 19 will display as August 18 on the calendar element. Check out the Full Calendar library for more information.Event captionEnter an expression that defines how to describe each event. It should rely on the current event.Enable modification through dragging (start/end)Check this box to enable users to modify events by dragging them on the calendar. This will trigger a modification of the thing on the server, changing both the start and end times. Set up relevant privacy rules to enable users to do this.Enable modification through resizing (end)Check this box to enable users to modify event lengths by dragging the end on the calendar. This will trigger a modification of the thing on the server, changing the end times. Set up relevant privacy rules to enable users to do this.Note: This is only possible if you use the end field.Date to display at firstEnter the date to show on page load when the element is displayed. If not set, the calendar shows the current date.Available viewsUse this option to restrict the views users can access with the toolbar buttons. Choose from Day - month - week, Month only, Week only, and Day only.Include Saturday/Sunday columnsIf unchecked, Saturdays and Sundays are hidden.Starting dayUse this field to define whether the week starts on Sunday or Monday.Event and days are selectableIf this box is checked, users will be able to select an event or empty day. The colors change when selected.Use a dynamic color for each eventCheck this box to display the different events in different colors. In this case, colors should be saved in the database. This is for display purposes only.Event colorSelect the color for an unselected event. This property does not apply when the event color is dynamic.Event color fieldSelect the field of the database that contains the color for a given thing/event. It should be stored as an HEX color code in the application database.Selected event colorSelect the color to be applied to an event when it is selected by the user.Selected day colorSelect the color to be applied to an empty day when the user selects it and when days/events are selectable.Current day colorSelect the color to be applied to the current day.A calendar's event is clickedThis event is triggered when the user clicks on an event in the calendar. Refer to the current event that was just clicked using the expression 'This calendar's current event.'A calendar's day is clickedThis event is triggered when the user clicks on a day in the calendar. You can refer to the current day that was just clicked using the expression 'This calendar's current day.' You can also retrieve the events for this day with the expression 'This calendar's current day's events.'Setup You might use this plugin to display upcoming events. To do so, you can specify the start and end times as they are saved in your database, in our case, "Start and end." We will want to display the event's name, so we set the caption as "Current event's name." In this example, we selected "Day only" as our view, so in runmode, we will see a single day its event spanning from 10 AM to 2:30 PM. ​PreviousFitbitNextGoogle AnalyticsLast modified 1mo agoCopy linkOn this pageCalendarType of eventsData sourceStart time fieldEnd time fieldAll day field (yes/no)Event captionEnable modification through dragging (start/end)Enable modification through resizing (end)Date to display at firstAvailable viewsInclude Saturday/Sunday columnsStarting dayEvent and days are selectableUse a dynamic color for each eventEvent colorEvent color fieldSelected event colorSelected day colorCurrent day colorA calendar's event is clickedA calendar's day is clickedSetup 









Slidebar Menu - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSlidebar MenuOur Academy quick tip on getting started with a slidebar menuThe Slidable Menu Plugin creates an element that inserts a menu, which appears on the right or left of the screen with a sliding effect. It is usually for apps on mobile devices.Note: Only one of these elements can be on a page.Slidebar MenuOptionsEnter the options the menu should offer. Type one entry per line and press enter between each option. When the user presses on the options, the event will be triggered and a workflow will run. Refer to the option the user pressed by accessing the 'Element's current option.'Opening sideSelect which side the menu should appear from, Left or Right.Show an iconCheck this box to use a standard icon for the menu when closed. To select a custom image, uncheck this box, select Image in the Background style, and upload an image.Icon colorSelect a color for the icon.Menu widthEnter the width in pixels for the menu when open.Distance from topIf you do not want the menu to touch the top of the browser window, set a value in pixels for the distance between the top of the window and menu.Background colorSelect the color to use for the menu background when the menu is open.Option hover colorSelect the color to use when the user hovers over an option or clicks it.FontSelect the font family to apply to the selected element. Choose from the hundreds of fonts in the Google Fonts Library.Font sizeSelect the font size in pixels for the menu options.Menu font colorSelect the color for the items when the menu is open.Shadow offsetSelect the offset in pixels for the shadow. If set to 0, there will be no shadow.Blur RadiusDefine the blur distance in pixels. A higher number means a more diffuse shadow, a lower number means a sharper shadow.Note: This option is available with a Shadow offset greater than 0.Shadow ColorSelect the color of the shadow.Note: This option is available with a Shadow offset greater than 0.A slidebar menu's option is clickedThis event is triggered when an option is selected by the user. Use the expression 'This slidebar menu's current option' to find the selected option. Often, you will use the content of the current option in the condition on the event to run the proper actions in each case.SetupOnce you add the slidebar menu, you can define its list of options. This could be different categories of content that you want to display on your page, for example, About or FAQ sections. To keep it simple in this example, we will go with a list of options 1 through 4. ​​Now we can start a workflow for when one of these options is clicked. Let's say we will also have a group on this page, and we want to change its content based on what option we choose. In that case, we can "Display data in a group" and select the current option as the data to display.​​When we preview the page and click "Option 1," we will see Option 1's information in our chosen group.​If you would like to learn more, you can check out our Academy video for how to set this up with dynamic options instead. Our Academy quick tip on how to display a list in a Slidebar MenuFAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousiTunesNextLinkedInLast modified 1yr agoCopy linkOn this pageSlidebar MenuOptionsOpening sideShow an iconIcon colorMenu widthDistance from topBackground colorOption hover colorFontFont sizeMenu font colorShadow offsetBlur RadiusShadow ColorA slidebar menu's option is clickedSetupFAQ









AddtoAny Share Buttons - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAddtoAny Share ButtonsThis plugin includes a Share Buttons element for linking to your application’s social media accounts all in the same group.‌Share ButtonsThis element includes several social icons that when clicked, open the social network of your choice. Your user will be prompted to share a post on that social media with the page name and URL of your choice. Note: This element can be blocked by some Ad blockers.URL to shareThe link that you want your users to post. This can be dynamic; for example, if you chose “this url,” you can share the link to the page in the application where you click this icon.Page name The name of your page as it will appear in the social media post. It’s also possible to use this as a brief caption instead. If you enter something like “Check this out,” your posts will read: “Check this out yourappname.bubbleapps.io.” Add a button for Select which social networks you would like to include in your group of icons. Choose from Email, Facebook, Twitter, LinkedIn, Pinterest, Google Plus, Tumblr, Reddit, or Hacker News. Add a generic button for more servicesAdd a plus icon to the end of your list of social icons. This will open additional options for where you can share your post, such as WordPress, Pocket, WhatsApp, Messenger, and more. Overwrite icon colors ‌Check this box to select a custom color for your icons. This will update all of the icons to that color, so that they match your application’s brand.Setup Add a “Share Buttons” element to your page, from the “Visual Elements” section of the Elements tree. Enter the URL to share and page name as you would like them to appear in your post, then check any services that you would like to have an icon.​Then preview the page and click an icon to test what your post will look like. You might use this in a footer for your application so that on any page, your users have a way to share your application with others. ​FAQCan I add a caption to my posts? This plugin does not support a caption field at this time, only the page name and the URL. You can update the “Page name” field as a brief caption or create the share links manually with icons if you would like to include more custom fields.Core Reference - PreviousBubble-made PluginsNextAirtableLast modified 1yr agoCopy linkOn this page‌Share ButtonsURL to sharePage name Add a button for Add a generic button for more servicesOverwrite icon colors Setup FAQCan I add a caption to my posts? 









Workflows - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookWorkflowsBubble is built around a workflow-based programming system. Create workflows to define how the app behaves when users interact with it.
 
A workflow is composed of an event, which is what triggers the workflow and the series of actions that run. An example of a workflow is 'When the button Signup is clicked, sign the user up, send an email, and then change the page.'
 
Workflows are specific to a page in the app and are modified in the Workflow Tab. If an action returns information, access this information as 'Result of previous step.'
 
The section below provides information for all events and actions used in Bubble.ConditionThere are situations when you only want a workflow or action to run under specific circumstances. For example, when the user is logged in, when a checkbox is clicked, when the user's email contains a specific domain, etc. In this case, add a condition to the event. Build a logical condition using the Composer piece by piece. In the case of actions, if the condition isn't met, the workflow will skip that action. Any subsequent actions will run using empty data.Note: When creating a workflow involving Rich Text, be careful when also using the "Text/Button ... is pressed" conditional statement on the same Rich Text - the two can interfere. As a workaround, consider adding a transparent shape on top and making that the source of the on click workflows.ElementChoose the element that the event/action applies to.Workflow folderAssign a workflow/event to a folder for clarity in the app. Create a new folder by selecting the 'Create a new folder…' entry at the bottom of this dropdown menu or from the Workflow folders section in the Palette.Tip: To display the workflow folders, from the Workflow Tab, click the arrow in the long vertical area to the right of the Tab section in the Palette.Event colorSelect a color for the event. This organizes workflows when the app becomes more complex. This color only appears in Development mode.Add a breakpoint in debug modeWhen using the debugger, instead of using the step-by-step mode for all workflows, specify specific events or actions that should pause. Checking this box allows this. This option has no effect on the app when the debugger isn't present. Similarly, when users are using the app, this will not be applied.Disable workflowOccasionally, when debugging, you may want to disable a workflow without getting rid of it. This could allow you to test specific pieces of functionality without consequent workflows getting in the way, or to modify an existing workflow while keeping a copy of the version that is already working for future reference.​​​​​​​​​​​​​​​PreviousElement TemplatesNext - Core ReferenceEventsLast modified 1yr agoCopy linkOn this pageConditionElementWorkflow folderEvent colorAdd a breakpoint in debug modeDisable workflow








Password Policy - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPassword PolicyUsing a password policy lets you make sure that your users use a password that meets certain requirements and is secure enough. If you want to activate this feature, check the relevant box in the General section of the Settings tab. Once you check the box, you will see a few other options that you can choose to select to vary the password policy even further.PreviousEmailNextVisual SettingsLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Sub Apps - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSub AppsSub applications are a powerful feature available in the Production plan. The feature sets up a relationship between a “main app” and one or more “sub applications” and makes it easier to push any changes from the main app to its sub apps, while all main and sub apps have their own database. This is especially useful for certain ideas that involve setting up different (sub/)domains for different clients, which is common in SaaS applications.Creating new sub appsThe feature can be found in Settings > Sub apps. There, you can create a sub app using the current app as the main app. This will create a copy of the main app with the new name that you pick. The new sub app will appear in your “My apps” dashboard (and will note which app is the parent), but from that point on, it generally functions as its own app. You cannot create a sub app off of a sub app, but one main app can have multiple sub apps. Pushing from the main app to sub appsHowever, one of the main features of a sub app is that at any time, you can “push” the current version of your main app to all of its sub apps. Note that this will overwrite any changes made to a sub app individually. (This feature can take a relatively longer time for complex apps.)Certain settings on an app will not transfer from the main app to a sub app upon a push. These include:Custom domain (i.e. every sub app can have its own domain)FaviconPage load times can take a while and use more capacity than normal when a complex page is loaded for the first time after that page has major changes, after that page is updated after not being updated in a long time, or if that page is newly created via copying.Bubble does a lot of computation and optimization behind-the-scenes to figure out how to generate a page and its data for a visiting end-user. As part of this, occasionally Bubble will go through a longer, deeper recalculation - this can happen when a page is viewed in run-mode after getting major changes, if a page is edited for the first time in a long time, or if a page is newly created via copying, for example. This longer recalculation does not have to be repeated often for a given page because Bubble remembers the result. But, while the recalculation is going on, you may see page load times in run-mode taking much longer than normal, as well as spikes in capacity usage. This should be temporary and should resolve itself after the recalculation finishes, which usually takes a handful of minutes.Main app vs sub app databasesSub apps have separate databases from the main app, but can connect with the main app’s database through the App Connector just like any other app. In other words, the main app’s database will not transfer to sub apps upon a push. Default values, however, are stored in the app rather than directly in the database, so they will transfer to sub apps on a push.Sub app subscriptionsEach sub app would be on its own Bubble subscription, but sub apps do not need to be on the Production plan - only the main app does.If you have a subscription to a plugin on your main app, it would not carry over  to your sub-app(s) and your sub-app(s) would need to re-purchase that plugin. PreviousSEONext - User manualMore about Bubble appsLast modified 6mo agoWas this page helpful?Copy linkOn this pageCreating new sub appsPushing from the main app to sub appsMain app vs sub app databasesSub app subscriptions

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Containers - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookContainersGroupGroups are elements that contain other elements. A group has two roles. First, a group gathers elements from a visual perspective, and all the elements in that group move together. It also has a semantic significance. A group can have data injected into it, and the elements inside the group can refer to the Parent group's thing. For example, you can 'display' a user in a group, and all elements inside that group will be able to display the 'Parent group's user's email.' Use this functionality when you want some areas of the app's page to display items relative to a dynamic entry.Our Academy quick tip on how to group elements togetherContainer layout A Group's container layout defines it's and it's child elements responsive behavior. See more in Container Layout Types.​Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For example, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Note: As mentioned, Groups can have data assigned to them (e.g. 'this group should show data about user X'). When the data assigned to a group changes, the group will reset all the input fields within itself.This is useful when the input fields are supposed to change depending on the group's data. But, it can also cause confusion, for example, when a group's data depends on an input that's inside that group!Collapse when hiddenBy default, hiding an element leaves a blank space on the page, exposing whatever is underneath it. When you select this option, however, the elements below the hidden element are pulled upward to fill the space.Tip: A common pattern for a messaging UI involves a Repeating Group where cells have two Groups (Sender & Receiver) that display the text sent by each respective party. When the message belongs to the Sender, the Receiver group is hidden and vice versa. Because of a race condition between evaluating conditional visibility of groups in Repeating Group cells and evaluating cell height, blank spaces may appear when switching between the two groups when a new message is sent.To minimize the risk of this happening, consider enabling "Collapse this element's height when hidden" on both Groups. Animate the collapse operationThis option is only visible if 'Collapse this element's height when hidden' is selected. By default, elements collapse and expand instantly, but this option animates with either Fade In/Out or Slide Up/Down.Animation styleThis option allows you to choose whether an element's animation will Fade In/Out or Slide Up/Down.Note: Animation Style is not currently supported for use on a group in situations where a repeating group's underlying data is changing. In these situations, consider relying on the repeating group's built-in updating instead of adding an animation.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Tip: Conditionally changing the borders of a Group will not resize the content in the group, which can lead to undesirable formatting. Consider using two groups (one without a border), and toggling between the two if this behavior is desired. Repeating GroupWatch this video to learn about using the Repeating Group ElementA repeating group displays lists of things, either coming from the application database or from APIs. Design the first cell, and the remaining cells will follow that design.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceThis is the list of things to display in the group. It can either beThe result of a search using 'Do a search for,'The content of a field whose type is list of things, orThe result of an API call through the 'Get data from an external API.'Once this is set, each cell will display one thing, and the elements drawn inside the cell will be able to refer to the 'Current cell's thing.'Note: Avoid the situation where you automatically change the data source of a repeating group based on a condition that references the repeating group itself! This will cause an infinite loop and the repeating group will not behave as you expect.Layout settingsFixed # of rows or columnsCheck fixed number of rows or column if you'd like to display a fixed number of rows or columns in run mode, regardless of the screen size or number of entries in the List. Check both boxes to recreate the legacy Fixed number of cells repeating group layout.​​Set fixed number of rowsCheck this box to have the repeating group show a fixed number of rows. Cell height will be determined by the height of the overall repeating group container divided by the number of rows specified. Use the show next / show previous workflow actions to paginate the table and show more data.RowsSet the number of rows you’d like to display.Set fixed number of columnsCheck this box to have the repeating group show a fixed number of columns. Cell width will be determined by the width of the overall repeating group container divided by the number of columns specified. Use the show next / how previous workflow actions to show more data.ColumnsSet the number of columns you’d like to display.Show partial list on last page if neededCheck this box to show a less than specified number of rows or columns on the last page of a paginated table if needed.Dynamic # of rows or columnsUncheck fixed number of rows or column if you'd like to display a dynamic number of rows or columns in run mode - i.e. to recreate legacy vertical scrolling or horizontal scrolling repeating group layouts.​​Min height of rowSpecify a minimum Repeating Group row height. The Repeating Group will default to filling as many cells as the data allows at the minimum height, and then grow in size evenly to fill the remaining space. For example, if you have a repeating group with a height of 440px, a min height of 100px, and 5 entries in your List, the repeating group in run-mode will initially show 4 cells at a height of 110px each.Stretch rows to fill vertical spaceIf Set fixed number of rows is unchecked, choose whether to stretch rows to fill vertical space. If rows at min height aren't tall enough to fill vertical space, each row will stretch in height to do so.If this setting is checked, the Display items as masonry grid option will not be available since that setting requires elements to fit height to their content.Min width of columnSpecify a minimum Repeating Group column width. The Repeating Group will default to filling as many cells as the Repeating Group Container width allows at the minimum cell width, and then grow in size evenly to fill the remaining space.For example, if you have a repeating group with a width of 440px, a min width of 200px, and 10 entries, the repeating group in run-mode will initially show a repeating group with 2 columns at a width of 220px each.Stretch columns to fill horizontal spaceIf Set fixed number of columns is unchecked, choose whether to stretch columns to fill horizontal space. If columns at min width aren't wide enough to fill horizontal space, each column will stretch in width to do so.If this setting is unchecked, the amount of data that is loaded will not impact the number of columns rendered on the page. For example, if 6 columns are able to fit within the Repeating Group container, but there are only two pieces of data in the List, 6 columns will still be rendered. On the other hand, if this setting is checked, the two columns with data will stretch to fit the amount of space available.Scroll directionIf Set fixed number of rows and Set fixed number of columns are both unchecked, choose the direction you’d like the repeating group to scroll.VerticalSelect this option if you'd like your repeating group to scroll vertically if the amount of rows takes up more space than the parent container allows. This is usually the most common option.HorizontalSelect this option if you'd like your repeating group to scroll horizontally if the amount of rows takes up more space than the parent container allows.Wrapped horizontallySelect this option if you'd like the items in your repeating group to wrap to a new row if the number of items takes up more space than the parent container allows. Use this setting if you'd like to create a "tag" like list where columns fit width to their content and do not need to be evenly sized. This option has access to Row gap and Column gap settings.Show all items immediatelyCheck this box to load all of the data right away. This is similar to legacy Full List repeating group behavior.Display items as masonry gridCheck this box to display the data in your repeating group as a "pinterest style" grid. The masonry grid setting allows each cell to take up only as much space as needed in each column's row, as opposed to requiring a fixed row height across all columns like normal repeating group tables. This setting is only available when Set fixed number of rows is unchecked.If this setting is checked, the Stretch rows to fill vertical space option will not be available since this setting requires elements to fit height to their content.Container layout typeA repeating group cell is a container as well and can have one of the following 4 container layout types: Fixed, Align to parent, Row, and Column. Select the appropriate container layout type depending on what child element behavior you want.Separator StyleSelect the type of border to display between the cells. Choose from None or a stylized line, such as Solid, Dashed, and Double.Separator WidthEnter the width to apply to the separator in pixels. Set a width even with a separator of None. In this case, the cells will have some empty space between them.Separator ColorSelect the separator color.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.PopupPopups are hidden from the user until you display them from the Workflow Tab. When they are visible, they are fixed position in the center of the viewport. If the popup is longer than the viewport, the user will be able to scroll to see the full content. If the popup is shorter than the viewport, the user will not be able to scroll.Our Academy quick tip on how to use popups Tip: If the popup is longer than the viewport, scrolling will be enabled, and scroll distance is tied to the length of the page in the background. If you have a very long page, the user will be able to continue scrolling the entire length of the background page, potentially past the point where the popup is no longer visible.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For example, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.This popup can't be closed by pressing 'Esc'By default, popups can be closed by the user when pressing Esc. To disable this behavior and make the popup modal, check this box. In this case, the only way to close the popup is with a Hide Popup action in a workflow.Grayout colorSelect the color of the background when a popup is open. By default, it is set to a dark transparent layer.Grayout blurEnter a number greater than 0 to set a blur effect on the background. While this offers an interesting design, the display speed of the popup may be affected.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Floating GroupWatch our Academy quick tip on how to set up a floating groupFloating groups are groups that float on the screen on top of the page but are not contained within the page. These are useful to keep an element in the same place on the screen regardless of the scrolling position of the page or the visibility of groups within the page. Floating groups are useful for headers, buttons like 'Scroll to top,' etc.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For examle, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Vertically float relative toUsing this dropdown menu, choose the base to calculate the position of the floating group. Choose from:
– Top: The distance between the top edge of the group and the top of the user's screen remains constant, no matter the scrolling position of the page. This is the default.
– Bottom: The distance between the bottom of the group and the user's screen remains constant no matter the scrolling position of the page.
– Both: Both the top and bottom distances will remain constant, and a scrollbar will appear if the group is too short to show all its content.
– Nothing: The floating group will not float, meaning that it behaves like a regular group.
 
For example, the distance is calculated as the height between the top edge of the floating group and the top of the Bubble page. Then, it displays the floating group that distance from the top of the user's screen.
Note: By placing the floating group high on the page and making it float relative to the bottom, the element may be 'above' the top of the screen and not display.Horizontally float relative toUse this dropdown menu to determine whether the element floats relative to the Right or Left. Right and Left refer to the horizontal edges of the page. This option is less common than vertical reference, but it is useful when you want an element to display no matter the page width.Floating zindexFloating groups can be above other elements or beneath the page, and then be used as a background design option. Note that when a floating element is beneath elements, it will only visible if the page background is transparentParallax effect factorWhen a floating group is beneath the page, you can apply a parallax effect to give some depth to the page. A factor of 1 will remove any parallax effect, while a factor of 0 will keep the element fixed, and a factor of 2 will make the element move twice faster than the scrolling position. A negative number will have the element move into the different direction of the scroll movement.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Group FocusWatch our Academy quick tip on how to set up a Group FocusA group focus is a group that is automatically hidden when the user clicks outside of it. Position it relative to another element. This is especially useful for dropdown menus.Note: Although the Group Focus container is fixed relative to the page, the iOS keyboard appear event can cause the Group Focus container to move to an unexpected location due to how Apple handles this event.Tip: The same element can be used to open and close a group focus element. Best practice would be to use a "Toggle an element" workflow action on the element to simply open & close the group focus. Note: If you have a searchbox within your Group Focus, clicking one of the searchbox's results will be considered clicking "outside" the Group Focus and therefore close it. A dropdown or custom searchbox are often used in these designs instead.Reference elementSpecify an element to be the location reference for the group.Offset topPushes the group this number of pixels below the reference element.Offset leftPushes the group this number of pixels left of the reference element.Type of contentThis allows you to select the type of thing this container displays. Most elements that have this property also have a Data source property, which lets you select the displayed thing or list of things. The value of the data source must match the selected type of content.
 
Let's look at an example of a map with hotels marked. When you click a marker, a popup displays with the name of the hotel. The Type of content would be 'Hotel' and the Data source would be 'Map's current marker.'Data sourceDefine the thing or list of things that should be displayed in this container. For example, in groups or popups, only a single thing will display, but for repeating groups a list of things will display.
 
Child elements can access the Data source from their parent. If the parent contains a list of things, the child has access to the individual list items.
 
A common scenario for groups is to display something, like the current user, and then have the group contain the inputs that modify the user's properties, such as text and images that display information about the user.
 
The Type of content determines what kind of thing you are allowed to set in the Data source field. If the type of thing does not match the Data source, it will be marked as an issue, and you must change one or the other to match.
 
The Data source can come from anywhere in Bubble. For example, it could be the result of a search, a custom or built-in Data source, or it could be dynamic and come from the user. The Data source will update when its source changes. For examle, if the search result changes because a user modified some data used in the search constraints, the displayed list will automatically change. For additional flexibility, you can update the Data source in the Conditional Formatting Tab in the Property Editor.
 
Finally, the Data source property can be modified by workflows. Changes made by actions override whatever you specify as the Data source directly or as a conditional state until you run a reset action, which then restores the original setting.Collapse this element's height when hiddenBy default, hiding an element leaves a blank space on the page, exposing whatever is underneath it. When you select this option, however, the elements below the hidden element are pulled upward to fill the space.Animate the collapse operationThis option is only visible if 'Collapse this element's height when hidden' is selected. By default, elements collapse and expand instantly, but this option animates with either Fade In/Out or Slide Up/Down.Animation styleThis option allows you to choose whether an element's animation will Fade In/Out or Slide Up/Down.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.PreviousVisual ElementsNextContainer Layout TypesLast modified 1mo agoCopy linkOn this pageGroupContainer layout Type of contentData sourceCollapse when hiddenAnimate the collapse operationAnimation styleStart/Edit workflowThis element isn't clickableRepeating GroupType of contentData sourceLayout settingsFixed # of rows or columnsSet fixed number of rowsRowsSet fixed number of columnsColumnsShow partial list on last page if neededDynamic # of rows or columnsMin height of rowStretch rows to fill vertical spaceMin width of columnStretch columns to fill horizontal spaceScroll directionShow all items immediatelyDisplay items as masonry gridContainer layout typeSeparator StyleSeparator WidthSeparator ColorStart/Edit workflowThis element isn't clickablePopupType of contentData sourceThis popup can't be closed by pressing 'Esc'Grayout colorGrayout blurStart/Edit workflowThis element isn't clickableFloating GroupType of contentData sourceVertically float relative toHorizontally float relative toFloating zindexParallax effect factorStart/Edit workflowThis element isn't clickableGroup FocusReference elementOffset topOffset leftType of contentData sourceCollapse this element's height when hiddenAnimate the collapse operationAnimation styleStart/Edit workflowThis element isn't clickable









Plans & Billing - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingAccount ManagementPlans & BillingBuilding Apps for OthersSelling on the MarketplaceDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPlans & BillingNote: https://bubble.io/pricing is the authoritative source about pricing information, in the event of discrepancies with the Docs.You can subscribe to a paid plan for your application in the Settings tab. Subscribing to a paid plan will offer more features and more capacity in terms of server capacity. You can see the details of the different plans in the Pricing Page. One user can have multiple apps with different plans.When you pick a plan in the editor, you can see a mention of the impact of the plan change on your application's feature.Monthly vs Yearly plansYou can either pick monthly or yearly plans. Yearly plans offer a discount over the monthly cost. A plan is billed in advance on a monthly basis or a yearly basis. Note that once you have chosen a frequency, you cannot move to another frequency without first canceling your plan. If you add some capacity to your app, for instance, you'll be billed for the remaining time on the period you've subscribed the plan (current month or current year).Add-onsBubble lets you run advanced programming operations on our servers. Capacity determines the amount of server and database CPU time that your app can consume in a given interval. On the Professional plan and above, we reserve server capacity for your app to ensure that your app runs quickly. Each Professional plan app starts with 3 units of reserved capacity and each Production plan app starts with 10 units. You can scale your app to match your app growth by buying additional units for $30/unit/month.If your app temporarily exceeds its capacity, we rate-limit the speed at which it runs to keep it under the threshold. You can monitor your usage in real time from the Application Editor.Modifying a planYou can modify your plan anytime during the period. If you are switching from one paid plan to another, the features of the new plan will be immediately accessible, and the amount will be prorated. A credit will automatically be applied to your Bubble account for the number of days you haven't used on the previous plan, and you will be charged for the corresponding days on the new plan. You will see both of these calculations (remaining time and unused time) on your next Bubble invoice. Canceling a planYou can cancel your plan at anytime. Note that when you do so, the cancellation will be immediate, and you'll lose access to paid features. In particular, you will lose the connection with the custom domain you have set up (if any).Transferring a planIf more than one user is an admin on an app, they can take the ownership of the payment of the app's plan. When a transfer occurs, payment will start at the end of the current billing period on the new paying user's card.InvoicesYou can find your invoices in the Account Page. You can define your business name and address in this page. If you modify your business name or address, you will be able to get an updated version of your invoices.DiscountsWe offer a 30% discount for a year for students, educators, and non-profits (renewable with proper proof). Please reach out to [email protected] to get this activated on your account. Discounts cannot be applied retroactively, cannot be applied to Dedicated Plans, and cannot be combined with other discounts such as Referral or Affiliate credits.Declined paymentsBubble uses an external service to process credit cards (Stripe). A declined charge will be the result of the interaction between Stripe and your bank's fraud system. Even if you entered your information correctly and made previous, successful payments, a payment may still be declined. When we process a payment on your card, we send all the information you have entered and the system will take them into account to define the risk level.If your payments are being declined, please make sure all the entered information is correct and if you are still unable to make a payment, try reaching out to your banking institution and ask if there are any restrictions on your card.Payment methodsBubble accepts major credit and debit cards (see Stripe's information for more details)VisaMasterCardAmerican ExpressJCBDiscoverDiners ClubAnnual paymentWe can accommodate yearly payments if you need this for invoicing and accounting reasons. Bubble does not offer discounts for yearly payments.Refund policyWe do not offer refunds. Any month paid cannot be reimbursed nor credited to your account.PreviousAccount ManagementNextBuilding Apps for OthersLast modified 6mo agoCopy linkOn this pageMonthly vs Yearly plansAdd-onsModifying a planCanceling a planTransferring a planInvoicesDiscountsDeclined paymentsPayment methodsAnnual paymentRefund policy









Disqus - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDisqusThe Disqus Plugin adds an element that displays a Disqus commenting area in the app. You must have an account with Disqus.DisqusThe Disqus Plugin adds an element that displays a Disqus commenting area in the app. Please setup your Disqus account before getting started with the plugin. Learn more about setting up a Disqus account in Setup.Blank Disqus plugin elementDisqus shortnameThis is the account reference with Disqus. Your shortname is the subdomain of your Disqus site. For example, if my shortname is 'bubbletesting', my Disqus url will be bubbletesting.disqus.com. Learn more about Disqus shortnames and how to set up your Disqus account here.Disqus identifierEnter a unique text identifier for the page the element is placed on. The Disqus identifier is used to look up a Disqus thread in the Disqus-system so that the proper comments are loaded. Learn more about Disqus identifiers here.Disqus titleEnter a unique title for the page the element is placed on. Disqus URLEnter the unique URL for the page the element is placed on. Disqus categoryEnter the category for your Disqus site. The category is used to organize threads in a forum (shortname). Learn more about Disqus categories here. Setup Setting up your Disqus account and siteGo to Disqus.com and log in or register for a new account. Once you have an account, you'll need to create a new site. Enter the relevant details in the onboarding form and continue through the onboarding wizard. Note: You'll use these details later when setting up the plugin element. Create a new Disqus site formInstalling the Disqus pluginOnce you have completed all of the onboarding steps, you can install the Disqus plugin for free in the plugins gallery and then add a Disqus element to a page in your Bubble app. Setting up the Disqus elementOnce you add the Disqus element to your page, you'll need to enter the shortname and category in the Property Editor. You specified these values when creating your Disqus site.Disqus element Property EditorAnd that's it, you are ready to go!FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)PreviousCircle Music PlayerNextDocuSignLast modified 1yr agoCopy linkOn this pageDisqusDisqus shortnameDisqus identifierDisqus titleDisqus URLDisqus categorySetup Setting up your Disqus account and siteInstalling the Disqus pluginSetting up the Disqus elementFAQ









OneSignal Web Notifications - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookOneSignal Web NotificationsOneSignal web notifications can be used to send marketing blasts, personalized messages, or other custom notifications directly to your users’ computers. To add this functionality to your Bubble app, install the OneSignal plugin and make an account with OneSignal.Show notification promptShow a prompt for users to enable notifications.Note: Because the plugin depends on having access to an app's Live version URL, it requires apps to be on the Personal plan and above in order to be fully set up.Opt out of notificationsOpt the current user out of notifications.Send notification to individualSend notifications directly to a user or list of users in your Bubble database. When you prompt a user to enable notifications and they agree, we send OneSignal the unique ID of their User Thing, so you’re able to send a targeted web push as easily as you would run a search in your Bubble database.User User to receive OneSignal notificationContents Notification content Title (optional) Notification titleURL (optional)Destination URL when notification clickedIcon URL (optional) Image URL to use as notification icon Send notification to list of usersList of UsersList of users to receive OneSignal notificationContents Notification content Title (optional) Notification titleURL (optional)Destination URL when notification clickedIcon URL (optional) Image URL to use as notification icon Send notification to SegmentSegment NameName of OneSignal segment to receive notificationContents Notification content Title (optional) Notification titleURL (optional)Destination URL when notification clickedIcon URL (optional) Image URL to use as notification icon Send template to individual Send custom OneSignal templates to Bubble Users, segments, or by tag filters. Templates are notifications you can design right in the OneSignal dashboard. This tool is great for visualizing the message you send before you send it, as well as saving a notification (in OneSignal) for re-use. To send a template to a user, you must access the template ID, which can be found by navigating to Messages > Templates in the OneSignal dashboard. After you get your template formatted the way you want it, click on “View/Edit” in the “options” dropdown on your desired template.The ID can then be copied from the URL as seen below.UserUser to receive OneSignal notificationTemplate IDNotification template ID from OneSignal dashboardSend template to list of users List of Users List of users to receive One Signal notificationTemplate IDNotification template ID from OneSignal dashboardSend template to SegmentSegment NameName of OneSignal segment to receive notificationTemplate IDNotification template ID from OneSignal dashboardSend template by tag filterTag KeyTag key for filter on OneSignal deviceTag ValueTag value for filter on OneSignal deviceFilter Relationship Filter relationship to determine which users receive notification. Choose from: equals, does not equal, greater than, or less thanTemplate IDNotification template ID from OneSignal dashboardSet tag on current userSet and delete tags on OneSignal devices (or “players”, as they are called in the OneSignal documentation) to help you make sure you’re sending targeted messages to the right people.Tag Key Key to set as Tag on Current User’s OneSignal deviceTag ValueValue of Tag on Current User’s OneSignal deviceDelete tag on current userTag Key Tag Key to delete on Current User’s OneSignal device Send notification by tag filterSend custom notifications to OneSignal segments and filter groups referenced by the tags you set.Tag KeyTag key for filter on OneSignal deviceTag ValueTag value for filter on OneSignal deviceFilter relationshipFilter relationship to determine which users receive notification. Choose from: equals, does not equal, greater than, or less than.Contents Notification content Title (optional) Notification titleURL (optional)Destination URL when notification clickedIcon URL (optional) Image URL to use as notification icon Setup1) Set up a new app in the OneSignal dashboard. Select the Web Push platform and choose Bubble under “Wordpress plugin or website builder” as your integration, seen below.2) Under “Other Site Setup”, enter your Bubble app domain and select the “My site is not fully HTTPS” option. Enter a label for your app as seen below. Enter this same label in the Bubble plugin tab for the field “Http os.tc”.3) Under “Permission Prompt Setup”, click “Add a Prompt” and configure your notification prompt as follows:Although the OneSignal dashboard gives you multiple options to ask users for permission to send them notifications, the best way to do this with the Bubble plugin is to choose the slide prompt and turn auto-prompt off. The plugin provides a workflow action that allows you to prompt the user whenever you want to, giving you more control over the flow of this feature. This action also automatically sends your Bubble user’s unique ID to OneSignal once they accept notifications. This allows you to send notifications directly to users in your Bubble database.You will not be able to use this feature unless autoprompt is turned off.4) Retrieve your App ID and API Key from the OneSignal dashboard under Settings > Keys & IDs and enter them in the Bubble plugins tab. If you are experiencing issues, try putting the App ID in the "App ID (headers)" field as well.OneSignal notifications in SafariOneSignal automatically provides the needed certificate to work with Safari Browsers. If you already have your own Safari Web .p12 Push Certificate you can enable this and upload it and enter the password in the OneSignal Dashboard. See also OneSignal's docs for more information. FAQWhy aren't any of my notifications are going through?Check to make sure you have properly configured your HTTPS settings specified in Step 2 of the “Getting Started” section. Notifications will not go through from your Bubble app without setting this up.Why don't my notifications show up on iOS devices?Apple mobile devices like iPhones and iPads don't currently support Web Push Notifications, so OneSignal won't work on these devices.Why can't I send notifications directly to my Bubble users?Make sure auto-prompt is turned off in the OneSignal dashboard, as is specified in Step 3 of “Getting Started” and that you’re using the “Show notification prompt” workflow action to ask your users for permission to send notifications. This action automatically registers your Bubble user with OneSignal, and you will not be able to directly send notifications to Bubble users without implementing this in your application.With the OneSignal plugin, engaging with your users is streamlined, personal, and direct. Install the official OneSignal plugin in the Plugins tab of your editor to easily integrate the power of web notifications with your application!​PreviousOlark Live ChatNextPexelsLast modified 2mo agoCopy linkOn this pageShow notification promptOpt out of notificationsSend notification to individualUser Contents Title (optional) URL (optional)Icon URL (optional) Send notification to list of usersList of UsersContents Title (optional) URL (optional)Icon URL (optional) Send notification to SegmentSegment NameContents Title (optional) URL (optional)Icon URL (optional) Send template to individual UserTemplate IDSend template to list of users List of Users Template IDSend template to SegmentSegment NameTemplate IDSend template by tag filterTag KeyTag ValueFilter Relationship Template IDSet tag on current userTag Key Tag ValueDelete tag on current userTag Key Send notification by tag filterTag KeyTag ValueFilter relationshipContents Title (optional) URL (optional)Icon URL (optional) SetupOneSignal notifications in SafariFAQWhy aren't any of my notifications are going through?Why don't my notifications show up on iOS devices?Why can't I send notifications directly to my Bubble users?








Conditional Formatting - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookConditional FormattingConditionsYou can control how page elements behave and appear under certain circumstances. Define these conditions and the properties to be altered in the Conditional Formatting section in the Property Editor. States are applied in the order listed. If two states are active and modify the same property, the state listed last is the one used. Note: With conditionals, you can create your own input validation, e.g. "This button should not be clickable until the input is at least 3 characters long". Some of these validations are not evaluated on each keystroke, but rather after the user pauses for a second.WhenA condition defines when the properties should change. A condition can be about the element itself, e.g., when a button is hovered or clicked or be based on a more complex expression, such as when the user is logged in. Build this expression one condition at a time. As this condition should return yes or no, it will be red until the condition is valid.Select a property to change when trueSelect which properties to modify from this dropdown menu when the element meets the condition.Move upClicking this button moves the condition up by one. The condition originally above the current condition will be moved down one.Move downClicking this moves the condition down by one. The condition originally below the current condition will be moved up by one.Remove conditionClicking this removes the condition from the current element.On/OffThis button turns the condition on or off in the editor, so that you can preview what different states of the condition look like. The default is off. For more information: Can have the slug value [Beta]This operation tests if the argument is a valid slug value for the Thing. A valid slug value is both unique and correctly formatted with only lowercase letters, digits, and hyphens.Cannot have the slug value [Beta]This operation tests if the argument is an invalid slug value for the Thing. An invalid slug value is anything that isn’t made up of only lowercase letters, digits, and hyphens or that is not unique.TransitionsFor a smoother effect, transitions change an element's properties over time. For example, define a transition so the background color changes over 500 milliseconds. When the color changes, the element's color will change gradually over 500 milliseconds instead of at one time.Note: Transitions are not applied to gradient backgrounds.DurationLength of the transition in milliseconds.Transition timing dropdownThis parameter determines how the intermediate values of the transition are calculated. Choose from several curves.Select a property to define a new transitionFrom the dropdown menu, select the property to apply the transition to.Remove the transitionClick the trash icon to remove the transition. The property will change instantaneously instead of gradually.​​​​​​​​​​​​​​​PreviousResponsive Properties (Legacy)NextStatesLast modified 1yr agoWas this page helpful?Copy linkOn this pageConditionsWhenSelect a property to change when trueMove upMove downRemove conditionOn/OffCan have the slug value [Beta]Cannot have the slug value [Beta]TransitionsDurationTransition timing dropdownSelect a property to define a new transitionRemove the transition

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Template tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookTemplate tabThis tab will only be visible if the current app was created from a template. If you use a template as a base, please write a review in the Template Tab. Reviews increase the quality of Bubble's templates.PreviousLogs tabNextToolbarLast modified 1yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Selling on the Marketplace - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingAccount ManagementPlans & BillingBuilding Apps for OthersSelling on the MarketplaceDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSelling on the Marketplace(Note: https://bubble.io/marketplace-policies is the authoritative source about marketplace policies, in the event of discrepancies with the Manual.)You can sell templates and plugins on Bubble. While you can make such items for free, if you start selling them, you will need to register as a seller to accept payments. Payments will be made directly to you, and Bubble will take a fee on the different transactions.Note: Payments to marketplace creators (sellers) are made via Stripe, so you must have a Stripe account in order to be paid. Defining your seller identity​Your Plugins page is where you can define you seller profile. You can set up a logo, business name, and register with Stripe in order to accept payments. Note that you will need to handle compliance aspects with Stripe directly. This can include providing identification and tax information. Note: If your country is not supported by Stripe yet, you will not be able to sell on the Bubble Marketplace. This includes restrictions from Stripe such as not allowing for transfers from non-India accounts to India-based accounts. Building, distributing and selling templatesIf you are a designer, building templates on Bubble is a great way to share good design, empower other users to start their app with a slick design, and make money. When you create and distribute a template on Bubble, there are a few rules you should keep in mind. Note that these rules are as of March 22, 2017, and Bubble reserves the right to update them at any time.Template distributionAt this stage, we do not validate templates before they appear on the platform, but we reserve the right to withdraw a template if it doesn't comply with the following rules, or if it's being reported as a poor quality template.You can advertise your templates on any site (including online ads) but you should point to the template page on Bubble. All transactions have to happen via the Bubble Platform.Intellectual PropertyTemplates' intellectual property is the propriety of the template owner. When adding a template to the library, as any other application, you have to comply with the Acceptable Use Policy you agreed to when you signed up for Bubble. In particular, you should own the design, logo and images' rights that you are using in your template.A template sold on Bubble should not be sold on another platform, including the design, logo, etc. Note that once a template is published, it can be subsequently removed from the marketplace, but the underlying app cannot be deleted (otherwise anybody who has already purchased the template would not be able to use it in the future).Commission StructureWhen you sell a template, the total payout for the owner is 75% of the facing value. You must register with Stripe to be able to take payments on the platform.Note that this fee structure may change (but will not be applied retroactively on already published templates if a change occurs).Support and debuggingAs an owner of a template, you commit to fix issues that users that use the template may report. If a template is being reported as having issues and if no action is taken, Bubble reserves the right to withdraw the template from the marketplace.Users can (and are encouraged to) leave some reviews, feedbacks and questions. You are responsible for handling questions and support requests. Failure to follow up with users that reach out (and report you to the Bubble Team) may lead to the cancellation of your Seller Profile.PreviousBuilding Apps for OthersNext - Account & MarketplaceDedicated PlansLast modified 2yr agoCopy linkOn this pageDefining your seller identityBuilding, distributing and selling templatesTemplate distributionIntellectual PropertyCommission StructureSupport and debugging









The Data API - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe Data APIAuthenticationData API endpointsData API requestsThe Workflow APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe Data APIThe Data API allows other systems to search for, read, create, modify and delete data in your application’s database via a RESTful interface.Enabling the Data APIThe Data API is disabled by default. To enable it, go to Settings - API and check the box 'This app exposes a Data API'. This allows you to select one-by-one which data types are exposed in the Data API.The Data API and Privacy RulesAccess to data is controlled by the Privacy Rules applied to that particular data type. View all fieldsIf this box is checked, the client will be able to retrieve all the fields on all the things of a given data type. If you uncheck this box you can check which fields are returned one-by-one.Find this in searchesIf this box is checked, the client will be able to retrieve a list of things of a given data type, optionally using search constraints. View attached filesIf this box is checked, the client will be able to retrieve files saved to a given data type.Allow auto-bindingThis setting does not affect clients who access the database via the Data API.Data API Privacy RulesWhenever the Data API is enabled for a database thing, three new options are available in that thing’s privacy rule:Create via APIModify via APIDelete via APIThese settings only apply to clients that access the database via the Data API. All three are disabled by default on existing privacy rules. They do not affect your application’s regular users or your API Workflows.
PreviousThe Bubble APINextAuthenticationLast modified 1mo agoCopy linkOn this pageEnabling the Data APIThe Data API and Privacy RulesData API Privacy Rules








Scheduler - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSchedulerIn the Logs tab of your application editor, you can access the Scheduler to view all upcoming scheduled workflows. Please note that the scheduler is a queue. We can think of the scheduler as a funnel. If we fill a funnel with water faster than the rate at which it drains, the water will fill up the funnel. Similarly, if we “fill” the scheduler by scheduling a lot of workflows, we can see the tasks “fill up” the scheduler and experience delays.Currently, we cap the scheduler’s drain speed at roughly 60% CPU to prevent the app from going down under the scheduler load. Making the tasks lighter or scheduling fewer of them in a set time frame should improve this “draining speed”.ShowYou can select a time and then click “Show” to search for workflows set to occur after that time. ​Pause Tasks Click here to pause upcoming workflows. If your workflows are not running as expected in live or development, check that your workflows have not been paused. If they are already on pause, this will read “Resume tasks,” which you can click in order for scheduled workflows to run again.Cancel all You can delete all past workflows that have not run yet, or scheduled workflows in their entirety. PreviousBulk OperationsNextCommentingLast modified 8mo agoWas this page helpful?Copy linkOn this pageShowPause Tasks Cancel all 

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Visual Elements - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookVisual ElementsText ElementWatch this video to learn more about the Text ElementA text element displays static or dynamic text. It can also trigger a workflow with a click.TextThis is the content to display in the text element. Enter static text or use the 'Insert dynamic data' button to enter dynamic text. In the dynamic case, create the expression to be rendered in run-mode piece by piece. It can be, for instance, 'Current user's first name.'Note: Text elements that are just slightly taller than the height of the text inside of it may randomly fail to render on page load. Consider making your text elements a bit taller than the text inside of it.Use the Rich text editor to format parts of the text differently from the main element style. Use bb-code to add richer content like a link.Tip: Certain BBCode tags have limited or no ability for you to adjust the size of the resulting embedded item (example: [youtube]). Of special note is [image], which allows setting fixed dimensions but not maximum dimensions. For finer control over items embedded in text, consider using an HTML element instead (not safe for end users to enter contents though)Cut off content if the element is not tall enoughWhen checked, the text element will truncate the text and add '...' to the end of the text. This option applies to Responsive mode. If line height is smaller than available content area, then all text will be cut off and the element will be blank.Note: In the specific situation of a) a text element having height just tall enough to accommodate the contents, b) that element having "Cut off content if the element is not tall enough" and c) a user seeing that element on Firefox, that element can sometimes not be visible because the height is too close to the height of the text. To avoid this, try making the text element slightly taller.Shrink the element height if the text gets shorterWhen checked, the text element will adjust its height when the text changes, such as a font size change, even if the new height is lower than the original height set in the Bubble Editor. If this box is checked and the element is invisible, its height will be set to zero.Stretch to fit content (non-responsive mode)This option automatically resizes the text element when the content becomes longer. The elements on the page that are below the text are automatically pushed down to make room for the resized text.Do not apply bb-codeBy default, text elements apply bb-code to let you use advanced formatting and links in texts. If you do not want this to happen, for instance because the text displays user-generated texts, check this box.Recognize links and emailsWhen checked, this option will automatically convert URLs and email addresses in the text into clickable links in run mode. Note that if the element is set not to apply bb-code and if the text has some bb-code tags, links will not be recognized.Link colorWhen the text element is set to detect links and email, you can optionally pick to color the links in a different color.Mark the links as nofollowWhen the text element is set to detect links, you can optionally make them not endorse the source (for SEO purposes).HTML tag for this element (SEO)Checking the 'Expose the type of tags for text elements' checkbox in the SEO & Metatags section in the Settings Tab allows you to select an HTML tag to be applied to this element. Select the tag in the Style Tab. Use this option for SEO optimization.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Note: If a text element is narrow, words which are longer than that element will not automatically line break. If your text element needs to accommodate long words (especially in certain languages), consider making the element wider.Similarly, if you try to rotate a narrow text element, the result may be different than what you expect. To fix this, give the rotated element a greater width.ImageWatch this video to learn more about the Image elementAn image displays an uploaded static image or dynamic image.Note: For performance reasons, the Bubble run-mode engine pre-loads all images it can find in your app, including those that are conditionally visible. If your app contains images from password-protected sources, a password prompt may appear while your app loads due to this pre-loading logic. Consider using images from a public source or using the file uploader and conditions to make an image private.Image sourceThis defines which image to display. Click Upload to select a file. The image will be resized to the element's dimensions. Clicking the 'Search for free images' button displays a popup to search for royalty-free images.
 
For dynamic images, use the 'Dynamic image' box and click 'Insert dynamic data.' Then, create an expression to return the image in Live mode. For example, 'Current user's profile picture.'Tip: We also offer partial compatibility for PDFs displayed in an image element. If the PDF is public, the browser will compress the PDF to create a thumbnail to view in the image element. Most browsers will bypass this for private files, however, and not display a thumbnail for a private file in an image element. Safari is the exception here and will compress private files to display a thumbnail.Run-mode renderingThis option defines how to handle dynamic images if their size doesn't exactly fit the current element. Choose from:Stretch: The image will be resized to fill the entire element. If the image and the element have different proportions, the image will be stretched and might look distorted. Rescale: The image will be resized to fit inside the element. If the image and the element have different proportions, the parts of the element area that the image doesn't cover will be left blank. This is the best option for profile pictures. Zoom: The image will be zoomed in until it can cover the element's whole area. If the image and the element have different proportions, the parts of the image that don't fit inside the element may be cut off. Adjust element height: The image will be resized to be the same width as the element, keeping its proportions intact. If the image and the element have different proportions, the element's height will grow to fit the whole image, and elements below it will be pushed down to make room.Cropping toolClick this button to crop a static image.ALT tagFor SEO purposes, add an ALT tag to an image. It specifies alternate text for an image if the image cannot be displayed. The ALT attribute provides alternative information for an image if a user for some reason cannot view it, e.g., slow connection, an error in the src attribute, or if the user uses a screen reader.
Note: This option is accessible when 'Expose the type of tags for text elements' is checked in the SEO & Metatags section in the Settings Tab.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Note: If you have an image element of a certain width that's trying to display a large horizontal image, it may overflow to the right if you do not change the cropping settings.ButtonWatch this video to learn more about the Button ElementA button is an element a user can click to trigger a workflow.TextThis is the content to display in the button element. Enter static text or use the 'Insert dynamic data' button to enter dynamic text. In the dynamic case, create the expression to be rendered in run-mode piece by piece. It can be, for instance, 'Current user's first name.'Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.LinkWatch this video to learn more about using the Link ElementA link is a special element that takes the user to another page within the app or website. It has the same properties as links on a web page, meaning users can right-click them, open them in a new tab, copy them.Show an icon instead of textCheck this box to display an icon instead of text. Choose an icon from the Font Awesome library.TextThis is the content to display. Enter static text or use the 'Insert dynamic data' button to enter dynamic text. In the dynamic case, create the expression to be rendered in run-mode piece by piece. It can be, for instance, 'Current user's profile page.'IconChoose the icon to use for this link. Control the color and size of the icon with the text color and size properties.Link destinationChoose either Internal page or External URL from this dropdown menu. Internal page takes the user to another page in the app. External URL takes the user to a different website.Destination pageSelect which page the link should go to.Data to sendDefine what data should be sent to the linked page. This data should be of the type of content of the destination page. If you're building a profile page which has the type of content 'user,' send a user to that page. The Composer will be red until the type of data is the proper type. If the page doesn't have a type, you can send text instead to append a path to the URL.Destination URLEnter the URL the link should go to. Use the 'Insert dynamic data' button to enter dynamic text.Open in a new tabCheck this box to open the link in a new browser tab. Use this option to keep users in the app.Disabled clicking on the linkCheck this box to make the link unclickable. Use this option to disable and enable links dynamically.Mark the link as nofollowCheck this box if you do not endorse the link (for SEO purposes).Send more parameters to the pageUse this checkbox to send additional data to a page that is not a thing. This can be text, a number for a search, etc. This option defines the series of keys and values to send. The way to use them in the destination page is by using the 'Get data from page URL' data source.Additional parametersEnter the keys and values to send to the destination page.
Warning: Because of Bubble's internal logic, do not use 'id,' 'debug_mode,' or 'resume' as keys.Send current page parametersIf there is any data stored in the page URL parameters when the page changes the parameters will be carried over to the destination page as well. These parameters will be overridden by any parameters with the same name added using the "Send more parameters to the page" option.Wrap the text when the width changesCheck this box if you want the link to be on more than one line when the page width becomes smaller.IconWatch this video to learn more about the Icon ElementThis element is a way to use one of the free icons from the Font Awesome library.IconClick this button to open the icon library and choose an icon. Search to refine the list.Icon colorSelect the color for the icon.Make the icon rotateCheck this box to continuously rotate the icon.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.ShapeWatch this video to learn more about the Shape ElementA shape element is typically used for visual purposes, but it can also trigger a workflow when the user clicks it.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.
 
For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.
 
This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.VideoThis element displays a YouTube or Vimeo player on the page. It can be a static or dynamic video. Ziggeo is also supported when the plugin is installed.Tip: The Bubble engine does not have access to play/paused states for an embedded video. As long as a video has started, it will not stop by itself, even if the container is hidden. To force a video to stop playing if the group containing the video is hidden, consider using conditional states to change the video ID to null when the container is hidden. Video sourceSelect the video's hosting service: YouTube or Vimeo. Ziggeo is also supported when the plugin is installed.Tip: If cookies are opt-in for your Bubble application, your users will need to consent for a YouTube video to load. Video IDEnter the ID of the video to run in the player. It's usually the ID shown in the URL when watching this video on YouTube or Vimeo. It can be a dynamic ID.Play the video automatically on loadIf this checkbox is selected, the video automatically plays when the page loads.Replay video when overPlays the video in a continuous loop.Video control colorSelect the color of the video player for Vimeo. YouTube does not offer this option.Server authentication tokenSets a server authentication token for Ziggeo videos to control access. Ziggeo is supported when the plugin is installed.MapWatch this video to learn how to use the Map elementThis element displays a single address or list of addresses on a map. It is powered by Google Maps.Number of markersA map can either display:
– None: In this case, the map has no markers.
– Single: The map centers this address in the map. This address can be static or dynamic.
– List: The map displays a list of addresses and zooms to display the entire list. In this case, the list comes from the application database.Type of markersWhen the map is set to display a list of dynamic entries, define the type of things to be displayed on the map. It can be users, apartments, etc.Data sourceDefine which address to display on the map. When the map is set to Single marker, it should either be a static entry, like an address, or a dynamic entry of the type geographic address. When the map is set to List of markers, the data source should be a list of geographic addresses. The Composer will be red until the list is of the correct type. It's generally going to be the result of a search.Address fieldWhen using a dynamic list to define the list to display, you must define which field contains the address. For example, if a type of thing is 'Apartment,' the field might be 'Address.' This field should be of type geographic address.Show title windowChoose from No, On click, and Always in this dropdown menu to determine when to show the title. When No is selected, the title never displays. When On click is selected, the title shows only when the marker is clicked. When Always is selected, the title always displays.Marker captionWhen using title windows, define the text to display. When building this expression, you can refer to the current marker. That is, the marker for the current box.Auto-close window when another is clicked onWhen this box is checked, the map will automatically close all title windows before displaying a new one when the user clicks on a marker.Map typeThis option defines the type of map to display, based on Google's types: Roadmap, Hybrid, Satellite, and Terrain.Map styleSelect a visual style for the map from this dropdown menu or create a custom map style. This is only for display purposes.Custom style (JSON object)This lets you copy-paste (or build your own!) map style. This must be a parsable JSON object. Visit snazzymaps.com for examples.Allow zooming and draggingWhen selected, the user can zoom and drag. When unchecked, the map will behave like a static map.Disable zooming on scrollCheck this box to prevent the map from zooming when the user scrolls over it.Set center and zoom manuallyWhen using List markers, the map automatically scales so that all markers are shown. To force a center and a zoom, check this box.Map centered onWhen using List markers, the map is centered so that all markers are shown, but you can force a center with this field. With a Single marker, the map is centered on the address.Initial zoomDefines the initial zoom used when the map loads.Use customized marker iconThis option uploads a customized icon instead of using the Google icon.Customized iconWhen using the map with a list of markers, select from No, Upload custom, and Data dependent from this dropdown menu. When No is selected, no custom icon will be used. When Upload custom is selected, upload an image to use as an icon for all the markers. When Data dependent is selected, each marker will use a unique icon, which must be stored in the application database.Customized iconUse this field to upload a customized image to use as the marker.Icon fieldIf you're using a list of markers and set the marker to be Data dependent and coming from the database, define the field that contains the image. The field should be of type image.Custom selected iconWhen working with a list of map markers, you can optionally change the marker image for the currently selected marker. This makes it easy to see which marker the user has clicked on or selected. Choose 'upload custom' to pick an image to use. If you want to use a different image for different map markers, select 'Data dependent' and you will have an option to pick an image field on the marker to use for selections.Selected iconOnly visible if 'Custom selected icon' is set to 'upload custom'. This lets you upload an image to use as the marker icon for the selected marker.Selected icon fieldOnly visible if 'Custom selected icon' is set to 'Data dependent'. Lets you pick an image field on the type of marker data you are displaying to use for the selected map marker: the image in that field will be displayed when the user clicks on the marker.AlertAn alert displays a temporary message on the page, like a warning. It is displayed with a fade in and fade out animation. Show it through a workflow action.Our Academy quick tip on how to use alertsTextThis is the content to display in the alert. Enter static text or use the 'Insert dynamic data' button to enter dynamic text. In the dynamic case, create the expression to be rendered in run-mode piece by piece. It can be, for instance, 'Current user's first name.' This content can be modified directly by the action that shows the alert. In this case, the text defined at the element level is overwritten.Position the alert at the topCheck this option to float the alert at the top of the page and be as wide as the entire page area. If checked, this means that the responsive settings won't apply, and the alert will not affect the responsive behavior of your page.HTML ElementWatch this video to learn more about The HTML ElementThis element runs HTML on the page, for instance to render elements. Some services provide embeddable HTML code to put on a page.HTMLPaste the actual HTML to be rendered by the element. If the HTML contains script tags, the script tags will only run in run-mode and not in the editor. Customize the content of the HTML with dynamic data, if needed, by inserting dynamic entries with the 'Insert dynamic data' button.Display as an iFrameCheck this box if the HTML should run as if it was an independent web page. Refer to the code provider to decide if this is a relevant option.Stretch to fit contentWhen not in iFrame mode and this option is checked, the HTML element will resize automatically if the content is longer than the element. Elements under the resized HTML element will be pushed down automatically.Built on BubbleThis element adds an icon or the text 'Built without code on Bubble.' Clicking it displays Bubble's homepage in a new browser tab. While it's not mandatory to put it in the app, we'd really appreciate your help in spreading the word about Bubble :)Note: Some browser extensions can tamper with the Bubble banner or make Bubble think the banner isn't there, prompting a reminder about it.Visual typeChoose from Blue, Gray, White, and Text from this dropdown menu. Selecting a color option will display the text of the Bubble logo in that color. Selecting Text will display 'Built without code on Bubble' instead of an icon.Add a borderCheck this box to add a border around the logo or text.Text colorCustomize the text color with this property.​​​​​​​​​​​​​​​PreviousPage Element (Legacy)NextContainersLast modified 1yr agoCopy linkOn this pageText ElementTextCut off content if the element is not tall enoughShrink the element height if the text gets shorterStretch to fit content (non-responsive mode)Do not apply bb-codeRecognize links and emailsLink colorMark the links as nofollowHTML tag for this element (SEO)Start/Edit workflowThis element isn't clickableImageImage sourceRun-mode renderingCropping toolALT tagStart/Edit workflowThis element isn't clickableButtonTextStart/Edit workflowThis element isn't clickableLinkShow an icon instead of textTextIconLink destinationDestination pageData to sendDestination URLOpen in a new tabDisabled clicking on the linkSend more parameters to the pageAdditional parametersSend current page parametersWrap the text when the width changesIconIconIcon colorMake the icon rotateStart/Edit workflowThis element isn't clickableShapeStart/Edit workflowThis element isn't clickableVideoVideo sourceVideo IDPlay the video automatically on loadReplay video when overVideo control colorServer authentication tokenMapNumber of markersType of markersData sourceAddress fieldShow title windowMarker captionAuto-close window when another is clicked onMap typeMap styleCustom style (JSON object)Allow zooming and draggingDisable zooming on scrollSet center and zoom manuallyMap centered onInitial zoomUse customized marker iconCustomized iconCustomized iconIcon fieldCustom selected iconSelected iconSelected icon fieldAlertTextPosition the alert at the topHTML ElementHTMLDisplay as an iFrameStretch to fit contentBuilt on BubbleVisual typeAdd a borderText color









Styles - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookStylesElement type Select a type from the dropdown, such as Alert, Group, or Repeating Group, to return the existing styles for that element. Search by nameType the name of an existing style, such as "Standard Alert," to find and edit that style.Apply themeAdd a visual identity to your application. Choose from Standard, Dark Theme, Twitter Bootstrap, Material Design, TODC Bootstrap, or Dark, Flat, or Rounded UI. Choosing one of these themes will overwrite your app's predefined styles with different colors and angles. Add styleAdd a custom style to your application. Choose a name and element type, such as "Custom Alert" for "Alerts." Once you define this style's properties, you can apply this style throughout your app in that element's property editor.Find all elements using this style Access a shortcut to the App Search Tool, which will return a list of any elements currently using this style. Clicking on a result in the App Search Tool will take you to the location of that styled element in your application. Make this style the default Any new elements of this type will automatically be created with this style, rather than the predefined styles that come with your application.Remove this style as the defaultAny new elements of this type will no longer be created with this style. Unless you set another default for this element type, new elements will not have a style when created. PreviousPrivacyNext - Core ReferenceAPILast modified 1yr agoCopy linkOn this pageElement type Search by nameApply themeAdd styleFind all elements using this style Make this style the default Remove this style as the default









Zapier - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookZapierThe Zapier plugin lets you connect Bubble to 2,000+ other web services, like Google Sheets, Airtable, and more. Automated connections called Zaps, set up in minutes with no coding, can automate your day-to-day tasks and build workflows between apps that otherwise wouldn't be possible.Each Zap has one app as the trigger, where your information comes from and which causes one or more actions in other apps, where your data gets sent automatically.Trigger a zap A workflow action in your Bubble application that you can run, for example, when a button is clicked.Zapier triggerThe name of your trigger, as defined in the Plugins tab.Zap thingThe thing to send to Zapier along with the zap. This should match the trigger type defined in the Plugins tab.Webhook (legacy)Enter the URL of the zap, which is provided by ZapierMake dates Google Sheets-compatible (legacy) Google sheet requires a specific formatting for dates. Check this box if the current zap uses Google SheetsInitiate this webhook (legacy) Check this button to send a sample of data to Zapier. This helps because you are setting up the zap with their editor.Find a Bubble thing A Zapier action that will search for the first thing in your database that matches a certain constraint.Create a Bubble thingA Zapier action that will add a line item to your database for a particular data type.Modify a Bubble thing A Zapier action that will change a field on a particular line item in your database, for example, changing the number field “Quantity” from 1 to 2. You will need the unique ID in order to specify the thing to change. Leaving fields empty will not delete existing fields on your Bubble thing.Kick off an API workflow A Zapier action that will start a backend workflow that you specify.SetupSign up for a free Zapier account, from there you can jump right in. To connect Bubble to Zapier:1.Log in to your Zapier account or create a new account.2.Navigate to "My Apps" from the top menu bar.3.Now click on "Connect a new account..." and search for “Bubble"4.Use your credentials to connect your Bubble account to Zapier.5.Once that's done you can start creating an automation! Use a pre-made Zap or create your own with the Zap Editor. Creating a Zap requires no coding knowledge and you'll be walked step-by-step through the setup.Set up in Bubble Once you install the Zapier plugin in the Plugins tab of your application editor, you can click to “Add Zap trigger.” You can do this when you want your Bubble application to initiate a Zap. Enter a name for your trigger and select a data type from the “Trigger type” dropdown. You will see red text for “0 active Zaps”; as you create and turn on Zaps in Zapier, this will update. This Zap count is version-specific: when you are viewing the development version of your application, this count will be the number of Zaps in the development version, and likewise for live. If this Zap does not show as active, you will not be able to trigger it with a workflow action.Now in your Settings tab of your editor, go to the API section and make sure that you have enabled the Data API for whichever data types you would like to interact with in Zapier. The Bubble API is accessible on paid plans, so your application will need to be on a paid plan in order to use the Zapier plugin. Set up in Zapier Bubble as a Zapier triggerNow that we have our Zapier plugin installed and set up in our application, we need to create active Zaps for our application to trigger. Start by logging in and clicking the “Make a Zap” button. Give your Zap a name that will be easy to identify later, such as “Add Airtable record.”For step 1, what Zapier calls the trigger, choose Bubble as your app. Select “Workflow Trigger Event” as the trigger, and click “Continue.” Choose your account and sign into Bubble, then select your account from the dropdown and click “Continue.”Search for an App ID, such as “zapier-demo,” and select a version for the application, either development or a custom branch name. If you would like to use this Zap in the live version of your Bubble application, first build your Zap and set it up in your selected development version. Once you deploy your Bubble application to live, your new Zap will work in your live version.Under Zap ID, search for the name of the Zap that you created in your Plugins tab, in our case, “Add Airtable record,” select it, and continue.In the next step, click the button to “Test & review” your trigger. Zapier will tell you if there are any errors here, for example, if the Data API is not enabled. If you see sample data, the test has run successfully, and you are ready to set up your action.This is when you choose the application outside of Bubble where you want something to take place. If we select Airtable, for example, we can fill out fields to create a new record using dynamic information from our Bubble application. We will test and review the action, and if successful, click to “Turn on Zap.”When we want to trigger this Zap on Bubble, we can add a workflow action to “Trigger a Zapier Zap,” and tell Bubble which Zap from our Plugins tab to trigger and which “Zap thing” we would like to send, for example, which user to add to Airtable.After this point, if you turn off your Zap in Zapier to make further changes, you will need to redeploy your Bubble application to live for Zap to appear active in your plugins tab and work in the live version.Bubble as a Zapier actionOnce you click to “Make a Zap,” choose the app that you want to affect your Bubble application. For step 2 and onward, the action that you want to take place in your Bubble application, select “Bubble.” You will see “Action Event” options to create, modify, or find Bubble things, or trigger an API workflow.For any of these actions, you will need to choose your account, app ID, and version as listed above.Create To create a Bubble thing, select its data type (must be exposed via the Data API) and click into the input for each field to dynamically select a value. For example, you might select an Airtable field for “Email” to map to a Bubble email field for the User type.Modify To modify a Bubble thing, select the data type and thing ID (its Bubble unique ID) for the item that you would like to modify. If you only specify one field to modify, such as “Name,” only the “Name” field will be updated, and the other fields will remain as they previously were within your database. For the technically inclined, this is because our plugin uses a PATCH rather than a PUT request for modifications.Find To find a Bubble thing, select its data type and then build an expression for your search similarly to how you would in Bubble, with a search field (“Slug”), constraint (“text contains”), and term (“exampleslug”). Note that if you are searching for users, you cannot search by the email field.​This will return the most recently modified item that matches your distinctions, rather than any item that matches in your database. If this step comes before a Modify action within Zapier, you can use this action to dynamically pull in the unique ID for the following step.Trigger an API Workflow To trigger an API workflow, select its name and specify any relevant parameters that you have defined in your backend workflows tab. Using API workflows can be helpful with the Zapier plugin when you are looking to reformat data returned from a Zap, for example, if you wish to format a row of numbers in Google Sheets as currency in Bubble, or when you wish to add or remove a single item from a list field rather than create or replace a list entirely.After setting up your chosen action, you can click continue, then test and review your action in order to see an example of how it will work prior to turning it on.FAQCan I use a newly created Bubble data type that does not have any entries yet in a Zapier action? You can set this up in Zapier and select “Skip test” for the time being, but in order to perform real operations, you will need to have data entries for the appropriate type in your database.Can I use a data type that has the same name as a deleted type in my application? If you have a data type called "Test," then you delete this type and create a second type called "Test," this will cause an error. Should you encounter this, it's possible to export the existing data type as a CSV and import it as a new type with a unique name. How does the Zapier plugin work with privacy rules? Privacy rules are automatically handled based on your permissions for the application that you selected in Zapier. If you are an admin for that application, you will be able to run any action. If you are a collaborator with “View only” permissions for Data, for example, you will be able to “Find a Bubble thing” but not create or modify one.How are lists handled? You can create a Bubble thing with a list field or modify a list field by replacing that list entirely using the Zapier plugin. The way to specify a list field is to add an item per input. For a list of numbers, you might add1002004592so that these will each be added as a separate line item in Bubble. If you were to add this as 100,200,45,92 instead, the list field would contain “100,200,45,92” as its first item. The exception to this is lists of numeric ranges or date ranges. In this case, either of the setups would be valid.What about other applications that support their own column types such as Google Sheets or Airtable? Some applications allow you to format fields as currency, dates, images, etc., which can affect how that information is sent to Bubble. If you are encountering unexpected behaviors for a certain formatted field, it may help to try sending the information as text. For example, our API sends images and files as their s3 URL, and our API requires you to pass a string field with the URL as well.What if I see the message "The Zap you tried to trigger has no active zaps"? If you see this message, it may help to manually refresh your Bubble account within Zapier. First of all, while you are editing your Zap in Zapier, turn your Zap off. Next, go to your Apps tab in the Zapier dashboard and select "Bubble." Under "My Connections," you will see the account currently linked with Zapier.Click the three dots then "Reconnect" to refresh your Bubble account. Go back to your Zap, refresh the page, and set it up how you would like. Then, turn the Zap back on and check the Plugins panel in Bubble to see if that live Zap appears.PreviousYouTubeNextZiggeoLast modified 9mo agoCopy linkOn this pageTrigger a zap Zapier triggerZap thingWebhook (legacy)Make dates Google Sheets-compatible (legacy) Initiate this webhook (legacy) Find a Bubble thing Create a Bubble thingModify a Bubble thing Kick off an API workflow SetupSet up in Bubble Set up in Zapier Bubble as a Zapier triggerBubble as a Zapier actionCreate Modify Find Trigger an API Workflow FAQCan I use a newly created Bubble data type that does not have any entries yet in a Zapier action? Can I use a data type that has the same name as a deleted type in my application? How does the Zapier plugin work with privacy rules? How are lists handled? What about other applications that support their own column types such as Google Sheets or Airtable? What if I see the message "The Zap you tried to trigger has no active zaps"? 









reCAPTCHA - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookreCAPTCHAreCAPTCHA is a free service from Google that protects your site from spam and abuse. It uses advanced risk analysis techniques to tell humans and bots apart.reCaptcha formThis element adds a reCAPTCHA checkbox to your application.Visual themeChoose between both light and dark mode to suit your design style.Element sizeThis allows you to configure the layout of the reCAPTCHA form.Verification typeDetermine what style of reCAPTCHA form you’d like to verify users by.SetupAfter installing the plugin, you’ll need to verify the API keys under the plugin settings.

In order to generate your API keys, visit your Google developer console here. Note: If you don’t already have a Google developer account, you’ll need to register one now.Within your developer console, provide a name for your reCAPTCHA, then select what type of verification form you’d like to integrate.

When adding a domain, provide the root domain of your application without a page path or formatting e.g. YOURAPP.bubbleapps.io not https://YOURAPP.bubbleapps.io/version-test/index?debug_mode=true Note: When you publish your app into production, you’ll need to generate a separate API key called ’live’ with your new custom domain. Once you’ve configured your settings, copy and paste the API keys provided into their relevant fields.

You’ll need to past the keys from your dev API within the ‘key - dev’ field of your plugin settings, then the live API keys within the ‘key - live’ fields.

Now, when creating a workflow, you can now add a condition to a workflow trigger or an event that only runs when the reCAPTCHA form is checked.

FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)



PreviousProgress BarNextRich Text EditorLast modified 1yr agoCopy linkOn this pagereCaptcha formVisual themeElement sizeVerification typeSetupFAQ









The Workflow API - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe Data APIThe Workflow APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe Workflow APIThe Workflow API lets you set up server-side workflows that can be scheduled in your app or triggered from an external applicationThis is the short-form technical reference entry describing the Bubble Workflow API. If you are looking for more in-depth and long-form articles on how the Workflow API works, you may be interested in checking the Workflow API manual.The Workflow API lets you run workflows - specifically API workflows - on a POST or GET request. By using such API workflows, you can create things, sign users up, send emails, and leverage plugins to access external services.Define the workflows as you would for a normal page, action by action. But, API workflows are one type of backend workflow, meaning they run independently of any page of your app and thus some actions (e.g. element-driven ones) are not available. API Workflows can return data, but for most incoming requests for data you will
 
You can create API workflows after checking the box 'Enable Workflow API and backend workflows' in the API section in the Settings Tab. These workflows are defined in the Backend workflows page found in the Application Menu above the Palette.API WorkflowsThese are one type of backend workflow. Not only can they be initiated from elsewhere in the app, but notably they can also be initiated via an API call, if the app's Workflow API is enabled. The general path of the Workflow API for calling API workflows follows this pattern:
 
https://appname.bubbleapps.io/api/1.1/wf/workflow_name
or
https://yourdomain.com/api/1.1/wf/workflow_name
wf is for workflow.Note that these two terms are similar but refer to slightly different things:An "API workflow" is a type of workflow, specifically a type of backend workflowThe "Workflow API" refers to the app's ability to have API endpoints that run API workflowsAPI workflowThis workflow is triggered on the server either when it is initiated from elsewhere in the app or via a call to the app's Workflow API. The workflow only runs after the authentication passes. As with other workflows, you can set up conditions to restrict when the workflow runs.API workflow nameThis is name of the API workflow and is also the URL endpoint (denoted as workflow_name above).  Each API workflow must have a unique name with no spaces or special characters.Expose as a public API workflowCheck this box to allow requests from outside the Bubble Editor via the Workflow API, either by a client that you built or another service, such as Stripe or Zapier. Non-public API workflows are useful because they can be initiated from elsewhere in the app or editor - for example, for scheduled workflows and bulk operations.This workflow can be run without authenticationCheck this box if this workflow can be run without authentication. Use this to enable users to sign up or login to the app.Ignore privacy rules when running the workflowAn API workflow is run based on the token sent. All privacy rules will apply. Sometimes, you may want the workflow to bypass these rules, even if run without authentication, and run as an admin user who has all rights to the data. Check this box to ignore the privacy rules.Warning: Because these are security and privacy options, use this feature with caution.Trigger workflow withSelect the HTTP request (POST or GET) by which you want to trigger the request.Parameter definitionParameters are the data the API workflow can accept. You have two options to define them: manually or automatically.To manually define the parameters, you list them one by one. This option is available when you trigger an API workflow using either a POST or GET request. When triggering with a GET request, the parameter definition is automatically set to be a manual definition. This is because GET requests only have url string query parameters and do not have a body from which to detect data.To automatically define the parameters, you need to use an external call to hit the API workflow's endpoint, and Bubble will automatically detect the structure of the data. This option is only available when you can trigger an API workflow using a POST request. This type of detection is especially helpful for webhooks.Call parametersDefine which parameters the API workflow takes. Use this when you need to send data to Bubble's server, e.g., an email for signing the user up or information to create a new thing.For POST requests, this data should be set in the body of the POST request, except if you check the 'Querystring' box, in which case the parameter will be read from the URL as a querystring.GET requests do not have a body, and the parameter must be read as a querystring. Therefore, querystring is automatically selected for all parameters when you trigger the workflow using GET. Enter a key and define the data type. If this is a list, check 'Is a list/array.' If this parameter is optional, check 'Optional.' When a request is received, the Bubble workflow engine checks the validity of the data and returns a 400 error if the data is invalid. Note that if the parameter is set to 'Querystring', it will not be made available for scheduling actions, this feature should only be used if the service that hits the API requires to add the parameter in the URL.
 
Access the value of the parameters in the subsequent actions of the workflows using the data source dropdown menu. You will see the parameters you defined at the top of the menu.Include headers in the detected dataWhen the parameters are detected from an initialization request, you can include the request headers in the detected data if some important data is in them.Detect dataClick this button to enter the initialization mode. This will open a popup, which indicates that your app is ready to receive a POST request. You can then trigger a POST request to this API workflow's endpoint, adding /initialize at the end of the URL. This request should include a sample of the data that should be sent when the webhook is functional. Until the request is detected, this popup should remain open. Once the request is detected, you'll be able to see the detected data and pick the data types (see below).Modify typesOnce an API workflow has been initialized (see above), you can modify the data structure of the received object. You can ignore some keys, and modify the field type of each key, value to be able to use the data in subsequent actions.Response typeThe API can return a response as a JSON object, or redirect to a page in your app and return data as querystring. Using a 302 page redirect is useful when you call the API workflow from the browser.Return a 200 if condition is not metBy default, Bubble will return a 400 error if the condition you've set on the workflow is not met. Check this box to change this setting and return a 200 code instead. Use this when the API workflow is used in a webhook, and the emitting source expects a 200 code.Redirection on successPick here the page Bubble should redirect to at the end of the workflow. If the workflow returns data, it will be added as querystrings to the URL.Redirection on errorPick here the page Bubble should redirect to at when the workflow fails. The statusCode and the message will be added to the URL as querystrings.Return data from APIThis action defines which data should be returned by the API Workflow.Return a plain textCheck this box to return a text instead of a JSON object.Text to returnDefine the text to return. It can be dynamic using the Composer.List of parametersThese are the keys and data types of the parameters that are returned. When the name and type of data are set, define the data you want to return. In the case of the Workflow API, we limit the size of lists to 50 entries. For a full list of data, please use the Data API that handles paginationPreviousData API requestsNextThe API ConnectorLast modified 1mo agoCopy linkOn this pageAPI WorkflowsAPI workflowAPI workflow nameExpose as a public API workflowThis workflow can be run without authenticationIgnore privacy rules when running the workflowTrigger workflow withParameter definitionCall parametersInclude headers in the detected dataDetect dataModify typesResponse typeReturn a 200 if condition is not metRedirection on successRedirection on errorReturn data from APIReturn a plain textText to returnList of parameters









Ionic Elements - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookIonic ElementsIonic is a library of elements that are built specifically for mobile experiences in native apps. Ionic IconThe Ionic Elements Plugin creates an element to display an icon from the Ionicon Library.IconClick this button to open the icon library and select an icon. Search for words to refine the list.Icon colorSelect the color to apply to the icon.Start/Edit workflowClick this button to create a new workflow triggered by this element. The type of event depends on the element and is generally the most common event.For example, buttons will create a 'When this element is clicked...' event. If a workflow already exists, this takes you to the existing workflow in the Workflow Tab. To create a different type of event or create a second event, go to the Workflow Tab and click the 'Click here to add an event...' button.This element isn't clickableWhen checked, the element will not trigger a workflow when clicked nor will the user's cursor change to a pointer when they hover over the element. In addition, the item will display according to any specified conditional formatting for the 'isn't clickable' state.This can be used to stop a user from moving forward in a flow until some condition is true. For example, we might disable a specific action until the user is logged in. 'This input should not be empty' can also be used to prevent the user from clicking.Ionic ToggleThe Ionic Elements Plugin creates an element that is an iPhone-like toggle that returns yes/no. Use this when you want to create a mobile experience but have the app run on both mobile and desktop devices. It's part of the Ionic framework.Preset statusDefine the initial value of the toggle. Choose from Checked, Unchecked, and Dynamic.Dynamic statusThis option is only visible if Preset status is set to Dynamic. Specifying a dynamic yes/no value determines whether this element starts in an on or off state.When the dynamic value changes, e.g., the user modifies data that the dynamic status field references, the checkbox will change to reflect the new value. This continues until the user clicks on the element and changes the state, in which case the state will be determined by their selection rather than by a dynamic value.This checkbox should be checkedWhen checked, the workflows that use the content of the toggle will not run until the toggle is set to yes. Use this, for instance, to force users to accept terms of services when they sign up.Component colorSelect a color from the Ionic color library. Choose from Light, Stable, Positive, Calm, Assertive, Balanced, Energized, Royal, and Dark.Ionic CheckboxThe Ionic Elements Plugin creates an element that is an iPhone-like checkbox that returns yes/no. Use this when you want to create a mobile experience but have the app run on both mobile and desktop devices. It's part of the Ionic framework.Preset statusDefine the initial value of the checkbox. Choose from Checked, Unchecked, and Dynamic.Dynamic statusThis option is only visible if Preset status is set to Dynamic. Specifying a dynamic yes/no value determines whether this element starts in an on or off state.When the dynamic value changes, e.g., the user modifies data that the dynamic status field references, the checkbox will change to reflect the new value. This continues until the user clicks on the element and changes the state, in which case the state will be determined by their selection rather than by a dynamic value.This checkbox should be checkedWhen checked, the workflows that use the content of the checkbox will not run until the toggle is set to yes. Use this, for instance, to force users to accept terms of services when they sign up.Component colorSelect a color from the Ionic color library. Choose from Light, Stable, Positive, Calm, Assertive, Balanced, Energized, Royal, and Dark.Ionic RangeThe Ionic Elements Plugin creates an element that is similar to the Slider Input but has an iOS8 look and feel. It returns a number. Use this when you want to create a mobile experience but have the app run on both mobile and desktop devices. It's part of the Ionic framework.Min valueEnter the minimum value for the slider.Max valueEnter the maximum value for the slider.StepThis number represents how much one increment should modify the slider's value.Initial contentThis field defines the initial value. If the content is dynamic, the type should be a number.Track colorSelect a color from the Ionic color library. Choose from Light, Stable, Positive, Calm, Assertive, Balanced, Energized, Royal, and Dark.Setup You can use the Ionic Elements similarly to how you would use Bubble's built-in icon elements and checkboxes. For example, you might select an icon to display different statuses for a parent group's task: overdue, due soon, or done. ​Then we can add a condition to make an icon visible when that parent group's status matches the one for our Ionic icon. When we preview the application, if the parent's group task has a status of "Done," then we will be able to see the green checkmarks.​​FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousGoogle PlacesNextIpiphyLast modified 1yr agoCopy linkOn this pageIonic IconIconIcon colorStart/Edit workflowThis element isn't clickableIonic TogglePreset statusDynamic statusThis checkbox should be checkedComponent colorIonic CheckboxPreset statusDynamic statusThis checkbox should be checkedComponent colorIonic RangeMin valueMax valueStepInitial contentTrack colorSetup FAQ









Element - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookElementShow an elementShows an element or popup. If the element is a container, the elements inside will be shown as well.Hide an elementHides an element or popup. If the element is a container, the elements inside will be hidden as well.Animation (native app)When building a native app, use native animations when a group is hidden, like sliding, etc. This provides a more native experience. Choose from None, Slide, and Flip.Animation directionSelect the direction of the animation. Choose from Left, Right, Up, and Down.Toggle an elementUse this action to toggle an element or popup. If the element is visible, it will be hidden. If the element is hidden, it will become visible.Our Academy quick tip on how to toggle an element Scroll to an elementUse this action to scroll the page to a specific element. The page will be scrolled so that it is at the top of the browser window. This is useful for navigation buttons.Our Academy quick tip on how to scroll to an elementOffset (pixels)Enter a number in pixels to offset the scroll position. This is useful for a floating header that is near the top of the screen.Animate an elementUse this action to animate elements on the page. The 'transition' animation hides or shows the element as an action would do.Our Academy quick tip on how to animate elementsAnimationChoose the animation to use. A thumbnail shows allowing you to preview the animation.Define a custom durationBy default, animations have a preset length. Check this box to override this setting.Duration (ms)Enter the animation duration in milliseconds.Set state of an elementAssign custom states to elements to store additional information. For example, the current tab that a group shows, etc. This action modifies the value of the state. Use the state of an element in the Conditional section in the Property Editor to change how it displays based on the value of the custom state.Custom stateSelect the state to modify. Create a new state by selecting 'Create a new custom state...' in the dropdown menu.ValueThis is the value to assign to the custom state. It should be of the type of the custom state defined when the state was created.Set another stateClick this button to set another custom state for this element.Set focus to an input elementThis action sets the focus to an input. If the input is not currently visible on the screen, the page will automatically scroll to the input.On an iOS device, even if this action is used, the keyboard will not appear until the user interacts with the page in some way. Reset relevant inputsThis action wipes the content of the inputs that were used in the workflow with this action. This is useful if you do not want users to click twice and run the workflow twice. The result inputs will either be empty or contain the default value defined for each of them.Cancel upload of a file uploaderCancel an in-progress upload of a file uploader. You can check if an upload is in progress using the 'is loading' state on the uploader.Show message in an alert boxThis action shows an alert. It is different from the Show element action because the element is shown with a fade in and fade out animation.Fade in (ms)Enter the length of the fade-in animation in milliseconds.Hold (ms)Enter the number of milliseconds to keep the alert visible.Fade out (ms)Enter the length of the fade-out animation in milliseconds.Change the alert messageCheck this box to overwrite the message defined at the Alert element level.MessageEnter the new message to display.Display data in a group/popupThis action defines which data a group or popup should use, provided a type of content was defined at the element level. It overwrites the data source set at the group/popup level. It also resets the data of any inputs or groups that are children of this element.Data to displaySelect the thing to be displayed in this group or popup. If the type isn't consistent with the element's type, the expression will be red or a popup will prompt you to change the element's type.Reset a group/popupThis action resets a group or popup. When this happens, the data source reverts to what was initially set at the element's level, and the inputs are deleted.Display list in a repeating groupThis action defines which list of things a repeating group displays. It overwrites the data source set at the element level.Data sourceThis defines the list of things that should be displayed in the repeating group. If the type isn't consistent with the element's type, the expression will be red or a popup will prompt you to change the element's type.Known IssueWith large repeating groups, especially ones showing a lot of data per cell (e.g. images), if the data source changes while the repeating group is visible, what's shown in the repeating group might have a visual lag as it refreshes in chunks. To mitigate this, consider hiding the repeating group, then changing the data source, then showing the repeating group again.Clear list in a repeating groupReset the list of a repeating group to what is defined at the repeating group's level. If no data source was defined at the element's level, the list will be empty.Show next of a repeating groupWhen using the group in a 'Fixed number of cells' layout, use this action to go to the next page in the repeating group.Wrap aroundIf checked, the repeating group will display the first page after displaying the last one so that users can keep moving through the pages.Show previous of a repeating groupWhen using the group in a 'Fixed number of cells' layout, use this action to go to the previous page in the repeating group.Wrap aroundIf checked, the repeating group will display the first page after displaying the last one so that users can keep moving through the pages.Go to page of a repeating groupWhen using the group in a 'Fixed number of cells' layout, use this action to jump to a given page in the repeating group.PageThis number, which can be dynamic, is the page to go to. If the length is shorter than the entered number, it will go to the last page.Scroll to entry of a repeating groupScrolls a repeating group so that a given entry is at the top of the list. This doesn't work with repeating groups in the 'Fixed number of cells' layout. In Infinite scroll mode, the list is scrolled to the correct position. In Full list mode, the entire page will be scrolled so that the entry is at the top of the screen.Entry to scroll toThis is the entry to scroll to. If it is not in the list, nothing will happen. It should be of the same type as the repeating group.Animate the scrollingCheck this box to apply a 300-milliseconds animation as the page/list scrolls.Vertical offset (pixels)By default, this action will scroll so that the entry is at the top of the element (or the screen). If you need to add an offset, for instance if a header is at the top of the screen, you can enter a number of pixels there.Display markers on a mapThis action overwrites the list of places a map shows. It takes a list of things that contain a geographic address and displays them on the map. When doing so, the zoom of the map is adjusted automatically to show all markers.Data sourceDefine the list of things that should be displayed on the map. If the type isn't consistent with the map's type, the expression will be red or a popup will prompt you to change the element's type.Set current map marker for a mapThis action sets the currently selected map marker on a map. Only works for maps that are displaying a list of markers. When this action is run, the map's 'current marker' will change to the value of 'To select'. If the map is configured to display custom map markers for the selected item, and the value of 'To select' corresponds with a marker currently visible on the map, that marker will be visibly selected. Also, if 'Show title window' is turned on, the title window will be shown if it was currently hidden. Otherwise, there won't be a visible change to the map.To selectThe map marker to select. Must be the same type of thing currently displayed as the map's list.Clear markers on a mapThis action clears the map and uses the data source defined at the map level.Adjust map zoomThis action automatically adjusts the map zoom so that all markers are visible.Set center and zoom manuallyBy default, the action adjusts the zoom and center so that all markers on the map are shown. Check this box to define the zoom and center manually.Map centered onThis is the address used to center the map.Initial zoomThis is the zoom level applied to the map.​​​​​​​​​​​​​​​PreviousEmailNextCustomLast modified 1yr agoCopy linkOn this pageShow an elementHide an elementAnimation (native app)Animation directionToggle an elementScroll to an elementOffset (pixels)Animate an elementAnimationDefine a custom durationDuration (ms)Set state of an elementCustom stateValueSet another stateSet focus to an input elementReset relevant inputsCancel upload of a file uploaderShow message in an alert boxFade in (ms)Hold (ms)Fade out (ms)Change the alert messageMessageDisplay data in a group/popupData to displayReset a group/popupDisplay list in a repeating groupData sourceClear list in a repeating groupShow next of a repeating groupWrap aroundShow previous of a repeating groupWrap aroundGo to page of a repeating groupPageScroll to entry of a repeating groupEntry to scroll toAnimate the scrollingVertical offset (pixels)Display markers on a mapData sourceSet current map marker for a mapTo selectClear markers on a mapAdjust map zoomSet center and zoom manuallyMap centered onInitial zoom









Building Actions - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBuilding ActionsBuilding actions is quite similar to building elements. You add them to your plugin and test them in a similar manner, using a test app.Action typesTwo types of actions can be built: they can be client-side or server-side.1.Client-side actions are useful for page interactions, or send some data to analytics, convert a credit card into a token using a library, etc. 2.Server-side actions can be used to make custom calls to external services, run a matching algorithm, compute an advanced computation, etc. These actions can return some data that can be used in subsequent actions.Note: Server-side plugin actions encode files using base64, which increases file size by approximately 1.25x, so try to avoid passing files that are larger than 5MBs through server-side plugin actions. File URLs are a good alternative to use instead of file inputs.Note: Option Sets cannot be retrieved via server-side actions. Client-side, Option Sets will be represented as { listProperties, get } objects (where listProperties lists all the fields on the Option, and get('field') gets the value of 'field' on that option set.Note: When writing server-side actions, avoid using async/await syntax to wait for promises. The framework we use to to handle asynchronous code (notably used in context.async or context.request) relies on a special library called "Fibers", which works very differently from usual promises and will cause unexpected behavior if async/await is used. Consider using the traditional Promise.then/catch syntax instead, which is supported by Fibers.Action definitionSimilarly to elements, you have to define the different fields, and then use these values in your code in the properties object. Please refer to the previous section for the different options you have access to when adding fields to an element or action.The core of the action is the function that gets executed when a workflow hits this action. This function will be called with the properties and the context object. You can see the contextual documentation in the editor for the different objects.Note that similarly to element functions, you should take into account that your code may be run more than once to fetch data, it is therefore recommended to always load data at the beginning of your functions, prior to modifying any state external to the function. See the next section for more information.Here is for instance how an action that sends data to Facebook Pixel looks like.Using node modules in a server side actionFunctionality of server side actions can be extended by the use of node modules. To do so, select "This action uses node modules", and paste in your package.json into the box that appears below. Modules may also be listed by hand; only the "dependencies" section is used. Require your modules inside your function as you would in any other situation.When your list of modules has been added or updated, Bubble will need to build a deployment package, which will be used to run your action. This process may take up to a few minutes, and can be started by clicking the link that will appear below the box.PreviousBuilding ElementsNextLoading DataLast modified 1yr agoCopy linkOn this pageAction typesAction definitionUsing node modules in a server side action









LinkedIn - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookLinkedInLet users log in with their LinkedIn accounts and fetch their profile details.Signup/login with a social networkThis workflow step allows you to integrate a LinkedIn authentication event when registering a new user, or logging in an existing user.OAuth provider - LinkedInAllows the Bubble editor to verify the correct social platform to login/signup the user.Current user’s LinkedInWhen adding dynamic data, this operator allows you to fetch and display content from a user’s connected LinkedIn account.User’s IDThe unique ID of a users LinkedIn profile.User’s first nameThe first name of a user per their LinkedIn account.User’s last nameThe last name of a user per their LinkedIn account.User’s profile pictureA user’s LinkedIn profile picture.SetupConfiguring your APIOnce you’ve installed the LinkedIn plugin, you’ll need to configure your API keys through the LinkedIn developer portal. You can find your API keys under the ‘auth’ tab in your developer account.

Add both your client ID and client secret key into the corresponding fields of your LinkedIn plugin.

After connecting your plugin, you’ll now need to add a redirect URL under the ‘OAuth 2.0 settings’ in your LinkedIn developer portal. This URL should be the same page in your app  where the user originally selected to connect an account. Once a user has authenticated their account through LinkedIn, this is the page they’ll be redirected to.

Registering a user with LinkedIn OAuthAfter configuring your API and app settings, you can now use the ‘signup/login with social network’ step within a workflow. From the event dropdown menu, you’ll see an option to select the LinkedIn OAuth provider. This event can be added to an element like a login button.

After a user clicks this button, they’ll be redirected to a LinkedIn portal where they can verify their account, then be redirected back to the destination URL of your application.Now, you can choose to display data from a user’s LinkedIn profile by selecting the ‘current user’s LinkedIn’ operator.

FAQHow do you store a user’s LinkedIn profile information within your own database?When signing a user up through LinkedIn OAuth, it’s possible to add an additional step to your workflow that makes changes to the current user account.Within this workflow step, connect your database fields with the ‘current user’s LinkedIn’s’ operator.

​Note: If a user is to revoke access between your app and their LinkedIn account, the link to each connected data field can break. It can be considered best practice to pull this data in dynamically rather than save it to your database. PreviousSlidebar MenuNextLocalize TranslationLast modified 1yr agoCopy linkOn this pageSignup/login with a social networkOAuth provider - LinkedInCurrent user’s LinkedInUser’s IDUser’s first nameUser’s last nameUser’s profile pictureSetupConfiguring your APIRegistering a user with LinkedIn OAuthFAQHow do you store a user’s LinkedIn profile information within your own database?








Bubble app names - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMore about Bubble appsBubble app namesCookies set by Bubble​PreviousSub AppsNextBubble app namesLast modified 1yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





General - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGeneralTip: Deploy your application to live for changes in your Settings tab to take effect. Privacy & SecurityApplication rightsDefine who can see and modify the app. Choose from Private app, Everyone can view, and Everyone can edit. This can be useful when you need help from other users, through the forum for instance. This setting does not apply to the owner of the app.Important: Making the app private will not prevent people from seeing it on the web in Live mode. To prevent unauthorized users, apply a username and password.Limit access to this app with a username and passwordCheck this box to protect your page. When checked, you can define a username and password that restricts access to the page. The concept of username and password is completely different and separate from the concept of a user in the app.UsernameWhen the app is protected, users are prompted to enter a username and password. Define the username here.PasswordWhen the app is protected, users are prompted to enter a username and password. Define the password here.Do not apply password for liveCheck this box to only apply the password protection to the Development or custom version of your application but not the Live version.Define a password policyCheck this box to require users to follow certain conditions when defining their password, increasing security.Password minimum lengthDefine the minimal length for the password.Require a numberCheck this box to require users to include at least one number in their password.Require a capital letterCheck this box to require users to include at least one capitalized letter in their password.Require a non-alphanumeric characterCheck this box to require users to include at least one special character in their password. For example, ; , " ' ? < > { } & ^ % $ # @ ! * . / - + = ~ ,Redirect users who haven't changed their passwordWhen a user's password isn't valid, they can be redirected to a page to update it. Select the page to send them to. This page should offer update credentials functionality. If this setting is empty, users will not be redirected.Activate two-factor authenticationCheck this box if you want your users to be able to use 2-factor authentication to log in to your app. This means users will need to use an app on their phones (Google Authenticator or Authy, for instance) to generate a one-time temporary token to login. This offers higher security to your application. Note that you need to be on a Production plan to use this.Application name to display in 2FA appYou can enter here the name of the application you want to be displayed in Google Authenticator or Authy.Redirect users to check their temporary tokenWhen users have activated two-factor authentication, they will need to enter a one-time token to log in. There should be a special page in your app with a Check 2FA token action to prompt users to enter their code. You have to define here which page contains this workflow.Allow to render the app in an frame/iframe (X-Frame-Options)It is a best practice in terms of security to prevent other websites to load your application in an iframe. We recommend keeping the DENY option, but if your app requires being loaded in iframes, you can pick 'Allow all iframes'. Note that this can have consequences on your application's security.Make new data types private by default with a privacy rule placeholderNote: Beginning in April 2021, this setting is no longer visible to new apps or to apps that did not have this setting on. Instead, Bubble introduced a new public / private choice at the point of data type creation (see here). Any previously existing apps that had this setting turned on will continue to have the setting in effect as before, though if they turn the setting off, they will lose the ability to turn it back on.As you add more data types to your app, it is good to have them private by default (with privacy rules). That way, you will avoid exposing data that shouldn't be visible to every users until you have thought through the privacy rules that should apply to that type. When you check this box, a placeholder rule will be added to each new type so that data isn't visible until you've defined the rules. We recommend checking this box once your app is live in production.Do not set cookies on new visitors by defaultBubble sets cookies in the browsers of users who visit Bubble-built apps, in order to remember who the user is, and communicate information to the user's web browser necessary for displaying the page.
 
By default, when a user visits a Bubble app without logging in, we assign them a temporary user account. This lets you use the "Make Changes to Current User" action to store data about the user, which then gets transferred to their permanent user account if they subsequently sign up for your app.
 
Many websites, in order to protect their users' privacy and comply with regulations, are adopting a policy of asking users for consent before setting any cookies in the user's web browser. This option is designed to assist with that.
 
When you select "Do not set cookies on new visitors by default", Bubble will not create temporary user accounts in the database for visitors who are not logged in, and will not set cookies. Bubble will only set cookies when one of two things happen: 1) you call the "Opt-in to Cookies" action, which will create a temporary user object in the database, or 2) the user signs up or logs into your app, which requires cookies.
 
When using this option, it is your responsibility to inform the user that your app uses cookies in order to provide the app's functionality, and to call the "Opt-in to Cookies" action or a sign up action only once the user has indicated their consent.
 
(You may also choose to enable this option purely for performance reasons, since displaying a web page to a new visitor will generally be slightly faster and less capacity-intensive if we don't create a new temporary user).
 
We also provide an action "Opt-out from cookies" that you can use to give the user the ability to retract their consent. Calling this action will wipe all Bubble cookies from the user's browser. Note that logging into Bubble requires cookies to function properly, so calling this on a logged in user is not recommended; instead, to support the case of a user leaving your app, delete their account.
 
When a user who has not yet opted in to cookies interacts with your app, you may still use the "Make Changes to Current User" option to store information. However, this information will not be stored on Bubble's web servers, and if the user closes their browser window, the information will be permanently lost. On opt-in or sign up, any data stored in this way will be transferred to the new temporary or permanent user that gets created.
 
Note that this setting only controls cookies set by Bubble as part of its core functionality. Bubble plugins may still set cookies. We are exposing the ability to check whether or not the user has opted in to cookies to plugin developers, and encourage them to make sure their plugin complies with the user's settings, but we don't have the means to enforce this. Please test your app to ensure that it is not setting any cookies that you want to avoid adding.
 
Turning on this setting will not affect anyone who has already visited your app: temporary users created for those visitors will continue to exist, as will the cookies we use to remember them. Using this setting will prevent any iframe (using the HTML element or Video element) from using cookies, so some third-party websites (like Vimeo) embedded this way may stop working when users haven't consented to cookies, as they may mandate cookies in order to work.General appearanceFaviconThe favicon is the icon displayed next to the title of the page in the browser's tab. Upload any image, preferably a square PNG file.Note: For anti-tracking reasons, Safari does not support SVG favicons. Please consider using a png file instead. Progress bar colorWhen a workflow is running, a 2-pixel-high status bar may appear at the top of the screen. Select the color of the bar here.Repeating group spinner colorWhen data is being loaded in a repeating group, if it takes a few moments for the data to appear, a spinner is shown. Select the color for the spinner or make it invisible by making it transparent.Remove Bubble mention in consoleIf you are on a paid Plan, you can opt to remove 'This web application is entirely built without code on Bubble (https://bubble.io)' by checking this box.Expose the option to add an ID attribute to HTML elementsIf you need to specify some IDs on some elements on the page, you can check this box. A field will be shown at the very bottom of the Property Editor. See the Unique ID property for more details and usage warnings.iOS appearanceHide Safari UI componentCheck this box to hide the toolbar of Safari on an iPhone/iPad. This gives a more native experience for users, but it makes navigating the Web more difficult when in the app.Prevent the user from zoomingCheck this box to prevent users from zooming on their phones with their fingers. This gives a more native experience for users. Note that this setting does not apply to Safari.Icon for home screen (60 x 60 pixels)On the iPhone, users have an icon on their home screen to a specific website. Upload an icon to use in this situation. This gives a more native experience for users.iPhone 5 startup image (640 x 1096 pixels)When the app takes time to load, you can force Safari to display an image until the app is fully loaded. Upload an image to use in this situation.Note: This is for the iPhone 5.iPad startup image (portrait, 1536 x 2008 pixels)When the app takes time to load, you can force Safari to display an image until the app is fully loaded. Upload an image to use in this situation.Note: This is for the iPad in portrait mode.iPad startup image (landscape, 1496 x 2048 pixels)When the app takes time to load, you can force Safari to display an image until the app is fully loaded. Upload an image to use in this situation.Note: This is for the iPad in landscape mode.Custom fontsYou can add a custom font to the app. Enter the font family name as defined in the CSS file and the URL to the CSS file. It could be, for instance, 'FantasqueSansMonoRegular' and 'https://fontlibrary.org/face/fantasque-sans-mono.' Make sure the CSS file exists and that the font family names are correct, otherwise the font will not display. Once added, the font will be at the top of the list in the dropdown menu. Each font weight must be added separately.​​​​​​​​​​​​​​​PreviousApp planNextDomain / emailLast modified 7mo agoCopy linkOn this pagePrivacy & SecurityApplication rightsLimit access to this app with a username and passwordUsernamePasswordDo not apply password for liveDefine a password policyPassword minimum lengthRequire a numberRequire a capital letterRequire a non-alphanumeric characterRedirect users who haven't changed their passwordActivate two-factor authenticationApplication name to display in 2FA appRedirect users to check their temporary tokenAllow to render the app in an frame/iframe (X-Frame-Options)Make new data types private by default with a privacy rule placeholderDo not set cookies on new visitors by defaultGeneral appearanceFaviconProgress bar colorRepeating group spinner colorRemove Bubble mention in consoleExpose the option to add an ID attribute to HTML elementsiOS appearanceHide Safari UI componentPrevent the user from zoomingIcon for home screen (60 x 60 pixels)iPhone 5 startup image (640 x 1096 pixels)iPad startup image (portrait, 1536 x 2008 pixels)iPad startup image (landscape, 1496 x 2048 pixels)Custom fonts








Bubble Release Tiers - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble Release TiersThe Bubble engine is evolving all the time - on a typical workday, we'll have many code rollouts representing any combination of bug fixes, infrastructure improvements, new features, and more. Every app is on a particular "release tier", which corresponds to when it receives these code rollouts to the Bubble engine.Immediate release (default)By default, any such Bubble code rollout will get immediately applied to all Bubble apps - we call this "immediate release".Note that occasionally, a change in the Bubble platform will be labeled a breaking change from before, a situation which creates a new "Bubble engine version". This means that we are changing the behavior of an existing Bubble feature in a way that we think is an improvement (usually this is in the context of a bug fix), but because existing apps may be relying on the old behavior, we do not want to forcibly upgrade all apps to the new code.In these situations, apps can control when this new particular behavior is applied via Settings > Versions. This way, you can upgrade Bubble version on your development version when convenient for you and test out the impact of that change. When your app on the new Bubble version looks good to you, you can deploy to live just like any other change to your app. In other words, upgrading the Bubble version of your development version does not automatically upgrade the Bubble version of your live version - you must deploy.If an app is on an older Bubble version (i.e. any version that's not the latest one), it will still receive any code updates that are rolled out since the breaking change, just not the breaking change itself (or any future breaking changes).Scheduled releaseApps on the Professional plan and above can elect to receive Bubble engine updates a bit of time after they are rolled out. This setting is in Settings > Versions and is called "scheduled release". On scheduled release, the app will not get Bubble engine updates immediately. Rather, apps on scheduled release will all get Bubble updates once a day (in the morning ET, though the exact time each day may vary), only if the Bubble codebase has not changed for a certain number of hours. This once-a-day update will contain all the platform updates since the last scheduled release. Note that some days, this release may not happen at all.This feature can be useful for app creators that would rather not receive Bubble engine updates immediately because they want to reduce the risk of their app changing many times during a day.Caveats and notes:In the event a code change is deemed very important (e.g. an urgent bug fix), the Bubble team still has the ability and right to roll out that specific code change immediately at any time, even for apps on scheduled releaseCertain infrastructure rollouts occur outside of this release system, i.e. could get rolled out at any time.If your app was on scheduled release and you switch it to immediate release, it will immediately get up to the most recent code release and immediately get all releases after that.If your app was on immediate release and you switch it to scheduled release, the platform for your app will shift to the last release that all scheduled release apps received, meaning your app may move backwards to a slightly older version of the codebase.Please be cautious using very newly rolled out features if you intend to switch from scheduled to immediate release imminently.Dedicated releaseAll dedicated instances are on a different release tier called "dedicated release". In fact, dedicated instances have full control over when new Bubble code is applied to their instance. Dedicated users will see a special icon towards the upper right of their editor to manage the Bubble engine version their instance is running.Generally speaking, every morning there is a new dedicated release version available to choose, containing any Bubble engine updates from the day prior.Dedicated instances do not have to upgrade Bubble version at any time, though we highly recommend that such updates happen often, so that the dedicated instance can benefit from the latest bug fixes, new features, etc.PreviousSocial NetworksNextSEOLast modified 2yr agoCopy linkOn this pageImmediate release (default)Scheduled releaseDedicated release

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Dropzone - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookDropzoneThis plugin adds an uploader that you can use to upload multiple files at the same time. Multi-File UploaderThe Multi-File Uploader - Dropzone creates an element that allows users to upload more than one file at a time. The returned value will be a list of files.Note: At this time, "Multi-File Uploader's Value" will not work as the value for a list of attachments when using the Send Email action. If you need to send these multiple uploaded files as an email attachment, consider referencing them after they are uploaded. Message to displayEnter what the list should say when empty.Initial files to displayThis property contains the list of files the input should have before the user interacts with it. It should be a list of files.Maximum number of filesThis property defines the maximum number the list can contain.Make this file privateBy default, uploaded files are visible to anyone who has the link to the file. To provide an additional layer of security to files uploaded through this element, select this option. You will be prompted to select a thing to permanently attach the file to. That item can then be used to restrict access to the file via privacy rules.Note: when uploading to Box, set privacy rules in the Data > Privacy tab.Attach this file toThis option is only visible if 'Make this file private' is selected. Private files uploaded with this element are permanently attached to a thing, which is used to determine who has access to view the file. Only users who have the 'View attached files' permission for that thing can view the file. Go to the Privacy section to create privacy rules that grant this permission. If the value of 'Attach this file to' is empty or the thing does not exist, the file will be visible to anyone who has the link, which is the same as if 'Make this file private' was not selected.Storage serviceBy default, uploaded files are stored by Bubble using Amazon's S3 file hosting service. You can optionally select a third-party storage service instead by adding that service as a plugin. Currently we support one third-party service, Box. (Note: when uploading to Box, set privacy rules in the Data > Privacy tab.)Folder pathEnter the destination in your Box to upload the file. The destination is a forward-slash (/) separated list of folder names, such as 'My Folder/My Subfolder.' Bubble will automatically create folders if they do not already exist, and dynamic data can be used to build the folder path.Setup Add the mutli-file uploader to your page from the “Input forms” section of the Elements tree. Customize the message to display along with the maximum number of files. ​To save the uploads to your database, create a new workflow for when this multifile uploader’s value is changed (the an input’s value is changed event) create a new thing. ​​The multifile uploader’s value is a list of files, so it’s important to ensure that the field we set this equal to is a list and not a single file. FAQCan I save files uploaded to a multifile uploader individually? If you would like to save the files individually, you will need to break up the multifile uploader’s value into individual files, using the “:item #” operator. This is fairly doable when you have a small maximum number of files for this uploader; otherwise, it may be easier to use separate file uploaders.PreviousDraggable ElementsNextFacebookLast modified 1yr agoCopy linkOn this pageMulti-File UploaderMessage to displayInitial files to displayMaximum number of filesMake this file privateAttach this file toStorage serviceFolder pathSetup FAQCan I save files uploaded to a multifile uploader individually? 









Element Templates - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookElement TemplatesBubble includes 2 element templates for you to add common functionality to your application. Tab ElementThis template includes a "Group Tab" that adds 3 tabs to your application. When a button such as "Tab 1" is clicked, a custom state is set to 1. The content for the tabs will either be visible or invisible based on when the custom state's number matches its tab number. This is useful for creating a page-like effect without leaving the initial page. Signup / Login Form This form includes an input for the user's email, password, and password confirmation so they can create an account with your application. If a user chooses to switch to login mode instead, they can enter their existing credentials and reset their password if needed. ​​​​​​​​​​​​​​​PreviousReusable ElementsNext - Core ReferenceWorkflowsLast modified 1yr agoCopy linkOn this pageTab ElementSignup / Login Form 









Using Dedicated - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBenefits of DedicatedUsing DedicatedBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookUsing DedicatedOnce your Bubble Dedicated Cluster is running. Your experience with Bubble will mostly be the same, except a few things:You should still manage your account, update your credit cards, emails, etc. at bubble.io, as you would do before the upgrade. However, your app is hosted on a subdomain (dXX.bubble.is). The first time you'll visit this URL, you'll be prompted to login with your Bubble credentials. When you'll edit your app (from bubble.io/home), you'll be take directly to the right subdomain. Note: App modification date (for sorting apps in your home page) is either stored on the app object or in a Meta Thing. Since the app object cannot be read from a dedicated cluster, and the Meta thing is not updated when edits are made to a dedicated app, the app modification date is not reliably stored. Upgrading your serversYou can control the version of your installation in the Dedicated Panel visible at the top of the Editor (look for the fork icon). Clicking on it will show you if you're on the latest version or if you can upgrade. If you can upgrade, you'll be able to see what is new compared to your installation, and a button to upgrade. You can press this button and keep working (and refresh when the process is completed).Note: We highly recommend that dedicated users upgrade their servers with some regular frequency. Doing a large upgrade after a long period of not upgrading has some risk of triggering many behind-the-scenes calculations occurring at the same time. Normally, these calculations are in different versions of the Bubble codebase that are spread out over time, so they don't cause issues for the main cluster. Doing too many of these calculations at once due to a big dedicated upgrade could temporarily take up (or exceed) the available resources in the dedicated instance.Monitoring DashboardOnce you are on a Dedicated Plan, you will be able to monitor the health of your servers in the Logs Tab of the Editor. This will show you CPU utilization and memory usage. We will proactively notify you if your usage is reaching certain levels, and then we'll work with you to upgrade your infrastructure as needed. Do reach out to us as usage patterns change.Like applications on the main cluster, you also have access to Server Logs per application. Server logs are accessible for 2 weeks on Dedicated plans. PreviousBenefits of DedicatedNext - Account & MarketplaceBuilding PluginsLast modified 1yr agoCopy linkOn this pageUpgrading your serversMonitoring Dashboard








Design tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble's InterfaceIn this section, we cover everything that there is to know about Bubble's Interface.Design tabWorkflow tabData tabStyles tabPlugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesPreviousCollaborationNextDesign tabLast modified 1yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





API Connector - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAPI ConnectorThe API Connector allows you to set up a RESTful API Connection with any compatible external system.For the quick reference detailing the technical specifics of the API Connector, see this article.For the long-form article on how to use the API Connector see this article.PreviousAirtableNextBlockspringLast modified 1mo agoCopy link








Version Control - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookVersion ControlWatch outWe are investigating bugs that occur during the merge process - this can lead to unexpected behavior, especially for more complex merge situations. If you merge and you suspect a bug, you are able to revert 'live' (or a version) back to a previous point in time. Note that it's also possible to copy elements / workflows / etc. from one version into another.Every Bubble app has at least two versions, live (the version exposed to the world) and at least one development version, to which you make changes. All apps by default come with a single development version, called "test," although if you are on a Professional, Production, or Dedicated plan, you can create more. On these plans, if you were to delete a development version, it would not affect your live app in any way.Within a version, Bubble lets you revert changes to your application in case something went wrong. Save points make it easy to revert to particular point, but since changes are stored continuously, you can revert to any specified time. How far back in time you can revert is determined by your plan.VersionsYour application has at least two versions, live and test. Live represents the publicly-accessible version of the app, test is the version you make changes to. When you are ready, you can deploy your changes from test to live. Users on Team, Production, and Dedicated plans can have multiple development versions.When building an app with multiple development versions, any version can be deployed to live. And, each version will have its own save points and reversion history. You can add the changes from any development version to the current development version.The Version Control DropdownFunctionality related to version control can be found in the version control dropdown, found just to the left of the preview button:The name of the currently active branch is displayed in the toolbar, as well as at the top of the menu. Other versions can be selected from the menu below, or a new one can be created by clicking "Create a new version." The top portion of the menu allows you to perform operations relating to the current version: deploy it to live, create a save point, revert it to a previous time or save point (click "History"), or sync recent changes to live with it.FYIWhen you merge two versions, especially with big apps and with larger differences between the versions, the editor will be noticeably slower for a little while after the merge as Bubble does a lot of calculations behind-the-scenes. This should resolve itself after a little while.Known IssueAfter merging two development versions, the Issue Checker in the newly combined version may not update right away. In these situations, if you want to be extra sure that any issues are caught in the merged version, our suggestion is to visit each page in the editor - visiting a page will should cause the Issue Checker to run for that page.The History PopupClicking the "History" button gets you a popup that allows you to revert the current version to a previous point in time, as limited by your plan. Changes to Bubble apps are saved in a granular fashion, in the manner of an infinite undo. It's therefore possible to revert your version to any point in time. You can also create save points (directly from the version dropdown), which make it easy to revert the app to a particular state. You can think of save points as annotations, labels on a particular time and date you can apply for convenience. Histories are specific to versions, which means that when you deploy to live, live's will show your deployment but not development version save points leading up to it. Please note that times are in your local timezone, and that reverting does not affect the state of the database.Syncing a Version with LiveWhen a user of a multi-version app deploys their version to live, the other versions become out-of-sync with live and need to be synced. Syncing a version with live incorporates the newly deployed changes, making it possible to deploy. In the event that one of the deployed changes conflicts directly, the user will be shown both options and prompted to choose which change to keep. Once an app has been synced it can be deployed.The development version is the one you work on, while the live version is read-only and the one your users interact with in production. You restore your application in development mode, and if you need to deploy an older version of your application to production, you then deploy (push) to live.Version Control Best PracticesDefinitionsMergeA merge is when you add changes from one version into another version. For example, let's say I made some updates to my app in Version A. If I want to include those changes in my Development version, I would merge Version A into Development.Conflict A conflict occurs when the same element or workflow has been changed in different ways in both branches involved in a merge. For example, let's say I have a blue Login Button in Version A and I create Version B from Version A. I then change the color of this Login Button to red in Version A and green in Version B. If I try to merge Version A into Version B, Bubble does not know what color the Button should be so it raises a conflict. To resolve the conflict, you must choose whether you want to go with the change to red in Version A or the change to green in Version B.Deploy to LiveThe process of publishing the changes in a version to the web. Note, if changes exist in Live that do not exist in your version, we will warn you that your version if out of sync with Live. To fix this, merge Live into your version. Learn more here.​Development Development is a 'core environment' for your Bubble app. This is where you make changes to your app, as well as preview those changes. You'll know you are in Development when previewing your app because you will see /version-test in your apps URL. Development is also the default 'version'LiveLive is a 'core environment' for you Bubble app. This read only version is what your app looks like on the web. As such, changes to your app cannot be made directly to Live (outside of a few settings and App Data), but instead by deploying changes from your Development environment to Live.Custom versionA custom version is a 'branch' or copy of your app. Versions allow you to make changes to an app in isolation from any other version of your app. When you are happy with the changes you have made in one version, you can merge this version into your Development version so that it can be Deployed to Live.Best PracticesGenerally speaking, we highly recommend keeping your Development version as a “Main” version of your app. Development should be the branch you merge other versions into, create other versions from, and (almost always) the only version that deploys to Live.If you want to create a new feature or a deploy a quick fix, we recommend the following approach:Create a new version named after the feature you are working on from Development. This is done by selecting Development in the version control dropdown and creating a new version.Work on that new version and, when ready, merge this version into DevelopmentReview your updated Development version to ensure that your changes were successfully added and that everything works as expectedVisit all pages and tabs that could have changed in your editor to make sure the proper updates have been made. Some elements or issues might take a little time to appear for large apps.If you notice that anything was not added after the merge, please reach out to support@bubble.io so we can investigate this situation as part of our ongoing work to improve the reliability of this featureDeploy your Development version to LiveDelete the feature version you used.For subsequent feature work, create new versions off of the updated Development versionIf you want to deploy a quick fix, but there is work in Development that is not yet ready to be deployed, we recommend the following approach:Create a new version named after the fix you are working on from Live. This is done by selecting Live in the version control dropdown and creating a new version.Work on that new version.When you are ready to deploy, re-visit any pages or tabs that may have changed to ensure all updates have been made.Deploy this working version to LiveConfirm that Live is behaving the way it should.Merge this version into Development so that the next time you deploy Development to Live, your Development version contains the bug fix.Delete the quick fix version you used.Every time a version is merged into Development, we recommend syncing all other active versions with Development. To do this, navigate to an active version and merge Development into your version. This will lessen the amount of potential conflicts when you merge your active branch into Development.We recommend using a version per feature rather than a version per developer because, in general, things get more complicated the longer different versions exist in parallel as more changes are made.For similar reasons, we recommend keeping the lifetime of versions (other than Development and Live) as short as possible.We also recommend that if you are working on a fix or feature in one version, that you do not edit any of the same items (elements, workflows, page, etc.) in another version. This will help to limit the number of conflicts that are raised when eventually merging the two versions.Note on databases of development versionsSummary: All development versions share a common "test" database, although data associated with custom types you've created remain associated with specific versions. This means that although records of "userA-type' will exist in the same database referenced by userB, they will not show up in userB's version until userB syncs.Detailed explanation: As noted above, every app has a live version and at least one development version. Records in the live database are independent of records in the development database. You can copy the live database to replace the development database or vice versa, but, for example, a user signing up in your live version will not automatically also create a record in your development version.But what happens with multiple development versions? A principle to keep in mind is that all your development versions share the same "test" database but data associated with custom types remain associated with specific versions. To explain this further, here are a few scenarios (assuming A and B are both development versions of an app):A is your main development branch and has a certain set of custom data types with different fields, and a number of records in it. When you create a new version, B, based off of A, B will also have those same custom data types, fields and recordsAfter creating B from A, if you add new records to B of an existing data type, those new records will show up to A as wellLet's assume that A has a custom data type "Employee" with a set of fields. B is created from A, so B also has the Employee data type. If you add the new field "Birthday" (type text) to Employee in A, it will not automatically show up in B.If you then add a new field "Birthday" (type text) to Employee in B, it will not refer to the same "Birthday" field from A, meaning that for the same record, A and B have their own independent "Birthday" fields that store data independentlyLet's assume that B has already been created from A. If you then add a new custom data type "Project" in A, it will not automatically show up in BHowever (and this is the tricky part!), if you created a new custom data type "Project" in B as well, it will refer to the same Project as A!User manual - PreviousMaintaining an ApplicationNextDatabase Copy & BackupsLast modified 9mo agoWas this page helpful?Copy linkOn this pageVersionsThe Version Control DropdownThe History PopupSyncing a Version with LiveVersion Control Best PracticesDefinitionsBest PracticesNote on databases of development versions

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Email - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookEmailNote: Due to rate limiting from Sendgrid on the default shared email address, a maximum of 50 recipients can be specified per email. If you need more than this limit for your app, consider creating your own Sendgrid account as outlined here.Send emailThis action sends an email from the app. If a domain name has not been setup yet, the email will come from [your-appname][email protected] When a domain name is set, the email will come from [email protected]_domain.com. Customize this email in the Domain & Email section in the Settings Tab.Note: A domain name must be set up before customizing email behavior. Custom domains are available on Personal plans or higher.ToSpecify the email to send the email to. It can either be 'Current user's email' or the content of an input. Send more than one email at once by defining a list of emails and using the 'join' property with a comma ','. For example, [email protected], [email protected]Specify a different reply-to addressCheck this box to specify a different reply-to address.Reply toEnter the reply-to address. For example, it can be 'Current user's email.'Sender nameInstead of showing the email address, format the name of the sender by entering the name here.CcDefine the email addresses to cc the email to.BccDefine the email addresses to bcc the email to.SubjectDefine the subject of the email.BodyDefine the body of the email. Use 'Insert dynamic data' to make the content dynamic.Do not apply a Sendgrid templateWhen using Sendgrid to send emails, you can define a template ID in the Domain & Email section in the Settings Tab. Check this box, and no template will be used for the current action.Note: This option is available when a domain name is set up in the Domain & Email section in the Settings Tab.AttachmentsYou can attach files to the emails you send, provided the total size is smaller than 19 MB.At this time, only files stored on your app's S3 file storage are supported as email attachments. File stored elsewhere, such as on Box, will not be available as an email attachment.Unsubscribe_group_idEnter the unsubscribe group ID here. It will add an unsubscribe link at the bottom of the email.Send meeting request by emailThis action sends a meeting request that is interpreted as such by Gmail, Outlook, iCal, etc.ToEnter the email to send the email to. It can either be 'Current user's email' or the content of an input, etc.Sender nameInstead of showing the email address, format the name of the sender by entering the name here.OrganizerEnter the email address of the organizer of the event (ORGANIZER property of the event in the iCalendar format)SequenceDefine the revision sequence number of the calendar component within a sequence of revisions (SEQUENCE property of the event in the iCalendar format).MethodDefine the iCalendar object method associated with the calendar object (METHOD property of the event in the iCalendar format).UIDDefine the UID of the meeting. This property specifies the persistent, globally unique identifier for the iCalendar object (UID property of the event in the iCalendar format).StatusDefine the overall status or confirmation for the calendar component (STATUS property of the event in the iCalendar format).Start timeDefine the starting time of the event/meeting. It should be of type date.Set a length instead of an end timeCheck this box to set a length instead of an ending time.End timeDefine the ending time of the event/meeting. It should be of type date.Length (minutes)Define the length in minutes of the meeting. It should be of type number.SummaryEnter a summary to be shown in the calendar.DescriptionEnter the description of the event.LocationEnter the location of the event. It should be of type text.Change the body of the emailCheck this box to customize the body of the email.BodyEnter the body of the email with the meeting as an attachment. This can be static text or dynamic data.Do not apply a Sendgrid templateWhen using Sendgrid to send emails, you can define a template ID in the Domain & Email section in the Settings Tab. Check this box, and no template will be used for the current action.Note: This option is available when a domain name is set up in the Domain & Email section in the Settings Tab.​PreviousData (Things)NextElementLast modified 1yr agoCopy linkOn this pageSend emailToSpecify a different reply-to addressReply toSender nameCcBccSubjectBodyDo not apply a Sendgrid templateAttachmentsUnsubscribe_group_idSend meeting request by emailToSender nameOrganizerSequenceMethodUIDStatusStart timeSet a length instead of an end timeEnd timeLength (minutes)SummaryDescriptionLocationChange the body of the emailBodyDo not apply a Sendgrid template








Comments & Notes - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookComments & NotesIt's a good habit, especially for larger apps with more than one developer, to add comments and notes to the elements, actions, types, etc.Add comments by clicking on the Comment icon, which appears in multiple places in the Bubble Editor, such as the Property Editor, Style Tab, etc. When you click the icon, type your comments in the panel that appears. Note: The icon changes from empty to full when comments are added.PreviousDeployment & Version Control DropdownNext - Core ReferenceElementsLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Privacy - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataData SourcesOperators & ComparisonsSearchPrivacyStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPrivacy​This is the short-form technical reference entry describing Privacy Rules. If you are looking for more in-depth and long-form articles on how it works, you may be interested in checking the Bubble manual Privacy Rule article.This section of the Data Tab provides security by allowing you to define rules to prevent users from seeing or modifying data they should not have access to. To do this, define rules for each of your custom types, if needed. When multiple rules apply, the user has access to an object if any one rule grants access to it.This is a very important feature for your app's data security! Without Privacy Rules on your data types, a savvy outsider can access all the data in your app, even if you don't design a page that shows that data. Setting up privacy rules is definitely an important best practice when Bubbling.Define a new ruleThis button creates a new rule for the selected type. Name the type with an explicit name and define conditions and permissions. The condition defines which users this rule applies to, while the permissions define what they can do with the data if they meet the conditions.NameName the rule. Modify the name in this input.DeleteClicking this icon deletes the rule. This action does not delete data. It only removes the rule for the selected type.When (condition)Define the conditions that check whether a given user is part of the rule or not. Create a dynamic expression with the Composer, building it piece by piece. For example, if you define the condition for the type 'Event' as 'This event's creator is current user,' then only the user who created the thing of type 'event' will be part of that rule.PermissionsThis defines what users in that current rule can do with the data.Find this in searchesUncheck this box to prevent users who are in this rule to see the search results for this type.View all fieldsCheck this box for these users to be able to see all the fields of a thing of the current type, provided they meet the conditions. If you uncheck this box, you will be able to select which fields are viewable by users in this rule.View attached filesIf this box is unchecked, users will not be able to see the uploaded files attached to a thing of this type. For example, let's say you set up a workflow where users can create an 'Apartment,' and that apartment has pictures. Set up the picture uploader in a way that links the picture to the actual apartment in the database. Then, if you uncheck this box and if the condition is 'This apartment's creator isn't current user,' other users will not be able to see that picture, even if an image displays it or if a user has a link to the image file.Allow auto-bindingBind the content of an input to a field of a thing. When the user modifies the content of the input, the thing gets updated automatically. See Enable auto-binding on parent element's thing for input elements. You need to enable users to modify fields through a permission. Use 'Allow auto-binding.' Check this box to allow users to do this if they meet a condition. Once checked, choose from the different fields that can be modified through auto-binding.Modify via APIWhen the Data API is enabled for this type, this permission grants the user the right to modify any of the fields of this thing. For the modification to be allowed, the rule that governs this permission must be true both before and after the modification. This lets you restrict which fields may be modified. If you need more granular field restrictions, instead of granting this permission, use the Workflow API, which lets you control exactly what gets changed.Delete via APIWhen the Data API is enabled for this type, this permission grants the user the right to delete this thing via the API.Create via APIWhen the Data API is enabled for this type, this permission grants the user the right to create new things via the API. If the rule that grants this permission references fields on the thing, attempts to create a thing where the rule does not apply will be rejected.Note: Modifying data in the middle of a workflowIf you have an element that displays data only to certain users, that data could be briefly displayed to a user that does not have permissions if this user triggers a workflow that you as a developer have defined to modify that piece of private data and if the modification does not need to come from the server or a remote source such as an external API.Fortunately, we have a feature for this use case. See Scheduled Workflows.​​​​​​​​​​​​​​​PreviousSearchNext - Core ReferenceStylesLast modified 6d agoCopy linkOn this pageDefine a new ruleNameDeleteWhen (condition)PermissionsFind this in searchesView all fieldsView attached filesAllow auto-bindingModify via APIDelete via APICreate via APINote: Modifying data in the middle of a workflow









General Events - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsGeneral EventsElement EventsCustom EventsRecurring EventTrigger EventActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGeneral EventsUser is logged inWatch this video to learn more about the User is Logged In EventThis event is triggered when the current user logs in. This can happen on page load, if the user was already logged in, or when the user successfully completes a 'Sign the user up' action.User is logged outWatch this video to learn more about the User is Logged Out EventThis event is triggered when the current user logs out. This can happen on page load, if the user was logged out, or when the user successfully completes a 'Log the user out' action. Often a change page action occurs after this event.Page is loadedOur Academy quick tip on how to create an event on page loadThis event is triggered when the page is loaded. Use this to check the type of user for instance. By adding a condition to an event, the user can be redirected to another page under certain circumstances. A typical case would be 'When the page is loaded' and 'Current user isn't logged in,' go to page 'index.'Do every X secondsWatch this video to learn more about the Do Every X Seconds EventThis event performs an action every X seconds. Bubble updates in real time, so this event will not be used often.IntervalEnter a number in seconds to define the interval.Note that running an operation at frequent intervals can quickly have a negative effect on your app's performance. It's best to use this feature with caution so that you don't overload the server or user's device. 

Be mindful of what kind of actions you are running, and don't repeat them more frequently than you need to.Do when condition is trueWatch this video to learn more about the Do When Condition Is True EventThis event is triggered as soon as its condition is true. If 'Run this' is set to 'Just once,' it will run once per page load, either immediately if the condition is true when the page loads or later when it becomes true. If 'Run this' is set to 'Every time,' the workflow is triggered every time the condition is true.Note that the Do When Condition is True event can lead to performance issues if it is triggered too frequently. It's best to use this feature with caution so that you don't overload the server or user's device. 

Be mindful of what kind condition you are placing on the event and what kind of actions are executed when the condition is true to maintain a stable level of capacity usage.Run thisChoose from 'Just once' and 'Every time' to specify whether the event will run once per page load or every time the condition becomes true.An unhandled error occursWatch this video to learn more about the Unhandled Error Occurs EventThis event is triggered if the user interacts with an element, like clicking a button, and there is an error handling for that interaction. This event is only triggered if no 'An element has an error running a workflow' event specific to the element runs. This will execute if the error happens anywhere on the page and happens for both expected errors, such as a failed login attempt, and unexpected errors, such as a bug with the Bubble platform.
 
If no error workflows are defined, the default is to display an alert with an error message. If at least one error workflow runs successfully, i.e., the condition passes and the workflow runs without an error, the error message will not be displayed, and the workflow notifies the user that an error occurred, if appropriate.
 
Use 'Current workflow error' to see the original error message. It has two properties, 'code' and 'message.' 'code' is a short phrase to use in conditions. 'message' is the error message that would display if there were no error workflows. Use 'message' to show the message in an Alert element, for example. Do not use 'message' in conditions since it is language-dependent and can change. 'code' will always be the same no matter what language the app displays. The codes and error messages are listed in the Languages section in the Settings Tab.
 
For error workflows meant to provide a nicer response to unexpected errors, we do not recommend reading data from the database or an external API because if the error is caused by a network or connectivity issue, the error workflow may also fail if it relies on data that cannot be loaded. If the error workflow fails, the user will see an error alert.Error sources to catchChoose from 'Any workflow error' and 'Element workflow errors only' to specify whether the event will be triggered by any workflow error (including Do When, When page is loaded, Scheduled events) or just on errors triggered by an element interaction workflow (When element is clicked, when input is changed).​​​​​​​​​​​​​​​Core Reference - PreviousEventsNextElement EventsLast modified 3mo agoCopy linkOn this pageUser is logged inUser is logged outPage is loadedDo every X secondsIntervalDo when condition is trueRun thisAn unhandled error occursError sources to catch








Bubble App Security Best Practices - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble App Security Best PracticesBubble offers you a lot of flexibility and power - with all the building blocks Bubble provides, you can build any idea you have! But, just like if you had your idea built in code, you have to think about data security and general security of your Bubble app. Luckily, Bubble has a variety of features to help you set up the security situation you desire.It is highly recommended that you think about security as you build your app but especially before you launch your app to actual users!!There are a variety of security tips throughout the Docs, but here is a compilation of top things to keep in mind:1.(Very important!) Privacy Rules help you specify what data a given user should be allowed to see - make sure to use them!2.Be careful with how you've set up your API Connector calls - for example, always make sure that credentials go in "private" fields, and be additionally cautious if you're choosing to make an API call from the client.3.When activating your app's Data or Workflow API, be careful with how an outsider authenticates to make a call, and for the Data API, make sure Privacy Rules are set up!4.Certain aspects of how the app is built are visible to technically savvy users, including: which apps exist in an app, what data types and fields exist in an app, any static content on a page even if it's in a hidden element, all option sets (including their options and attributes) in an app, etc.In case you'd like extra help with security best practices, there are third-party tools in the Bubble ecosystem that can assess an app for any known security weaknesses, e.g. nocode:nohack.User manual - PreviousOptimizing an ApplicationNextPerformance & ScalingLast modified 1yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Rich Text Editor - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookRich Text EditorThe Rich Text Editor Plugin creates an element that allows users to type a rich formatted text with colors, fonts, bullet points, link, etc. Use this if you want users to type a longer message.Rich Text InputInitial contentThis field defines what the input will contain before the user modifies it or right after the input or group that contains it is reset. For example, to allow users to modify their bio, the initial content will likely be 'Current user's bio.'Regular or Tooltip?Select 'Regular' if you want the standard rich text editor with a toolbar. 'Tooltip' will hide the toolbar and instead show a floating toolbar when text is highlighted text.Note: The floating toolbar may get cut off if its boundaries overflow the Rich Text Editor element. This issue is most commonly seen in the first row of a Repeating Group where each cell contains a Rich Text Editor element. Style complexitySelect Basic if you wish to hide the advanced editing icons.Extend to fitCheck this box if you want the height of your input to increase as your text gets longer.SetupOnce you add the Rich Text Input to a page, you can customize what content you would like it to display when the page is loaded and how many style options you would like to display. If we have a message board in our application, we might have a page to display a particular message or post. To start, we can have our Rich Text Editor display the current post's content.​​In runmode, the existing content will fill the input. The current user can then make any changes to this post using the style options available, and we can save the updates to our database with a separate workflow. ​​FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousreCAPTCHANextRich Text Editor (Legacy)Last modified 1yr agoCopy linkOn this pageRich Text InputInitial contentRegular or Tooltip?Style complexityExtend to fitSetupFAQ









Wistia - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookWistiaLet users login with their Wistia accounts and fetch a list of videos they've uploaded.Signup/login with a social networkThis workflow step allows you to integrate the Wistia authentication event when registering a new user or logging in an existing user.OAuth provider - WistiaAllows the Bubble editor to verify the correct social platform to login/signup the user.Current user’s Wistia MediaWhen adding dynamic data, this operator allows you to fetch and display content from a user’s connected Wistia account.Wistia media’s IDThe unique ID of a Wistia video.Wistia media’s nameThe title displayed on the Wistia video.Wistia media’s descriptionThe description field of a Wistia Video.Wistia media’s thumbnail URLThe image file destination URL storing the thumbnail image.Wistia media’s assetsThe file URL of the original asset used when uploaded to Wistia. SetupConfiguring your APIOnce you’ve installed the Wistia plugin, you’ll need to create an OAuth credential within your Wistia account. Under the advanced section of your settings page in your account, you’ll see an option called ‘API access’. By default, this API won’t include access to the Wistia OAuth service. In order to gain access to this service, you’ll be required to contact Wistia support and submit a request.Once you’ve been granted access to the OAuth API, you’ll see an ‘OAuth Applications’ menu under your settings page.

From here, you’ll need to create a new application, as well as add a relevant redirect URI.The URI value will be the link to the page in your application where a user will be redirected to once their Wistia account is validated.

Now, copy the Client ID and Client Secret keys into the relevant fields of your Wistia plugin settings.

For reference: 1.The Wistia Client ID field will be added into the Client ID field of the plugin.2.The Wistia Client Secret field will be added into the Client Secret field of the plugin.Logging a user in through WistiaAfter configuring your OAuth credentials, you can now use the ‘signup/login with social network’ step within a workflow. From the event dropdown menu, you’ll see an option to select the Wistia OAuth provider. This event can be added to an element like a login button.

After a user clicks this button, they’ll be redirected to a Wistia portal where they can verify their account, then be redirected back to the destination URI of your application.Now, you can choose to display videos from a user’s Wistia account. If you’d like to display a list of a user's videos within a repeating group, configure the type of content to be ‘Wistia Media’, then the data source the be the ‘current user’s Wistia Media’.

Within each repeating group cell, you can then display data about each video by selecting the ‘current cell’s Wistia Media’s’ operator.

FAQHow can I embed a Wistia video into my application?Using a HTML element, you can paste the embeddable code from Wistia to display a video.

PreviousTwitterNextYouTubeLast modified 1yr agoCopy linkOn this pageSignup/login with a social networkOAuth provider - WistiaCurrent user’s Wistia MediaWistia media’s IDWistia media’s nameWistia media’s descriptionWistia media’s thumbnail URLWistia media’s assetsSetupConfiguring your APILogging a user in through WistiaFAQHow can I embed a Wistia video into my application?









Authentication - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe API ConnectorAuthenticationAdding callsBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAuthenticationThe API Connector supports a range of different authentication methods.For a more in-depth look at the different API Connector authentication methods, you may be interested in the API Connector manual article:

Article: API Connector authentication methods​Authentication methodsThere are many different ways to authenticate. Most API providers will have documentation available online that specifies their authentication method and many require you to generate a unique API token.MethodDescriptionNone or self-handledNo authentication requiredPrivate key in URLThe private key is included as a parameter in the URLPrivate key in headerThe private key is included as an HTTP header in the requestHTTP Basic AuthThe username and password is sent in plain textOAuth2 Password FlowThe username and password is sent and receives an access token in returnOAuth2 User-Agent FlowSimilar to OAuth2 Password Flow, but for user-agentsOAuth2 Custom TokenThr custom token is sent to the server for verificationJSON Web Token (JWT)A JSON web tokenis sent to the server for verificationClient-side SSL certificateYour app presents a SSL certificate to the server for verificationPreviousThe API ConnectorNextAdding callsLast modified 1mo agoCopy link









Loading Data - Bubble Docs












Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookLoading DataWhen accessing properties of typeObjectorList of Objects, it's possible to request data that hasn't yet been sent over from the Bubble web server to the user's web browser. For instance, if you have a list property calledmy_list, and you callproperties.my_list.get(0, 99), it will often be the case that the first 100 entries in the list haven't been fetched from the server before.Experienced Javascript programmers will be familiar with loading data asynchronously via callback functions. Rather than take this approach, we try to handle data loading automatically behind the scenes. For the most part, you can write your code as if calls likeproperties.my_list.get(0, 99)return immediately, rather than asynchronously, even if behind the scenes we have to make a request to the server to fetch the answer.What follows is a brief explanation of how we implement this behind the scenes. For the most part, this won't make a practical difference to you, but there are certain situations where it could lead to you seeing unexpected results if you don't understand what's actually going on.When your code requests data that the web browser doesn't have, we do two things:1.We immediately kick off an asynchronous request to the web server to load the data.2.We throw a special error that terminates the execution of the function that you wrote, and informs the API that we are waiting on the data to continue. Once the data is loaded, we then restart the execution of your function. This time, when we reach the line that requests the data, it will be available, and function execution can continue.There are two practical consequences of this to you:1.Functions that you expect to run once, such as an execution of an action, can actually run multiple times, as we incrementally load the data that the function requests. Similarly, theupdatefunction for an element will be re-run not only when one of the properties for that element changes, but when any data you request finishes loading, or subsequently changes. 2.try...catchstatements that contain data load functions will catch the special errors we throw, which can cause this mechanism to fail to work properly. To avoid either of these issues from causing bugs in your code, we recommend three best practices.First, always load data at the beginning of your functions, prior to modifying any state external to the function. For instance, if you are writing an element that takes a list and renders it in the web browser, load the list items you are going to display, as well as any fields on those items, prior to modifying the DOM. We recommend this because if any of the data is not yet ready, your code won't start making changes until all the data is loaded. Conversely, if you write your function so that it loads the first few list items, displays them, then loads some more items, you might end up accidentally displaying the first few items multiple times.Second, avoid adding asynchronous functions in your functions. For instance, do not run code inside a callback such as$(document).ready(function() { doSomething();})as this will break the dependency detection.Third, either avoid wrapping code that calls data in atry...catch, or if you do need to wrap it, make sure you re-throw the special errors. You can detect these errors by checking the message property: it will be 'not ready'.For example:try { var myData = properties.my_list.get(0, 99); doSomethingWith(myData);} catch (err) { //Re-throw not-ready errors... if (err.message === 'not ready') { throw err; } //And handle other errors... myErorrHandlingLogic(err);}PreviousBuilding ActionsNextPublishing & VersioningLast modified 2yr agoCopy link









Fitbit - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookFitbitLet users log in with their Fitbit accounts, fetch their workout data, and update their subscription status.Signup/login with a social networkThis workflow action allows you to integrate the Fitbit authentication event when registering a new user, or logging in an existing user.OAuth providerAllows the Bubble editor to verify the correct social platform to login/signup the user.Invite Fitbit friend Send a friend request to another Fitbit user.InvitedUserEmailThe email address of a user’s Fitbit account that the current user would like to send an invite to.Accept Fitbit friend invitation Accept a friend request from another Fitbit user.FromUserIDWhen choosing to accept a friend request, this is the ID of a Fitbit user's account that will be added to the current user’s friend list.Add Fitbit subscriptionStart a Fitbit subscription.SubscriptionIDThe unique characters to reference a user's Fitbit subscription.Delete Fitbit subscription Remove a Fitbit subscription.CollectionPathCollection of data to retrieve notifications. If the collection is not provided, the list will include all subscriptions for the user.Current user’s Fitbit profileWhen adding dynamic data, this expression allows you to fetch and display the profile information from a user’s connected Fitbit account.IDThe unique ID of a user’s Fitbit account.AvatarThe profile photo from a user’s Fitbit account.FullNameThe full name from a user’s connected Fitbit account.NicknameThe alternative name added to a user’s connected Fitbit account.AboutMeThe profile description from a user’s connected Fitbit account.AgeThe age of a user saved within their Fitbit account.HeightThe height of a user saved within their Fitbit account.WeightThe weight of a user saved within their Fitbit account.DateOfBirthThe birth date of a user saved within their Fitbit account.MemberSinceThe date that a user initially created their Fitbit account.Current user’s Fitbit daily activitiesAllows you to fetch the user’s workout data from a specific date.ActivitiesA list of all the recorded activities from a user’s account.Goals_caloriesOutCalorie burn goal represents either dynamic daily target from the premium trainer plan or manual calorie burn goal. Goals_distanceThe target distance traveled within a user’s Fitbit account for a specified date.Goals_floorsThe target amount of floors climbed within a user’s Fitbit account for a specified date.Goals_stepsThe target number of steps within a user’s Fitbit account for a specified date.Current user’s Fitbit food logAllows you to fetch the user’s log food intake data from a specified date.FoodsThe recorded foods a user consumed on a specified date.Summary_caloriesA summary of the total calories consumed by a user on a specified date.Summary_carbsA summary of the total carbs consumed by a user on a specified date.Summary_fatA summary of the total fat consumed by a user on a specified date.Summary_fiberA summary of the total fiber consumed by a user on a specified date.Summary_proteinA summary of the total protein consumed by a user on a specified date.Summary_sodiumA summary of the total sodium consumed by a user on a specified date.Summary_waterA summary of the total water consumed by a user on a specified date.Current user’s Fitbit sleep logAllows you to fetch the user’s logged sleep data from a specific date.TotalMinutesAsleepA summary of the total minutes a user slept on a specified date.TotalSleepRecordsThe total number of sleep records stored within a user’s Fitbit account.TotalTimeInBedA summary of the total minutes a user spent in bed - both awake and asleep.Current user’s Fitbit heart rate logAllows you to fetch the user’s heart rate data logged from a specific date.CaloriesOutThe total number of calories a user burnt on a specified dateMaxThe max heart rate recorded on a specified date.MinThe minimum heart rate recorded on a specified date.MinutesThe duration of each session where a heart rate was elevated.NameThe name given to a workout session where the user’s heart rate was elevated.Current user’s Fitbit lifetime activitiesThe total activity statistics from a user’s Fitbit account. This is an overview of all their historical key data points, as well as achievement values.Lifetime_total_caloriesOutThe total number of calories a user has burnt since the creation of their account.Lifetime_total_distanceThe total distance traveled by a user since the creation of their account.Lifetime_total_floorsThe total number of floors a user has climbed since the creation of their account.Lifetime_total_activeScoreThe average active score given to a user’s account based on their lifetime activity.Current user’s Fitbit deviceThe Fitbit device model linked to the user’s account.IDThe device ID on a user’s linked Fitbit device.BatteryThe current battery level of a user’s linked Fitbit device.DeviceVersionThe device model of a user’s linked Fitbit device.TypeThe type of device linked to a user’s account e.g. fitness tracker, scales.LastSyncTimeThe last recorded time that a user’s device was synced to their account.Current user’s Fitbit friendsA list of all the friends connected to a user’s Fitbit account.IDThe unique ID of a friend’s Fitbit account.AvatarThe profile photo of a friend’s Fitbit account.FullNameThe full name listed on a friend’s Fitbit account.NicknameThe alternative name added to a friend’s Fitbit account.AboutMeThe profile description from a friend’s Fitbit account.AgeThe age saved on a friend’s Fitbit account.HeightThe height saved on a friend’s Fitbit account.WeightThe weight saved on a friend’s Fitbit account.DateOfBirthThe date of birth saved on a friend’s Fitbit account.MemberSinceThe date that a user’s friend registered initially created their Fitbit account.Current user’s Fitbit friends invitationsA list of the current friend requests to a user’s Fitbit account.DateTimeThe date and time that a friend request was sent.UserThe user who has sent the current user a Fitbit friend invite.Current user’s Fitbit subscriptionAllows you to fetch the user’s heart rate data logged from a specific date.CollectionTypeThe type of Fitbit subscription e.g. activities, body, sleep, etcOwnerIDThe ID of the user who owns the subscription.OwnerTypeThe type of entity who owns the current subscription e.g. userSubscriberIDThe ID of the subscriber that will receive the subscription notifications.SubscriptionIDThis is the unique ID of the subscription created by the API client application.SetupConfiguring your APIOnce you’ve installed the Fitbit plugin, you’ll need to first create a developer account to secure access to an OAuth key. After registering a developer account, you’ll then need to register a new app within the Fitbit developer portal.Once the details of your app have been added, you’ll be provided with a client ID and secret key for your OAuth 2.0 integration.

Now, you’ll need to copy both the client ID and client secret keys into their relevant fields within your plugin settings.Note: It’s also possible to enable a generic redirect URL within the Bubble plugin settings itself.Logging a user in through FitbitAfter configuring your OAuth credentials, you can now use the ‘signup/login with social network’ step within a workflow. From the event dropdown menu, you’ll see an option to select the Fitbit OAuth provider. This event can be added to an element like a login button.

After a user clicks this button, they’ll be redirected to a Fitbit portal where they can verify their account, then be redirected back to the destination URL of your application.Now, you can choose to display information from a user's Fitbit account by using the ‘current user’s Fitbit’ operator.

Accepting a friend invitationTo display a list of a user’s Fitbit friend invitations, start by adding a repeating group element to the page. The type of content for this repeating group will need to be configured as ‘Fitbit Friend Invitation’.

Now, you’ll also need to update the data source to display the ‘current user’s Fitbit friends invitations’.Now, within the repeating group cell, you can display information from a user’s Fitbit profile who has sent a friend invitation.From here, when the accept button is clicked, you can create a workflow and choose from the ‘accept Fitbit friend invitation’ event.

When configuring this workflow event, you’ll need to set the FromUserID to be the ‘current cell’s Fitbit friend’s invitation’s User ID’.Inviting a Fitbit friendIn order to allow the current user to send a Fitbit friend invitation, select the ‘invite Fitbit friend’ workflow event.

Within this workflow event, you’ll need to configure an email value associated with a user’s Fitbit account. This can be attained through an input form.

Adding a Fitbit subscriptionWhen adding a new Fitbit subscription, select the ‘add a Fitbit subscription’ event within your workflow editor.

When adding a new subscriber, you’ll need to associate a SubscriptionID to the current user. This unique ID will be shared with Fitbit. As Fitbit states within their API docs, this ID has a character limit of 50 characters.Within a Bubble input, it’s possible to use the formula operator to generate a random character string.

Now, when configuring your subscription workflow event, it’s possible to use the value of this input field as the SubscriptionID.

We’d also recommend storing this SubscriptionID as a field under your user data type. This will allow you to reference this unique ID if the user chooses to delete their subscription at a later date.

Deleting a Fitbit subscriptionWhen deleting a user’s Fitbit subscription, select from the ‘delete a Fitbit subscription’ workflow event.

When configuring this workflow step, you’ll need to provide the subscription type that the user will be canceling. Note: If the CollectionPath is not provided, subscriptions will be deleted from all collections.
Next, you’ll need to verify what subscription ID you’ll be deleting. If you’ve stored the current user’s subscription ID within your database, you can reference this here.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousFacebookNextFull CalendarLast modified 1yr agoCopy linkOn this pageSignup/login with a social networkOAuth providerInvite Fitbit friend InvitedUserEmailAccept Fitbit friend invitation FromUserIDAdd Fitbit subscriptionSubscriptionIDDelete Fitbit subscription CollectionPathCurrent user’s Fitbit profileIDAvatarFullNameNicknameAboutMeAgeHeightWeightDateOfBirthMemberSinceCurrent user’s Fitbit daily activitiesActivitiesGoals_caloriesOutGoals_distanceGoals_floorsGoals_stepsCurrent user’s Fitbit food logFoodsSummary_caloriesSummary_carbsSummary_fatSummary_fiberSummary_proteinSummary_sodiumSummary_waterCurrent user’s Fitbit sleep logTotalMinutesAsleepTotalSleepRecordsTotalTimeInBedCurrent user’s Fitbit heart rate logCaloriesOutMaxMinMinutesNameCurrent user’s Fitbit lifetime activitiesLifetime_total_caloriesOutLifetime_total_distanceLifetime_total_floorsLifetime_total_activeScoreCurrent user’s Fitbit deviceIDBatteryDeviceVersionTypeLastSyncTimeCurrent user’s Fitbit friendsIDAvatarFullNameNicknameAboutMeAgeHeightWeightDateOfBirthMemberSinceCurrent user’s Fitbit friends invitationsDateTimeUserCurrent user’s Fitbit subscriptionCollectionTypeOwnerIDOwnerTypeSubscriberIDSubscriptionIDSetupConfiguring your APILogging a user in through FitbitAccepting a friend invitationInviting a Fitbit friendAdding a Fitbit subscriptionDeleting a Fitbit subscriptionFAQ









Braintree - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBraintreeThe Braintree plugin charges credit cards and PayPal accounts. On mobile web, you can charge using Venmo, Apple Pay, Android, Pay, etc. You must create an account with Braintree before taking payments. Initially, start with an account in their Sandbox so that you can test, enter the keys in Development mode, and then when you're ready to go Live, you will copy the live keys. Non-sandbox keys are only applied in Live mode.Charge the current userThis action charges the current user and prompts them to enter their credit card or PayPal information. The response from Braintree, e.g., Charge ID, amount, etc., can be accessed in the subsequent actions as 'Result of previous step.' In a failed transaction, the workflow stops running.Payer emailThis is the email of the user who is going to be charged. Typically, it is 'Current user's email.'AmountThis is the amount to be charged. This can be dynamic by using the 'Insert dynamic data' button. The currency is defined in your account with Braintree and associated with the entered information in the Braintree section in the Plugins Tab.DescriptionThis is the description that will appear on the PayPal account of the user.Button captionEnter the caption of the button in the Credit Card/PayPal form.Authorize the charge onlyThis determines whether to immediately capture the charge. When checked, the charge issues an authorization and will need to be captured later. Uncaptured charges expire in 7 days. You can then capture the charge in your Stripe dashboard.Enable 3D secure checkCheck this box to activate an additional layer of protection by prompting the user to enter the password with their bank.Important: Test this functionality with Braintree Sandbox and then again in Live mode.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Subscribe the user to a planThis action subscribes a user to a plan, which has been previously defined in Braintree. Then, the card will be charged on a regular basis.Important: Since the app has two versions, Development and Live, you need to have both versions of your account in Braintree, Sandbox and Production, to have the same plans with the same IDs.Dynamically specify planBy default, the plan is selected from a dropdown menu. Check this box to make the plan dynamic.Plan nameOnce you enter keys in the Braintree section in the Plugins Tab, we fetch the plans you created with Stripe to populate this list. Select the plan to subscribe the user to.Important: Since the app has two versions, Development and Live, you need to have both versions of your account in Stripe to have the same plans with the same IDs.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.Cancel the current user's planThis action cancels a subscription with Braintree. The payment method will not be charged anymore.Do not show success messageBy default, Bubble displays an alert informing the user when the action is successful. Deactivate this behavior by deselecting this box if you want to display a custom message instead of the default Bubble message.SetupNote that anybody can sign up instantly for a sandbox Braintree account, which provides you access to their test environment so you can set up the integration. Applying for a production account is a separate flow that requires certain kinds of verification on the Braintree side.After you sign up for either kind of Braintree account, on the Home page you should see a section for "(Sandbox) Keys and Configuration", which shows the following:Merchant IDPublic KeyPrivate KeyCopy these into your Bubble app's Braintree plugin settings. As with other plugins, you can decide whether to use the same or different set of credentials for your app's development and live versions.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousBoxNextBubble App ConnectorLast modified 1yr agoCopy linkOn this pageCharge the current userPayer emailAmountDescriptionButton captionAuthorize the charge onlyEnable 3D secure checkDo not show success messageSubscribe the user to a planDynamically specify planPlan nameDo not show success messageCancel the current user's planDo not show success messageSetupFAQ








SEO - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBubble Release TiersThe Bubble engine is evolving all the time - on a typical workday, we'll have many code rollouts representing any combination of bug fixes, infrastructure improvements, new features, and more. Every app is on a particular "release tier", which corresponds to when it receives these code rollouts to the Bubble engine.Immediate release (default)By default, any such Bubble code rollout will get immediately applied to all Bubble apps - we call this "immediate release".Note that occasionally, a change in the Bubble platform will be labeled a breaking change from before, a situation which creates a new "Bubble engine version". This means that we are changing the behavior of an existing Bubble feature in a way that we think is an improvement (usually this is in the context of a bug fix), but because existing apps may be relying on the old behavior, we do not want to forcibly upgrade all apps to the new code.In these situations, apps can control when this new particular behavior is applied via Settings > Versions. This way, you can upgrade Bubble version on your development version when convenient for you and test out the impact of that change. When your app on the new Bubble version looks good to you, you can deploy to live just like any other change to your app. In other words, upgrading the Bubble version of your development version does not automatically upgrade the Bubble version of your live version - you must deploy.If an app is on an older Bubble version (i.e. any version that's not the latest one), it will still receive any code updates that are rolled out since the breaking change, just not the breaking change itself (or any future breaking changes).Scheduled releaseApps on the Professional plan and above can elect to receive Bubble engine updates a bit of time after they are rolled out. This setting is in Settings > Versions and is called "scheduled release". On scheduled release, the app will not get Bubble engine updates immediately. Rather, apps on scheduled release will all get Bubble updates once a day (in the morning ET, though the exact time each day may vary), only if the Bubble codebase has not changed for a certain number of hours. This once-a-day update will contain all the platform updates since the last scheduled release. Note that some days, this release may not happen at all.This feature can be useful for app creators that would rather not receive Bubble engine updates immediately because they want to reduce the risk of their app changing many times during a day.Caveats and notes:In the event a code change is deemed very important (e.g. an urgent bug fix), the Bubble team still has the ability and right to roll out that specific code change immediately at any time, even for apps on scheduled releaseCertain infrastructure rollouts occur outside of this release system, i.e. could get rolled out at any time.If your app was on scheduled release and you switch it to immediate release, it will immediately get up to the most recent code release and immediately get all releases after that.If your app was on immediate release and you switch it to scheduled release, the platform for your app will shift to the last release that all scheduled release apps received, meaning your app may move backwards to a slightly older version of the codebase.Please be cautious using very newly rolled out features if you intend to switch from scheduled to immediate release imminently.Dedicated releaseAll dedicated instances are on a different release tier called "dedicated release". In fact, dedicated instances have full control over when new Bubble code is applied to their instance. Dedicated users will see a special icon towards the upper right of their editor to manage the Bubble engine version their instance is running.Generally speaking, every morning there is a new dedicated release version available to choose, containing any Bubble engine updates from the day prior.Dedicated instances do not have to upgrade Bubble version at any time, though we highly recommend that such updates happen often, so that the dedicated instance can benefit from the latest bug fixes, new features, etc.PreviousSocial NetworksNextSEOLast modified 2yr agoWas this page helpful?Copy linkOn this pageImmediate release (default)Scheduled releaseDedicated release

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Versions - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookVersionsBubble release tierThe Bubble engine is evolving all the time - on a typical workday, we'll have many code rollouts representing any combination of bug fixes, infrastructure improvements, new features, and more. Every app is on a particular "release tier", which corresponds to when it receives these code rollouts to the Bubble engine.Immediate release (default)By default, any such Bubble code rollout will get immediately applied to all Bubble apps - we call this "immediate release".Note that occasionally, a change in the Bubble platform will be labeled a breaking change from before, a situation which creates a new "Bubble engine version". This means that we are changing the behavior of an existing Bubble feature in a way that we think is an improvement (usually this is in the context of a bug fix), but because existing apps may be relying on the old behavior, we do not want to forcibly upgrade all apps to the new code.In these situations, apps can control when this new particular behavior is applied via Settings > Versions. This way, you can upgrade Bubble version on your development version when convenient for you and test out the impact of that change. When your app on the new Bubble version looks good to you, you can deploy to live just like any other change to your app. In other words, upgrading the Bubble version of your development version does not automatically upgrade the Bubble version of your live version - you must deploy.If an app is on an older Bubble version (i.e. any version that's not the latest one), it will still receive any code updates that are rolled out since the breaking change, just not the breaking change itself (or any future breaking changes).Scheduled releaseApps on the Professional plan and above can elect to receive Bubble engine updates a bit of time after they are rolled out. This setting is in Settings > Versions and is called "scheduled release". On scheduled release, the app will not get Bubble engine updates immediately. Rather, apps on scheduled release will all get Bubble updates once a day (in the morning ET, though the exact time each day may vary), only if the Bubble codebase has not changed for a certain number of hours. This once-a-day update will contain all the platform updates since the last scheduled release. Note that some days, this release may not happen at all.This feature can be useful for app creators that would rather not receive Bubble engine updates immediately because they want to reduce the risk of their app changing many times during a day.Caveats and notes:In the event a code change is deemed very important (e.g. an urgent bug fix), the Bubble team still has the ability and right to roll out that specific code change immediately at any time, even for apps on scheduled releaseCertain infrastructure rollouts occur outside of this release system, i.e. could get rolled out at any time.If your app was on scheduled release and you switch it to immediate release, it will immediately get up to the most recent code release and immediately get all releases after that.If your app was on immediate release and you switch it to scheduled release, the platform for your app will shift to the last release that all scheduled release apps received, meaning your app may move backwards to a slightly older version of the codebase.Please be cautious using very newly rolled out features if you intend to switch from scheduled to immediate release imminently.Dedicated releaseAll dedicated instances are on a different release tier called "dedicated release". In fact, dedicated instances have full control over when new Bubble code is applied to their instance. Dedicated users will see a special icon towards the upper right of their editor to manage the Bubble engine version their instance is running.Generally speaking, every morning there is a new dedicated release version available to choose, containing any Bubble engine updates from the day prior.Dedicated instances do not have to upgrade Bubble version at any time, though we highly recommend that such updates happen often, so that the dedicated instance can benefit from the latest bug fixes, new features, etc.Available Bubble Engine versions and current versionMost Bubble platform updates are seamlessly rolled out to all Bubble apps, but occasionally there are platform updates that the Bubble team considers to be "breaking changes". These usually involve a change in existing functionality that users may have been relying on previously. A breaking change is not applied to apps automatically. Instead, app editors must elect to upgrade the Bubble engine version powering their app.When doing so, note that you first upgrade the Bubble engine version for your app's development version, which then must be deployed in order for this to apply to your live app. Thus, if you upgrade in your development version but change your mind, you have the opportunity to revert back in your development version - as long as you have not deployed to live yet, your live version will not have been impacted. However, you will not have the option to revert to a previous Bubble engine version forever, only for a very short time window after you upgrade.Experimental featuresIn this section, you can play with highly experimental features that Bubble's considering releasing. To enable any experimental feature, check the checkbox, and you can submit feedback to our Product team using the link in the last column.For certain experimental features, your app may be altered even after you turn off the feature. You can revert to the previous state of your app by using save points as we automatically create a save point whenever you toggle on such a feature (alternatively, you can manually adjust your app to its previous state). Note that the window for save points to which you can revert your app is limited to the window allotted by your plan. Since the save point is created after you turn on a feature, make sure to uncheck the checkbox once your app has been reverted.Warning: Please note that these experimental features are still under development. Therefore, we recommend that you start by testing these features in isolation before applying them to other parts of your app.
​​​​​​​​​​​​​PreviousSub appsNext - Account & MarketplaceAccount & BillingLast modified 10mo agoCopy linkOn this pageBubble release tierImmediate release (default)Scheduled releaseDedicated releaseAvailable Bubble Engine versions and current versionExperimental features









Data API requests - Bubble Docs














Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIThe Bubble APIThe Data APIAuthenticationData API endpointsData API requestsThe Workflow APIThe API ConnectorBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookData API requestsHelp us improve this articleThis article is part of a significant update to the Bubble manual and your feedback is critical to our efforts to continuously enhance our written documentation.

We would greatly appreciate if you could take a moment to let us know your thoughts on the quality of it. Thank you for your support!

Give feedback on this article​This is the short-form reference entry for the different request types of the Bubble Data API. Each request uses an HTTP method. To learn more about what an HTTP method is from a more technical perspective, check out our guide on How RESTful APIs work and HTTP methods specifically.

We also have an in-depth guide on the Data API and on the different Data API requests.gethttps://appname.bubbleapps.io/api/1.1/obj/typename/uidRetrieve record by IDYou can retrieve a thing by sending a GET request with the record’s Unique ID. Use the endpoint below, where the parts in bold are replaced with the relevant strings from your application:ParametersQuery*The unique ID of the recordResponses200: OKSuccess404: Not FoundRecord not foundYou can retrieve a thing by sending a GET request with the record’s Unique ID. Use the endpoint below, where the parts in bold are replaced with the relevant strings from your application:Errors and solutionsPossible solutions for error 404:Check that the data type is active in the Data API settingsIf this is the live version of your app, check that the settings have been deployedCheck that the full unique ID is included in the URLCheck that there is an existing record with that unique ID in your applicationCheck that you are using the URL of the right version of your application (such as version-test)patchhttps://appname.bubbleapps.io/api/1.1/obj/typename/UIDMake changes to a Thing by IDYou can make changes to a thing by sending a PATCH request with the record’s Unique ID.The body of the request should be a JSON object with a list of keys and values to modify. The keys should match the names of the keys returned via a GET request, and the values need to be correctly formatted.Privacy RulesFor this request to work, the Modify via API privacy settings must be active on the relevant data type. The privacy rule will be checked both before the modification to confirm that the user has permission to modify this thing, and after the modification to confirm that the modification was valid. We do not permit a user to modify a thing in a way that would take away that user's ability to perform further modifications.Errors and solutionsPossible solutions for error 400 (field(s) not found):Check that the field name is correct and correctly formatted​Check that there are no duplicate field name(s)Possible solutions for error 401 (not authorized):Check that you are including the right credentials in the authentication, such as the bearer token​Check that the Modify via API box is checked in the relevant Privacy Rules in your appPossible solutions for error 404 (record not found):Check that the Find this in searches box is checked in the relevant Privacy Rules in in your appCheck that the data type is active in the Data API settingsCheck that the Create via API box is checked in the relevant privacy rules in your appIf this is the live version of your app, check that the settings have been deployedCheck that the full unique ID is included in the URLCheck that there is an existing record with that unique ID in your applicationCheck that you are using the URL of the right version of your application (such as version-test)​puthttps://appname.bubbleapps.io/api/1.1/obj/typename/UIDReplace a Thing by IDYou can make changes to a thing by sending a PUT request with the record’s Unique ID.The body of the request should be a JSON object with a list of keys and values to modify. The keys should match the names of the keys returned via a GET request, and the values need to be correctly formatted.The PUT HTTP method will overwrite all editable fields on a record. Any field that is not given a new value will be left empty or reset to the default value they are given in the Data Type editor.

To make changes to selected fields without overwriting other fields, use the Make changes to a thing by ID request.
Non-editable fieldsThe following fields cannot be changed:Unique ID (not replaced)Created date (not replaced)Modified date (automatically updated)

Privacy RulesFor this request to work, the Modify via API setting in the Thing's Privacy Rule must be active. The privacy rule will be checked both before the modification to confirm that the user has permission to modify this thing, and after the modification to confirm that the modification was valid. We do not permit a user to modify a thing in a way that would take away that user's ability to perform further modifications.Errors and solutionsPossible solutions for error 400 (field not found):Check that there are no duplicate field name(s)Check that the field name is correct and correctly formattedPossible solutions for error 400 (field not found):Check that the data type is active in the Data API settings​If this is the live version of your app, check that the settings have been deployedCheck that the full unique ID is included in the URLCheck that there is an existing record with that unique ID in your applicationCheck that you are using the URL of the right version of your application (such as version-test)Check that the Create via API box is checked in the relevant Privacy Rules in your appPossible solutions for error 401 (not authorized):Check that you are including the right credentials in the authentication, such as the bearer token​Check that the Modify via API box is checked in the relevant Privacy Rules in your appdeletehttps://appname.bubbleapps.io/api/1.1/objtypename/UIDDelete a ThingPrivacy RulesFor this request to work, the Delete via API setting must be active on the relevant data type's  Privacy Rules.Errors and solutionsPossible solutions to error 404 (record not found):Check that the data type is active in the Data API settingsIf this is the live version of your app, check that the settings have been deployedCheck that the full unique ID is included in the URLCheck that there is an existing record with that unique ID in your applicationCheck that you are using the URL of the right version of your application (such as version-test)Check that the Delete via API box is checked in the relevant privacy rules in your appPossible solutions to error 401 (not authorized):Check that you are including the right credentials in the authentication, such as the bearer token​Check that the Delete via API box is checked in the relevant Privacy Rules in your appposthttps://appname.bubbleapps.io/api/1.1/obj/typenameCreate a ThingThe body of the request should be a JSON object containing the details you want to save on the new Thing. The keys should match the names of the keys returned via a GET request for that type of thing, and the values should be correctly formatted.Automatically created fields and default values:Bubble will automatically create the following fields and their value cannot be overridden: Unique IDCreated dateModified dateAll fields that have a default value set in the data type editor will be given that default value if another value is not provided in the request.Creating usersIf you are creating a new user, there are two built-in special fields that are not present on other data types:Email (required)Password (optional)This method creates a User in the database, but does not return any authentication token for that User. If you are looking to create or log in as a User in order to authenticate them as an API client, you may be interested in the article below:

Article: Authenticating as a User with the Bubble API​Privacy RulesFor this request to work, the Create via API privacy setting must be active on the relevant data type. The privacy rule will be checked on the new data for the thing, and the creation attempt will be rejected if Bubble does not find a matching privacy rule that allows the creation to happen.Errors and solutionsPossible solutions for error 401 (not authorized):Check that the Create via API box is checked in the relevant Privacy Rules in your appCheck that you are including the right credentials in the authentication, such as the bearer token​posthttps://appname.bubbleapps.io/api/1.1/obj/bulkBulk create ThingsYou can create a list of new things in a bulk operation by sending a POST request to the /typename/bulk endpoint. The body of the request should be formatted as a text document with one new object to create per line. The objects should be in JSON format without any newlines. The keys and values should be the same as when creating a single thing.The keys should match the names of the keys returned via a GET request for that type of thing, and the values should be correctly formatted.

LimitationsThe maximum number of items that can be created via a single bulk request is currently 1,000. There is also a limit of 4 minutes for the request to complete; if it takes longer than 4 minutes, items that have not yet been created will be marked as errors in the response.The creation speed and risk of timeout depends on the available capacity that your application has as well as the size of the items that you are creating.Caution: Bulk creation can consume a lot of application capacity, so we recommend that if your app is being used in production and capacity is limited, that you test bulk creation in smaller chunks and work your way up.

Privacy RulesUsing this endpoint requires the Create via API permission. The Privacy Rule will be checked on the new data for each new thing, and the creation attempt will be rejected if Bubble does not find a matching privacy rule that allows the creation to happen. If some things are rejected and some are accepted, the accepted items will be created.SuccessThe response body from this call is a text/plain document with one line per thing in the original request. Each line consists of a JSON object, with a 'status' field indicating whether or not the creation was successful. On success, the status will be 'success', and the object will contain an 'id' field with the id of the newly-created object.Errors and solutionsPossible solutions to error 400 (wrong content-type):Make sure that the Content-type in the Header is set to text/plain.Possible solutions to error 400 (Could not parse as JSON):
This error is returned on each row where the JSON could not be parsed.Make sure that the JSON is correctly formattedTo check the formatting of JSON you can use a tool like JSON checker

External link: https://jsonchecker.com/​
Server error or timeout errorUnder certain circumstances, like an overall system failure or the app being completely out of capacity, you may get a generic error response that does not have individual lines for each object.Possible solutions to server error or timeout error:If you get a generic error response, try the following:Check Bubble’s status page for any server downtimeCheck your application’s capacity chart to see if you may have spent all your capacityCheck the Bubble forum for any threads about similar problemsGet in touch with Bubble support​gethttps://appname.bubbleapps.io/api/1.1/obj/typenameGet a list of ThingsThe constraints parameter should be an array of constraints that include the parameters above.Add parameters directly in the URL as a query strings. It can be limit, cursor (Pagination), constraints (Search constraints), sort_field, and descending (Sorting options).Constraint examplesYou can narrow down the list returned by the Data API to match specific constraints, just like with Do a search for in Bubble. The constraints parameter should be an array of constraints that include the following:KeyValue examplekeyUnitname, unitnumberconstraint_typeequals, greater thanvalueUnit A, 3Constraint typesConstraint TypeDescriptionField Typesequals or not equalUse to test strict equalityAll field typesis_empty or is_not_emptyUse to test whether a thing's given field is empty or notAll field typestext contains or not text containsUse to test whether a text field contains a string. Text contains will not respect partial words that are not of the same stem.Text fields onlygreater than or less thanUse to compare a thing's field value relative to a given valueText, number, and date fieldsin or not inUse to test whether a thing's field is in a list or not for all field types.All field typescontains or not containsUse to test whether a list field contains an entry or not for list fields only.List fields onlyempty or not emptyUse to test whether a list field is empty or not for list fields only.List fields onlygeographic_searchUse to test if the current thing is within a radius from a central address. To use this, the value sent with the constraint must have an address and a range.See belowExampleIn this example, we will send a request to search for a unit by the name ‘Unit A’ using the following two constraints:KeyValuekeyunitname, unitnumberconstraint_typecontains, greater thanvalueUnit A, 3The URL below represents the URL before URL-encoding:GET https://securitybook.bubbleapps.io/version-test/api/1.1/obj/rentalunit?constraints=[ { "key": "unitname", "constraint_type": "equals", "value": "Unit A" } ,{ "key": "unitnumber", "constraint_type": "greater than", "value": "3" }]After applying URL encoding, the same URL should look like this:GET https://securitybook.bubbleapps.io/version-test/api/1.1/obj/rentalunit?constraints=[%20{%20%22key%22:%20%22unitname%22,%20%22constraint_type%22:%20%22equals%22,%20%22value%22:%20%22Unit%20A%22%20}%20,{%20%22key%22:%20%22unitnumber%22,%20%22constraint_type%22:%20%22greater%20than%22,%20%22value%22:%20%223%22%20}]​PaginationIn the response, Bubble will supply two values to aid in pagination:Cursor: the rank of the first item in the listCount: the number of items in the current responseRemaining: the number of records leftSortingBy default, GET requests are sorted by their creation date. The Bubble Data API supports the sort_field and descending parameter.Sort_field: the field you want to sort byDescending (true/false)To define more than one sorting field, add an array additional_sort_fields, which should contain objects of the similar type as above, i.e., with sort_field and descending.Errors and solutionsSuggested solutions to error 404 (incompatible constraint type)Check that the field type you are applying the constraint to and the constraint type are compatibleCheck that the constraint type is spelled correctlyLimitationsThere is a limit of 50,000 items in any GET request, meaning that if a database contains 100,000 items and the cursor is set at 50,001 no results will be returnedFor dedicated plans the limit is 10,000,000 itemsManual entriesYou may find these entries from our manual useful to get a deeper understanding of how the Bubble API works:What is a RESTful API?How to authenticateThe Data APIData API requests
PreviousData API endpointsNextThe Workflow APILast modified 13d agoCopy linkOn this pagegetRetrieve record by IDErrors and solutionspatchMake changes to a Thing by IDPrivacy RulesErrors and solutionsputReplace a Thing by ID
Non-editable fieldsPrivacy RulesErrors and solutionsdeleteDelete a ThingPrivacy RulesErrors and solutionspostCreate a ThingAutomatically created fields and default values:Creating usersPrivacy RulesErrors and solutionspostBulk create ThingsLimitationsPrivacy RulesSuccessErrors and solutionsgetGet a list of ThingsConstraint typesExamplePaginationSortingErrors and solutionsLimitationsManual entries









More features for your to-do app - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookMore features for your to-do appThe last lesson walks you through building your own basic to-do app. While there are tons of to-do apps out there that you can sign up for, it's fun and powerful to create your own in Bubble because you can customize it! You can build any number of features to fit any kind of to-do system you have. Building features like these will also get you more hands-on practice with Bubble.Here are some fun ideas for features to augment your to-do app, with a rough indication of difficulty in parentheses (on a scale of 1 = relatively easy, 5 = relatively hard). How many of these are you able to build?(Note: This list assumes your main data type is called "Todo" and has the fields "Title", "Due date" and "Finished", but of course you might've chosen different names during the tutorial)(1) The to-do list currently only shows tasks that aren't Finished; build another repeating group to show all Finished tasks for your future reference(1) For unfinished Todos with a Due date in the past, change the shown Due date to instead show "X days ago", in red font, to add urgency(1) Use auto-binding to provide the ability to edit a Todo's Title or Due date after you've created it(2) Add the ability to assign a Todo a priority score (e.g. on scale of 0, 1, 2 or 3)Show a Todo's priority in the main list of to-dosSort the Todo list so that within a given Due date, the highest priority items are at the top(2) Begin keeping track, as a new field of the Todo data type, of when a Todo is marked FinishedCreate a chart showing, for each day, how many Todos are created vs finished(2) Add the ability to write longer-form notes on a Todo(2) Add the ability to attach a file to a Todo(3) Let a user search for a specific Todo via a searchbox(3) Add web push notifications (via Bubble's OneSignal plugin) that will remind the user the day a Todo is due(4) Tags! Create a new data type for Tag, so that a user can...Create a new TagAdd any arbitrary tags to a Todo (to handle multiple Tags on a Todo, you'll want to mark this field as a "list" of Tags)See a list of existing Tags and filter the to-do list for specific Tags onlyDelete a Tag(4) Allow the user to create a recurring Todo, meaning...The user can choose to have the Todo happen every 1 day, 1 week, or 1 monthWhen the user completes a Todo that's recurring, create a new Todo at the given interval away from the original TodoLet the user customize how often it recurs(4) Projects! Let the user nest Todos inside a Project; this probably involves...Create a new data type for ProjectModify the Todo data type to keep track of the optional ProjectShow the Project of a Todo in the overall Todo list(Perhaps in another repeating group or other page) Show all Projects, with their Todos nested under themAdd other fields to Project that you think would be helpful (e.g. should Projects have their own Due dates?)(5) SaaS-ify! Turn your to-do app into a SaaS product that other users can use too, especially since Bubble apps come with a User data type; this could include...Creating a sign up / log in flow via a Header (hint: look at the "Header" reusable element that should exist by default in your app)Take everything that was created in the lesson and move it to a different, new page in the app, so that the "index" page can be your app's landing pageChange the actions and elements created in the lesson to account for the fact that a user should only be able to see Todos that they createdFor extra data security, create Privacy rules so that a user can only see Todos / data that they createdCreate a User account settings page; as a first feature, ask the User to supply their first name, so that you can show a message like "Bob's To-do list" on the main pageIf a user tries to visit the to-do list page without being logged in, redirect them to the index landing page, where you can pitch your to-do app to themMiscellaneous - PreviousThe ShowcaseNext - MiscellaneousThe GlossaryLast modified 2yr agoCopy link








Language & App Communications - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookVisual SettingsThe Settings tab also lets you define a few app-wide visual settings for your application.General AppearanceThe first section lets you customize visible properties that will be visible on all devices.FaviconThe favicon is the image that is displayed in browsers in the tab. You can upload an image. Note that it should be a square image for a better visual effect.Status Bar ColorWhen a workflow starts, or when a file is being uploaded, a visual indicator of progress is shown at the top of the screen. You can change the color in the Settings tab. You can also make it transparent if you decide not to show progress to your users. We do not recommend doing this - providing feedback to users is usually the best approach.Repeating Group Spinner ColorAs repeating groups can take some time to load the list they're displaying (for instance, if it's a search), Bubble shows a spinner to users to show progress during their wait. You can change the color of the spinner in the Settings tab (and here as well, make it transparent if you want to remove this effect).iOS AppearanceApple enables developers to customize how their website looks on iPhones and iPads. The Settings tab is where you can customize this behavior without having to handcode the meta tags.You can control the shortcut icon that would be used if a user creates an icon on the home screen, prevent users from zooming, etc.Related videos ​How to Create Your Own Color Palette​In this quick tip, we learn how to replace the default color palette colors with our own brand.PreviousPassword PolicyNextLanguage & App CommunicationsLast modified 1yr agoWas this page helpful?Copy linkOn this pageGeneral AppearanceFaviconStatus Bar ColorRepeating Group Spinner ColoriOS Appearance

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Olark Live Chat - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookOlark Live ChatOlark lets you chat with your users through a chatbox on your website in real-time. Olark also integrates with existing CRM tools.Adding your Olark site IDIntegrating your Olark account is as simple as adding your site ID within the settings of your plugin page (full setup instructions below).SetupAfter installing the plugin, you’ll need to create an account through Olark.Once you’ve created an Olark account, you can obtain your site ID by visiting the settings page, then opening the installation tab.

If you choose to embed the installation code on your site, the script will provide you with a 13 digit code next to the olark.identify field.Paste this site ID into the relevant field in your Bubble plugin settings.Now, the Olark chat widget will display across your application when previewing the development or live version.

FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)

PreviousMultiselect DropdownNextOneSignal Web NotificationsLast modified 1yr agoCopy linkOn this pageAdding your Olark site IDSetupFAQ









Data (Things) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookData (Things)This is the short-form technical reference entry describing how to work with data in Bubble actions. If you are looking for more in-depth and long-form articles on the subject, you may be interested in checking the Bubble Data manual.Create a new thing...This action creates a new entry in the application database, which we refer to as a Thing. For the "Type" in this action's property editor, select an existing data type from the dropdown or define a new one by selecting 'Create a new type…' in this menu. For example, you might select 'Event' from your list of data types. Once you do, and this action runs, a new 'Event' thing will be created into your application database.When you click "Set another field," you can either choose from an existing field on that data type or create a new one. For example, if we already created a field for "Event name" in our Data Types tab, we can select this option and set it equal to an input's value. If we want to create a new field for "Start time," we can do so by selecting "Create a New Field" directly from the bottom of this dropdown.Once you run this action, you can also see the matching changes in your Data tab, under Data Types and App Data.TypeChoose the type of thing to create. Define a new type by selecting 'Create a new type...' in this dropdown menu.Initial valuesClick 'Add another field' to add a new field and specify a different value for that field. Select the field to modify, the operation, and the new value.Make changes to thing...This action modifies an existing entry in the application database. For example, if a user updates their first name, use 'Make change action' to the 'Current user's first name.'Thing to changeSelect which thing to modify.Create if the thing doesn't existBy default, this action does nothing if the thing you are trying to change does not already exist. Click this box to change this behavior. In this case, the action will be equivalent to 'Create a new thing' and will use the changes as initial values.
 
Important: If the thing being changed, e.g., the 'Current user's thing,' does not exist, the thing will be created, but it will not be associated with the current user.
 
Warning: This option has been deprecated on Jul 18, 2017. Applications created after this date will not be able to access it (but it will still be applied in run mode). Instead, users can use a condition on the action and create the thing if it does not exist in an action prior to the Change Thing action. We recommend users using this option to follow the same pattern as they upgrade their apps.ChangesAdd the modifications to apply to the thing currently being modified. Select the field to modify, the operation, and the new value. In addition to a simple action that assigns a value, other options are available, depending on the field type. If it is a list, choose from:AddAdds an item to the existing list. The type of thing should be of the same type as the field. If the item is already in the list, it will not be added.RemoveRemove an item from the existing list. The type of thing should be of the same type as the field. If the item is not in the original list, nothing will happen.Set listReplace the current list with the new list. The value should be a list of things of the same type.Add listAdd all the entries of the list defined to the existing list. If some items are already in the list, they will not be added.Remove listRemoves all the entries of the list defined from the existing list. If some items are not in the list, they will not be removed.Clear listDeletes the content of the field and replaces it with an empty list.Make changes to a list of things...This action is equivalent to 'Make changes to a thing' but modifies more than one entry. Define a list of things to change, and each entry will be modified as described in the list of changes.Type of thingsSelect the type of thing to modify. This is needed to test the type consistency with the actual list.List to changeDefine the list to modify. It can either be the result of a search or the content of a field that is a list of things. If the type is inconsistent, the expression will be red, and the action will not complete.ChangesList the modifications to apply to the things currently being modified. Select the field to modify, the operation, and the new value.Delete thing...Deletes a thing from the database.To deleteSelect which thing to delete.Delete a list of things...This action is similar to 'Delete thing' but deletes more than one entry.Type of thingsSelect the type of thing to delete. This is needed to test the type consistency with the actual list.List to deleteDefine the list to delete. It can either be the result of a search or the content of a field that is a list of things. If the type is inconsistent, the expression will be red, and the action will not complete.Copy a list of things...This action duplicates a list of things.Important: For performance and security reasons, the number of things in the initial list is limited to 100 entries. If the length of the list exceeds this, the action will do nothing.Type of thingsSelect the type of thing to copy. This is needed to test the type consistency with the list.List to copyDefine the list to copy. It can either be the result of a search or the content of a field that is a list of things. If the type is inconsistent, the expression will be red, and the action will not complete.Set a Thing's slug... [Beta]This action modifies an existing thing's slug value.Thing to changeSelect the thing to modify.Slug [Beta]Specify the new slug value you want the thing to take.Download data as CSVThis action enables users to download data as CSV. Use this to build your own admin page. End users are prompted to choose a destination for the file. This feature is available to users with a paid Bubble plan.Type of dataChoose the type of data to export.Data sourceDefine the list to export. It can either be the result of a search or the content of a field which is a list of things. If the type is inconsistent, the expression will be red, and the action will not complete.File nameEnter a file name.Date formattingSelect the date style to use. Choose from Excel friendly, Full (with time zone), and Custom.Custom date formatEnter the custom date style to use.SeparatorSelect the separator to use in the CSV file.Include labels in first rowWhen this box is checked, the first row of the CSV file will include labels for the data.Use field captions instead of IDsBy default, field IDs, which cannot be changed, are used as the column headers. Change this by checking this box. In this case, the captions defined in the Data Types section in the Data Tab will be used instead.Note: 'Include labels in first row' must be selected to include the labels in the CSV file.Wrap values in double quotesWhen this box is checked, quotes are put around the data values.Hidden columnsSelect which fields should not be included in the CSV file.Upload data as CSVThis action enables users to upload a CSV file and convert the items to things in the application database. Each column should match a field of the selected type. The fields should be of type text, number, date, address, and yes/no. This feature is available to users with a paid Bubble plan.Important: This action is limited to uploading a number of items at a time, depending on your plan.Type of dataSelect the type of data to upload.CSV fileDefine the expression that points to the file to upload. Typically, it will use a file uploader element.SeparatorSelect the separator to use in the CSV file.Delete an uploaded fileThis action deletes an uploaded file in your application storage. Only files uploaded by your application will be deleted. If the file is not found, the action will not do anything. Note that similarly to deleting files from the application editor, deleting a file does not modify things that refer to this file to wipe the URL at the thing level. If you wish to do this, you should do this first in your workflow.Warning: Use this feature with caution as it permanently deletes your file. You will not be able to recover the deleted files.File URLURL of the file to delete. It should look like https://s3.amazonaws.com/appforest_uf//... or https://domain.com/fileupload/... for private files. Note that if the current user does not have permission to read the file, he will not be able to delete it.​​​​​​​​​​​​​​​PreviousAccountNextEmailLast modified 6d agoCopy linkOn this pageCreate a new thing...TypeInitial valuesMake changes to thing...Thing to changeCreate if the thing doesn't existChangesAddRemoveSet listAdd listRemove listClear listMake changes to a list of things...Type of thingsList to changeChangesDelete thing...To deleteDelete a list of things...Type of thingsList to deleteCopy a list of things...Type of thingsList to copySet a Thing's slug... [Beta]Thing to changeSlug [Beta]Download data as CSVType of dataData sourceFile nameDate formattingCustom date formatSeparatorInclude labels in first rowUse field captions instead of IDsWrap values in double quotesHidden columnsUpload data as CSVType of dataCSV fileSeparatorDelete an uploaded fileFile URL








Styling Properties - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGeneral Properties (Legacy)The properties here apply to all elements in Bubble.Changing the parent element's typeThis option modifies the type of content of the parent element on the fly. The type of content defines what type of thing a group should expect, so that you can refer to it when editing the app. For example, a group can receive a user, who isn't necessarily the current user, and then you can add a text element in the group to display the 'Parent group's user's email.'This element is visible on page loadCheck this box to make the element visible by default. This checkbox makes the element visible every time the page loads or reloads. Change the visibility of the element based on certain conditions in the Conditional section in the Property Editor or with a show/hide element action in a workflow.
 
To find hidden elements quickly, click the 'Only show hideable' checkbox in the Elements tree in the Palette. Clicking on the name shows or hides the element for editing purposes only. Like other properties, this setting can be overwritten by a condition on an element or by a show/hide action in a workflow. Actions take precedence over conditions which take precedence over the default setting.Note that savvy end-users can 'see' (through technical means) the static content of any page they visit, even if the elements are hidden to that end-user and never revealed. This means you should not include any sensitive static content in hidden elements on the page - content like sensitive URLs or private tokens.Replace elementClick this button to replace an element with an element of a different type. For example, change an element from a checkbox to a toggle or from a group to a popup.
Note: This operation may lead to inconsistencies, so check the Issues Checker to make sure no new issues are introduced. Undo this change, if necessary.StyleSelect a style from this dropdown menu to apply to the selected element. Styles are defined in the Styles Tab and can be applied to more than one element. When a style is modified, all elements with that style will automatically change. Using styles makes editing the app faster and ensures a consistent design.Detach styleClicking this button detaches the style from the selected element. The style association is detached, but the properties of the style remain on the element. The style is not changed or deleted, only detached from the specific element.Edit styleClicking this button displays the Styles Tab and selects the current element's style.Select parentChoose an element from this dropdown menu to contain the selected element. This is convenient when an element is contained by a group with the same dimensions.Reveal in Elements TreeClicking this button shows where the element is in the Elements tree in the Palette.Lock this element (not draggable in editor)When this box is checked, the element will not be draggable in the Bubble Editor. This is useful when working on large pages. This has no impact in run mode.ID Attribute (advanced)If you activate the option Expose the option to add an ID attribute to HTML elements in the Settings Tab, you can specific a unique ID for some element on the page. This ID will be applied in run mode to the outer div around the element. This is an advanced feature.
Warning: Bubble does not guarantee that the internal structure of the divs will remain the same over time. What is guaranteed here is the ID will be applied to the outer element. Keep this mind as you use IDs.PreviousGeneral PropertiesNextStyling PropertiesLast modified 2d agoWas this page helpful?Copy linkOn this pageChanging the parent element's typeThis element is visible on page loadReplace elementStyleDetach styleEdit styleSelect parentReveal in Elements TreeLock this element (not draggable in editor)ID Attribute (advanced)

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Account Management - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingAccount ManagementPlans & BillingBuilding Apps for OthersSelling on the MarketplaceDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAccount ManagementModifying your credentialsYou can modify your email and password in the Account Page. For security reasons, you'll need to enter your existing password to modify either your email or change your password.If you used Google Authentication and if you want to modify the email you're using to login, you should set up a password first. When signing up with Google, no password is created, but if you reset the password (in the Log in popup), you'll be able to define a password. This password will be the one you will need to enter when updating your credentials.If you need to unauthorize your Google account, you need to do this in the Google App Dashboard. Revoking access to Google is not something that is done on the Bubble side.Deleting an accountYou can delete your account in the Account page. Note that when you delete your account, we delete your personal data (email, Bubble usage, etc.), but we do not delete the apps you have created and their database. If you need to delete them as well you should delete the apps first.Account & Marketplace - PreviousAccount & BillingNextPlans & BillingLast modified 2yr agoCopy linkOn this pageModifying your credentialsDeleting an account








Limitations & Known Issues - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookNotes on QueriesThis page will note any special points around how database queries work. These go into some of the technical details of how databases work, but can help you debug situations where a query in your app doesn't work as expected.Stop WordsThere are certain special words known as "stop words" - these tend to be short, common words which the database will ignore when you query for them, except in the context of phrases. Some examples are "the", "I", or "do".In practice, this means that if you have a query for one of these stop words or a query involving some stop words, the results may not be fully what you expect.​Here's a list of stop words affecting Bubble app queries.Stemming"Stemming" is when databases will generalize a search query to look for other words of the same stem. For example, "test" and "testing" have the same stem, so results with the word "testing" will be found when searching for "test".Stemming matches words with semantically similar meanings, so "temp" and "temps" will match, but "temp" and "tempo" will not because they are not different tenses of the same word; similarly, "test" and "intestine" will not match.(We use PostgreSQL with Snowball)Bubble Query OptimizationWhen querying the database, we try to apply an optimization on mapping operations, which makes them faster. Consider the following two Searches that both return the same list of comma separated numbers:Search A -> "MyTypesList's count"Search B -> "MyTypesList's: item 0's count, MyTypesList's: item 1's count, MyTypesList's: item 2's count, MyTypesList's: item 3's count, MyTypesList's: item 4's count, MyTypesList's: item 5's count, MyTypesList's: item 6's count"Search A under the hood is a mapped operation and turned into a single database query at its core, which is quite performant. Search B, on the other hand, generates 7 distinct database queries that run one after another and combined after the fact. This leads to a significant performance hit and should be avoided whenever possible.PreviousCapacity UsageNextLimitations & Known IssuesLast modified 1yr agoWas this page helpful?Copy linkOn this pageStop WordsStemmingBubble Query Optimization

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Customizing an Application - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCustomizing an ApplicationApplication settings are controlled in the Settings tab, and help you customize app-wide settings, from domain to visual aspects, etc. All application settings are version-dependent, except domain settings. In this guide, you will learn about the main settings you can apply to your app.Private & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub Apps​PreviousLimitations & Known IssuesNextPrivate & Public AppsLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Collaboration - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsBubble app namesMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCollaborationBubble lets you have more than one user modify an app. Multiple users can modify an app at the same time. Note that it is required to be on higher plans to invite other users to modify your application.Our Academy quick tip on how to add collaboratorsThe rights of application editorsThe owner of an application is the one paying for it, while only an admin user of an application can grant and revoke editing rights. You can pick the different permissions that can be applied to a user. These permissions are:View - Edit the application. By default, anyone having access to the application will be able to see it.View - Edit the application's database. Viewing means the user can query the database in the App Data view, editing means the user can create, modify and delete things, and run bulk operations.View & Query logs. This lets the user look at server logs and scheduled workflows.Multi-user editingIf more than one user modifies an app at the same time, you will see the mouse of the other users, which helps prevent two users from modifying the same elements at the same time.PreviousCommentingNext - Core ReferenceBubble's InterfaceLast modified 1yr agoWas this page helpful?Copy linkOn this pageThe rights of application editorsMulti-user editing

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




Styles tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookStyles tabThe Styles Tab manages collections of visual and layout properties that are shared across elements in the app. Styles make it easy to maintain and modify a consistent visual identity. Rather than setting the font, background, and border for each element, define a style and apply it to all the elements of a given type. Bubble includes some built-in themes as well to help your get started. Use these to completely restyle the app. In addition to the default theme, we integrate with some popular themes from across the web, such as Bootstrap and Material Design.Bubble also includes pre-defined font and color variables in the Style variables sub tab to help make designing your application even faster. When the value of a Style variable is updated, any instance that uses the color variable will receive the new value automatically.For more information to get started, see the Design article series.PreviousData tabNextStyles tab (Legacy)Last modified 2d agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





API - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAPIPublic API endpointsEnable Workflow API and backend workflowsCheck this box if you want the app to expose an API that you or other developers/services can access to run API workflows. In addition to API workflows (which can be used for scheduled workflows), there are two other types of backend workflows: recurring events and database change trigger events.Enable Data APICheck this box if you want the app to expose an API that you or other developers/services can access to read or write the app data directly. When checked, select which types to expose as an API in the options that display.Use field display instead of ID for key namesGET API calls or Return Data actions can either return data with the keys being a fixed ID or use the display defined for the field in the Data Types section in the Data Tab. Choose this setting here.Hide Swagger API documentation accessCheck this box if you want the app to hide the automatically generated Swagger API documentation that you or other developers/services can access. See the Swagger Specification section for more details.WarningHiding this may break some Bubble App Connector features.3rd Party OAuth / SAML AccessIf the app exposes an OAuth2 protocol, meaning users can log in to other websites using their credentials with the app, you must define the page they get redirected to once they authenticate. Select the page here.Discourse SSOFor apps on the Professional plan and above, the Bubble app can be used as a single sign-on (SSO) provider for a Discourse forum. For more information and set-up instructions on the Discourse side, please see this article.Discourse base URLThis is the URL for your Discourse forum, where you want your app's end-users to be able to log into with their app username and password.Discourse SSO secretThis is a token generated from Discourse.Suppress welcome message flagIf this checkbox is not checked, any user logging in via your app into your Discourse forum will receive Discourse's welcome email.Require activation flagChecking this setting will have Discourse send email verification emails to any user who creates an account via SSO. This is generally recommended by Discourse.Default avatar when creating the accountIf this is set, all new users created via SSO in your Discourse forum will have this image as their initial avatar.AdvancedDownload public JSON web keyCertain custom integrations with other web services will require the "public JSON web key" of your Bubble app. This is where you can download it.​​​​​​​​​​​​​​​PreviousSEO / metatagsNextCollaborationLast modified 1yr agoCopy linkOn this pagePublic API endpointsEnable Workflow API and backend workflowsEnable Data APIUse field display instead of ID for key namesHide Swagger API documentation access3rd Party OAuth / SAML AccessDiscourse SSODiscourse base URLDiscourse SSO secretSuppress welcome message flagRequire activation flagDefault avatar when creating the accountAdvancedDownload public JSON web key








General Properties - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookElementsElements are things you draw on pages. They display images, text, and other information and enable users to interact with the app. Elements have properties that are controlled in the Property Editor in the Bubble Editor. Elements are classified into three categories: 1.Visual elements: Used to display information and trigger workflows when users interact with them, usually through a click.2.Containers: Elements that contain other elements.3.Inputs: Elements that users use to enter information.Elements are either part of Bubble's core library or added with plugins.This section covers all of the elements in the core library, respective parameters, and shared properties.General PropertiesConditional FormattingStatesPage ElementVisual ElementsContainersInput FormsReusable ElementsPreviousComments & NotesNextGeneral PropertiesLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Pexels - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPexelsSearch and discover free, hi-res photos & videos that you can use within your application.External sources: Search for free imagesWhen using an image element, this function allows you to source and display images from Pexel’s free library.Get data from external APIWhen configuring a data source, this call allows you to dynamically request multiple images from the Pexels library. You’ll have the flexibility to define the search source from a specific keyword, or even your own favorited Pexel images.SetupAfter installing the Pexels plugin, you’ll be required to add your own API keys to begin sourcing content. You can request your own API key on the Pexels developer portal here.After generating your API key, copy the value into both the “API key” & “API key - dev field” of your Bubble plugin.

Searching for static imagesAfter configuring your API keys, you can now start searching for Pexel images. When using a single image element, select the ‘search for free images’ option next to the external sources data field.Form here, type in the keyword you’d like to search for, then select a static image from the library to display.

Searching for dynamic imagesWhen choosing to dynamically display images, select the type of content to be ‘Pexel images’, then configure your data source to ‘get data from an external API’.Now, you’ll have the option to select from the entire Pexels library, or your own favorited Pexels images.

If you’re searching through Pexels full library, you’ll need to include a search keyword.This keyword can also be pulled dynamically through things like input forms, data fields, or URL parameters.

In order to display these images within a repeating group, simply add an image element, then select the data source to be the current cells Pexels image’s, URL.

Note: This same process can be used on single image elements. As you’re only displaying one image, you’ll need to use an item operator to identify what specific image you’d like to display.FAQCan I display videos from the Pexels library? You can display videos through an API call to Pexels rather than through the plugin. Our forum is a great resource for how other builders have accomplished this in the past.


PreviousOneSignal Web NotificationsNextProgress BarLast modified 1yr agoCopy linkOn this pageExternal sources: Search for free imagesGet data from external APISetupSearching for static imagesSearching for dynamic imagesFAQCan I display videos from the Pexels library? 









Data Sources - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataData SourcesOperators & ComparisonsSearchPrivacyStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookData SourcesData sources are where you get your data from when building a dynamic expression. It is going to be the first section of the expression. Sources of data can be the current user, a search from the database, data from an external API, some page and browser information, etc.Current userThis represents the current user using the app. The user can either be logged in, in which case you have access to their email, etc., or logged out. If the user is logged out, you can still modify the user object, but once the user closes their browser, you will not be able to access the user's information.Signed up usersIf a user has signed up to Bubble (with an email and a password), a permanent entry is created in the database using this email and password. When a user opens your app in a new browser (without cookies) and enters his credentials through a login workflow, he will be logged in. The value of 'Current user is logged in' will return yes. If you modify the current user, this will be saved permanently on the database object, and if the user logs in on another device, he/she will have the changes applied to his account there as well.One important consequence of this is that all users that can be found through searches in the database will be marked as 'logged in' on the server, as they are permanent accounts.Temporary usersAs soon as a Bubble app is opened in a browser, a user session is created. If a user already logged in and hasn't cleared the cookies, the session will be using the same user as before, but in the case of a fresh session (without a logged in user), a temporary user will be created. This user will be marked as 'not logged in' (in other words, 'Current user isn't logged in' will return yes.The temporary user behaves like a signed up user, in the sense that you can modify it, and it will be saved to the application database. If a user comes back using the same browser and hasn't cleared the cookies, any value that you have used to modify a field on the user will be the same. Bubble automatically clears temporary user data though. After three days, such a user will be deleted, and when a user opens a session in the same browser, a new temporary user will be created, for three days.When a user first visits an application, he will be seen as a temporary user. If he goes through a sign up workflow, the current, temporary user will become a signed up user and will be saved permanently in the database. This has some important consequences in terms of workflow design. Imagine you have a workflow that asks a user for his/her age before he/she signs up and saves it to the 'Current user'. If the user effectively signs up within three days, the permanent user that will be created then will have the same 'age'.Do a search forOur Academy quick tip on how to do a search for your data sourceUse this to search for entries in the application database. Define what type of things to look for, which will either be User or a custom data type defined by you, and also specify a sorting order and constraints. The constraints can be on any field, such as name contains 'peter,' address is within 1 mile from the 'User's current position,' etc.Please note that database queries (ie. “Do a search for”) are bound to a 5 second limit, so anything that takes longer than this to execute will trigger a timeout and subsequent error. For example, some “heavy” queries might look like:Searches on data types with over several hundred entriesSearches on data types with custom fields containing several hundred entriesSearches involving multiple :filters, :sorts, advanced filters, and/or complex search constraintsTo prevent against this, we recommend following the best practices outlined here for building more efficient queries: General principles & tips about performance.Perform a search using AlgoliaUse this to search entries in your Algolia indices. Define the type you want to search across and what field to query, as well as the query itselfGet an optionGet either a specific option from any option set, or a list of all options from that set.Arbitrary textUse this to manually enter a static or dynamic string of text. The text entered will resolve to type Text and can be further modified with any of our text type operators. Arbitrary date/timeUse this to manually enter a date/time. Most human-readable formats can be parsed.Get data from an external APIThis option fetches data from the outside world through one of Bubble's Plugins. For example, Google Places returns a list of places based on an address and a term, i.e., what you're looking for. Usually, an API call will require parameters. Define what they should be in the Slidable Palette. These parameters can be dynamic, using 'Insert dynamic data.' The type of data this source returns depends on the plugin. It can be a list of places to display on a map or in a repeating group, a single entry to display in a group or text, etc.Parent group's thing / Current cell's thingThis is a way to refer to the 'Parent element's value.' For example, when using a repeating group that displays a list of users, each cell will have a different user in it. The 'Current cell's user' will represent that user. The type is the type of content of the container. Current cell's indexThis allows access to the number of the current cell in a repeating group. The first cell will be 1, the second will be 2, etc. This is useful to display a rank or change the formatting of some elements based on the number.Current page thingIf you have set up a page to have a type of content, this source is a way to refer to it. For example, when building a rental marketplace, you will likely have a page with the details of each apartment. This page will have a type of content 'Apartment,' and then a link will open that page sending a given 'Apartment' to it. Refer to the 'Current page's apartment' with this option. Then, you will have access to all the data that the apartment has, such as picture, address, etc.ElementThis source is a way to refer to an element and access its states, like hovered, value, etc. For example, this is how to get an input's value.This elementThis source is a shortcut to find the current element being editing. You then have access to its states.Result of previous stepThis is a way to refer to the result of a previous step/action in a workflow. For example, when using a 'Create a new thing' action to create an 'Apartment,' the subsequent actions will be able to refer to the result of step one and use the new 'Apartment.'Current Workflow thingWhen using custom workflows, you may want a workflow to modify an object you sent to it. The Current Workflow thing is this object. Its type will be the type of the custom workflow being used.Thing NowThing Now represents the new state of the data after a data change, used in the context of a data change trigger workflow. It's up to date with the latest state of the thing and can change over the course of the workflow.Thing Before ChangeWhen the data changes, you may want to access the old state of the data throughout your data change trigger workflow. Thing Before Change is the data from before the data change.Get data from page URLThis source is a way to capture the value of a parameter in the URL of the current page or path. For example, the current page's URL is 'yourdomain.com/yourpage?age=23.' Set the source to get the 'age' parameter, and in Live mode, that will return 23. When specifying a parameter, it is case sensitive. We recommend using all lowercase and avoiding special characters, spaces, etc. If you select path, you can retrieve 'hello' in the URL 'yourdomain.com/yourpage/hello.' Choose the type of data that this parameter should have, and then use this data as such in the Bubble Editor. If you choose a type of data that is a custom type or the type User, the value of the parameter in the URL should be the thing ID, not its slug. Caution: This is an advanced feature.Note: Because URLs only allow some characters, special characters are encoded with a percent symbol preceding an identifier for that character. For example,  spaces may become "%20" in the browser. When using the Get data from page URL operator to extract a parameter with a space in it, we will return the parameter as it appears in the URL, not as it is normally written . For example, we we wanted to extract the value of "param" from the following URL:website.com/mypage?param=my%20parameter => my%20parameterHowever, when using the Get data from page URL operator to extract the path, we will return the path parsed as it is normally written, not as it appears in the browser. For example, if we wanted to extract the path from the following URL:http://website.com/mypage/this%20path => this pathCurrent option/thingSome elements allow access to the current option. For example, when using a dropdown element with dynamic options, e.g., users, you want to define how to name the different options. Choose 'Current option's email' to have the dropdown menu show a list of the users' emails.API workflow parametersThese are the different parameters the API workflow has access to. When working on an API workflow, define parameters at the Event level with a value. Choose the relevant entry in the top section of the dropdown menu to access the value of the parameter.Calculate formulaThis source calculates more sophisticated numerical calculations, like loan interests, etc. Reach out to us if you need more options.Page dataThis source allows access to the page information.Website home URLThis returns the home of the app. If the user is on https://yourdomain.com/a_page, it will return https://yourdomain.com.This URLThis returns the exact URL of the current page. Tip: If you use this as a data source on your live app, use this on yourdomain.com rather than yourdomain.com/version-live/ to prevent /version-live/ from being included in this link.Current languageThis returns the current language the app is using. This can be controlled in a few ways, by order of priority:
– lang parameter: Set &lang=english, for instance, as a querystring in the URL.
– A field on the current user: If you set a field in the Languages section in the Settings Tab and modify this field for the current user, this value will be the current language.
– The app's primary language: Defined in the Languages section in the Settings Tab.
 
In each case, if the value returned is not one of the available options as shown in the dropdown menu in the Languages section in the Settings Tab, the next option will be used.Current page nameThis returns the current page name. Use it in reusable elements, so that the element can have knowledge of the page it is used in.Website admin emailThis returns the admin email of the app. Without a paid Bubble plan or domain, the email will be [your-appname][email protected] With a paid Bubble plan and domain, the email will be what is set in the Domain & Email section in the Settings Tab. Use this instead of hardcoding the email because it can change over time, such as signing up for a paid Bubble plan.Current date/timeThis returns the current time on the user's computer. The type is date.Current geographic positionThis returns the current geographic position of the user, provided it is shared. The browser will prompt the user to do so. The type is geographic address.Tip: If you use "Current geographic position" in a workflow, the user will need to accept geolocation in order for that workflow to run successfully. Current page widthThis returns the page width in pixels. This is useful when building responsive pages.Current page scrolling positionThis returns the number of pixels between the top and current page scroll position.Page loaded above foldThis returns no/false initially, and then true when every element is visible above the fold, i.e., visible given the height of the user's web browser and has finished loading any data needed to display it. Use this to selectively cover things up until the entire page is ready to be displayed to avoid ugly loading artifacts.Note: If an element starts as invisible while this is false, it will not start loading until this becomes true. So, to hide a slow-loading element, cover it up with something else, such as a Shape element.Page loaded (entire)This returns no/false initially, and then true when every element is visible on the page and has finished loading any data needed to display it. Use this to selectively cover things up until the entire page is ready to be displayed to avoid ugly loading artifacts.Note: If an element starts as invisible while this is false, it will not start loading until this becomes true. So, to hide a slow-loading element, cover it up with something else, such as a Shape element.Isn't live versionThis returns yes/true when the app is in Development mode.App versionThis returns the current app version name, "live," "test," or a user-created version.Application TextWhen handling more than one language for the app, define Text IDs and use them in the Bubble Editor. Then, set the language in the Languages section in the Settings Tab. For example, when adding a new button, in the dropdown menu to define the text, select 'Insert dynamic data' and then 'App text (?).'Incompatible type for inputsIf an input doesn't have the right type of data, you will not be able to choose it in the dropdown menu. For example, when you want to do a search on the creator of the thing you're searching and want the creator to equal the value of a dropdown menu that lists users. If you haven't set the type of the dropdown element to user properly, you will not be able to select it. The way to select it is to change the type of element at the Dropdown element level.​​​​​​​​​​​​​​​Core Reference - PreviousDataNextOperators & ComparisonsLast modified 8mo agoCopy linkOn this pageCurrent userSigned up usersTemporary usersDo a search forPerform a search using AlgoliaGet an optionArbitrary textArbitrary date/timeGet data from an external APIParent group's thing / Current cell's thingCurrent cell's indexCurrent page thingElementThis elementResult of previous stepCurrent Workflow thingThing NowThing Before ChangeGet data from page URLCurrent option/thingAPI workflow parametersCalculate formulaPage dataWebsite home URLThis URLCurrent languageCurrent page nameWebsite admin emailCurrent date/timeCurrent geographic positionCurrent page widthCurrent page scrolling positionPage loaded above foldPage loaded (entire)Isn't live versionApp versionApplication TextIncompatible type for inputs









Tinder-like Element - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookTinder-like ElementThis plugin enables you to add a stack of pictures to your application, which your users can swipe through to like or dislike. Tinder PileThis element shows a Tinder-like pile of pictures to users, and they will be able to swipe right or left. Run workflows when the users swipe in either direction.Type of contentDefine which type of thing the pile should use as the source of pictures.Data sourceSpecify the list of things that will contain the pictures to display. It can be, for instance, 'User's profile pictures.'Image fieldSelect the field that contains the image for each thing. This can be 'Profile pictures,' for instance, and should be of type image.Show card titleWhen checked, each picture will have a title defined in the Picture caption field.Picture captionEnter the expression for the caption of each picture. For example, it could be 'Current card's first name Current card's last name.'Card background colorSelect the background color to be applied behind the pictures.Border widthEnter the border width in pixels to apply to each picture.Title colorSelect the title's font color.Image when likedDefine the image to show on top of the picture when the user likes the picture, e.g., swipes right.Image when dislikedDefine the image to show on top of the picture when the user did not like the picture, e.g., swipes left.A Tinder Pile's card is swiped leftThis event is triggered when the user swipes left on a tinder pile. Refer to the current image just swiped using the expression 'This TinderPile's current slide.'A Tinder Pile's card is swiped rightThis event is triggered when the user swipes right on a tinder pile. Refer to the current image just swiped using the expression 'This TinderPile's current slide.'Swipe a Tinder Pile leftThis action forces a swipe left of a tinder pile.Swipe a Tinder Pile rightThis action forces a swipe right of a tinder pile.Setup You can customize your Tinder pile to choose which images you want to display, your caption, and the images your users see when they like or dislike an image. In this case, we are searching for our "Examples" data type and using the "Name" as a caption. We have uploaded our images for "Yes" and "No," respectively. ​​Once we preview the page, we will see the first of our images on the top of the pile. Note that the grey shadow will get bolder automatically based on the number of images in the pile. In our case, we only have 3 images in our pile, so the shadow is light. FAQTip: If the data source of a tinder pile changes, it will cause the data in the pile to refresh (just like a repeating group updating its contents).Android (Chrome)The Tinder Pile element simply loads all elements at once. This can cause the element to glitch or crash when there are a lot of images used and the page is opened on an Android mobile device using the Chrome browser due to heavy GPU usage. Consider using a different plugin or fewer images in the mean time if the Tinder Pile element is accessible via mobile web.PreviousStripeNextTwilio Video ChatLast modified 1yr agoCopy linkOn this pageTinder PileType of contentData sourceImage fieldShow card titlePicture captionCard background colorBorder widthTitle colorImage when likedImage when dislikedA Tinder Pile's card is swiped leftA Tinder Pile's card is swiped rightSwipe a Tinder Pile leftSwipe a Tinder Pile rightSetup FAQAndroid (Chrome)









Twilio Video Chat - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookTwilio Video ChatThis video chat plugin enables you to add highly-customizable video chat windows to your app, and it’s white-labeled. The video chat plugin allows you to draw a video chat window in the design tab and control your chat room through workflow actions. You can start, join, leave, and end rooms, as well as provide the capability to hide/show video, mute/unmute your microphone, or share/stop sharing your screen.Note: On Safari mobile, Twilio Plugin video chats do not work properly due to some quirks of the browser that are difficult to workaround. When a call is initiated, the users on the call are only able to hear and see themselves, yet Twilio recognizes this call as a successful call. Video chat Draw a video chat window in the Design tab from your selection of “Visual elements.” Show previewCheck this box to let the user see what their video looks like prior to joining a room.  Start a roomCreate a video chat for others to join.Element Select the Video chat element where you want to display your users’ videos for this room. Room name Choose a title for your room.Participant identifier A unique field for the user who is starting the room. For example, this might be a username.# of participants You can choose from three room sizes: One-on-one, small group, or group. One-on-one calls are encrypted, allowing for heightened security; these chats cannot be recorded. Small group rooms can hold up to four participants and are less expensive to run than regular group rooms. Group rooms can hold up to 50 people, allowing you to host larger chats, conferences, or presentations.End a room for allClose a room so that no others can join or continue the chat.Room nameTitle of the room to end.Join a roomAdd a user to an existing room.Element Select the Video chat element where you want to display your user’s videos for this room. Room nameTitle of the room to join.Participant identifier A unique field for the user who is joining the room. For example, this might be a username.Leave a roomRemove a particular user from a room. Other users can still join the room or continue the conversation.Element Select the Video chat element where the room you want to leave is currently displayed.Room nameTitle of the room to leave.Mute microphone Turn off this user’s sound. Other users in the room will not hear them.Element Select the Video chat element for the user’s current room.Room nameTitle of the user’s current room.Unmute microphoneTurn on this user’s sound. Other users in the room will hear them.Element Select the Video chat element for the user’s current room.Room nameTitle of the user’s current room.Show video Turn on this user’s camera, so that their video is visible to others in the room.Element Select the Video chat element for the user’s current room.Room nameTitle of the user’s current room.Hide video Turn off this user’s camera, so that their video isn’t visible to others in the room.Element Select the Video chat element for the user’s current room.Room nameTitle of the user’s current room.Share your screenShow the contents of a user’s screen to members of the room. Element Select the Video chat element for the user’s current room.Room nameTitle of the user’s current room.Stop sharing your screenStop showing the content of a user’s screen to members of the room.Element Select the Video chat element for the user’s current room.Room nameTitle of the user’s current room.Retrieve a composition For small group and group rooms, you have the option to record the call. Twilio “recordings” are not viewer-friendly files. In order to turn a recording into a viewer-friendly MP4 file, you must generate what Twilio calls a “composition.” Luckily, you can do so easily with the “Retrieve Composition” action, which will generate and retrieve a link to a viewer-friendly MP4 file which you can save to a Bubble Thing or view in the Compositions tab of your Twilio console.Room nameTitle of the recorded room.SetupTo get started, install the video chat plugin in your Plugins tab. Then, navigate to https://www.twilio.com/ 182 and sign up for a Twilio account. This is the account you will use to pay for and manage your video chat functionality.Once you have signed up for an account, you’ll need to fill out the required information for the plugin in the Settings panel.You can find the necessary information in your Twilio account console. Your Account SID and Auth Token can be found on the main page of your project dashboard, seen below:You will then need to generate a new API Key to fill out the “API Key: SID” and “API Key: Secret” fields in the plugin panel. In order to generate an API Key, go to the Settings tab in the Twilio console, then to the API Keys section.Create a new API Key, giving it whatever name suits you, and copy the SID and Secret to the plugin settings in your Bubble editor.After that, you’re all set! You can explore the plugin functionality and add video chat to your app right away. If you want to check on your chat rooms, recordings, compositions, or usage, you can do so in the Twilio console under the “Programmable Video” section.FAQWhat if I want to match users to rooms based on shared criteria? Because you can enter a dynamic value for the “Room name” when your users join a room, it may be possible to do a search for rooms that match fields on the User type to pair people of similar interests. For example, you might do a search for rooms where “Primary interest = Current user’s primary interest” and join the first or last item. 


PreviousTinder-like ElementNextTwitterLast modified 1yr agoCopy linkOn this pageVideo chat Show previewStart a roomElement Room name Participant identifier # of participants End a room for allRoom nameJoin a roomElement Room nameParticipant identifier Leave a roomElement Room nameMute microphone Element Room nameUnmute microphoneElement Room nameShow video Element Room nameHide video Element Room nameShare your screenElement Room nameStop sharing your screenElement Room nameRetrieve a composition Room nameSetupFAQWhat if I want to match users to rooms based on shared criteria? 









Rich Text Editor (Legacy) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookRich Text Editor (Legacy)Legacy plugin for rich text input elements. See the updated plugin's reference.​Rich Text InputInitial contentThis field defines what the input will contain before the user modifies it or right after the input or group that contains it is reset. For example, to allow users to modify their bio, the initial content will likely be 'Current user's bio.'Hide advanced editing featuresCheck this box to hide the advanced editing icons.Show table controls in the icon barThis checkbox allows you to enable/disable table controls in the Bubble Editor.SetupThis plugin can be installed for free from the plugins gallery, and does not require additional setup.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousRich Text EditorNextScreenshotlayerLast modified 1yr agoCopy linkOn this pageRich Text InputInitial contentHide advanced editing featuresShow table controls in the icon barSetupFAQ








Conditional Formatting - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookResponsive Properties (Legacy)Enable responsive page rendering engineThe page can either use the responsive rendering engine or a traditional fixed-width, centered layout. Control this at the page level. Check this box if you want the page to be responsive.Make this element fixed-widthCheck this box if you want the element to remain a fixed dimension when the page is resized. This is equivalent to having a fixed-width page if it is applied to the page element.Minimum width (% of current width)When the page narrows, the rendering engine narrows the elements accordingly. To set a minimum width, define it here. It should be lower than 100%.Apply a max width when the page is stretchedIf you want to limit an element's maximum size when the page is stretched, check this box.Maximum width (% of current width)When the page widens, the rendering engine widens the elements accordingly. To set a maximum width, define it here. It should be higher than 100%.Note: Images cropped to fit current cell width in a Repeating Group that is set to expand past 100% of current width may appear squished on first page load. Collapse margins when container width ≤If the element's container's width, in many cases the page, is squeezed below this number, the left and right margins will collapse, and this element becomes flush against the edges of the page. This is useful on mobile devices when a full-width image looks better.When you have a left-aligned fixed margin, that margin will be preserved even when the container width shrinks and the right margin collapses. The same behavior is true of a right-aligned margin, only vice versa. The center-aligned margins will both collapse. Tip: This setting is not currently available for elements within a repeating group.Fixed marginChoose whether the element preserves the left or right margin when the user resizes the window or accesses the app from a phone. If center is selected, then both margins will stretch or shrink, keeping the element centered relative to its neighbors.
Note: This applies to the first element in the given box, not the selected element.Wrap to previous line if the page is stretchedCheck this box if you want the elements on a given line to be moved up to the previous line when the page is stretched.
Note: This applies to the first element in the given box, not the selected element.Keep element proportionsCheck this box if you want the height to change according to the width, keeping proportions. This is especially useful for maps and images.Add hiding ruleClick this box to enter a threshold to determine when to hide an element. Select either > or <= and enter a number. If the screen crosses this threshold, the element will be hidden.Debug modeWhen this mode is activated, the different boxes and lines on the page are shown. Elements are in boxes, and boxes are gathered by lines. This helps to understand the responsive behavior of the page.Paused rendering modeWhen this mode is activated, the responsive engine will not react when you modify elements' responsive properties, which can help with complex pages. Un-checking the setting will trigger a new rendering.​​​​​​​​​​​​​​​PreviousResponsive PropertiesNextConditional FormattingLast modified 8mo agoWas this page helpful?Copy linkOn this pageEnable responsive page rendering engineMake this element fixed-widthMinimum width (% of current width)Apply a max width when the page is stretchedMaximum width (% of current width)Collapse margins when container width ≤Fixed marginWrap to previous line if the page is stretchedKeep element proportionsAdd hiding ruleDebug modePaused rendering mode

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Circle Music Player - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCircle Music PlayerThis element adds a Play icon that you can use to play and pause an audio file within your application.Music PlayerThe Music Player Plugin adds an element that displays a circle music player on the page that plays MP3 files.Song fileEnter the link to the file to play. It can be dynamic by using the Composer.Starts at (seconds)Enter a number to start the music after X seconds.Ends at (seconds)Enter a number to end the music after X seconds.Prevent the user from using the round seekbarWhen checked, users will not be able to go directly to a certain time in the music.Autoplay when a new song is setCheck this box to play as soon as a new song is sent to it.​SetupOnce you add a Music Player element to the page, you can either upload an audio file or dynamically include a link. For example, if you have a "Song" page where you play a song that the user has selected, you might chose to play the current page's song's audio file.​Then when you preview the page, you can play or pause the current page's song, as well as select a point along the player's seekbar to cut to that section of the song.​​For more details on how to use the Circle Music Player in the context of a music application, check out our tutorial on how to build a Spotify clone. ​FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousChart.jsNextDisqusLast modified 1yr agoCopy linkOn this pageMusic PlayerSong fileStarts at (seconds)Ends at (seconds)Prevent the user from using the round seekbarAutoplay when a new song is setSetupFAQ









Recurring Event - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsGeneral EventsElement EventsCustom EventsRecurring EventTrigger EventActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookRecurring EventRecurring eventThis event is defined in the API section of the app and runs recurring actions on a thing.Event nameEnter the name of the workflow.Type of thingA recurring event requires a thing to run. Define the type here.Ignore privacy rules when running the workflowA recurring workflow is run with the current user in context. All privacy rules apply accordingly. Sometimes you want the workflow to bypass these rules and be run as an admin user who has all rights on the data, even when run without authentication. Check this box to bypass the privacy rules set in the Privacy section in the Data Tab.Warning: Because these are security and privacy options, use this feature with caution.Note: In very rare circumstances, it's possible for a recurring event to get in a bad infinite loop rescheduling itself. If this happens, you can pause the Scheduler, bulk delete all the extraneous scheduled tasks, unpause the Scheduler, and try again.​​​​​​​​​​​​​​​PreviousCustom EventsNextTrigger EventLast modified 1yr agoCopy linkOn this pageRecurring eventEvent nameType of thingIgnore privacy rules when running the workflow









SQL Database Connector - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSQL Database ConnectorThe SQL Database Connector Plugin connects to databases and runs SQL queries from within Bubble. These queries can be triggered as actions, datasources (they show up as External APIs) or both. Bubble supports connecting to PostGres, MySQL and Microsoft SQL.SetupA connection should look like:mysql://username:[email protected]:PORT/db_nameIf there are special characters in the password, they must be URL-encoded, for instance replacing # with %23. The rest of the encodings are listed here.Tip: Some special characters are not supported by the default mySQL integration, which uses UTF8 encoding. You can add ?charset=UTF8MB4_GENERAL_CI to resolve this and appropriately send characters such as emojis to your SQL database.If the connection needs to be encrypted, e.g., with Microsoft Azure, you will need to add a parameter to it. The parameter depends on the type of SQL database you are connecting to:mysql => ?ssl={}postgres => ?ssl=truemssql => ?encrypt=trueOnce a connection string is created, you can create queries that use it.Any SQL statement is allowed, but for SELECT statements, you must add LIMIT N at the end, where N <= 100. Once you test and save the query, you can use it as an action, data source, or both, depending on how you configured it. Please note that a SELECT query returns a list, so when using it as the result of a previous step in a workflow, you must select a specific element by using :first item, :last item, etc.Sending options as URL parametersThese libraries come with different options and the SQL Database Connector Plugin supports passing these options through as URL parameters. In other words all the options in the documentation for these libraries can be inserted in the URL as query string parameters.You will find the documentation for the different libraries and their options here:mssql -> https://github.com/tediousjs/tedious
mysql -> https://github.com/sidorares/node-mysql2/tree/master/documentation
postgres -> https://github.com/brianc/node-postgres/​For example, we can go from:protocol://user:[email protected]:port/database?param1=value1&param2=value2 ... to{    user, password, host, port, database, ...param1, param2}FAQWill the plugin use the default port based on the URL scheme? All fields are required in the connect string, including port number. For mysql, that's typically 3306, for Postgres, that's 5432.​PreviousSlick SlideshowNextStar RatingLast modified 3mo agoCopy linkOn this pageSetupSending options as URL parametersFAQWill the plugin use the default port based on the URL scheme? 









Languages - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookLanguagesGeneral settingApplication primary languageThis is the primary language for the app. All messages that the app can send or display to users, such as 'This account doesn't exist.' will be translated. Customize these messages in the Languages section in the Settings Tab. Elements that are language-sensitive, such as a calendar element, will adjust automatically.Language field on the user typeTo set a language for a given user, select the field that should contain that information. It should be a field of type text or an option set and should contain a string that matches one of the languages in the dropdown menu (as shown between the parentheses). If this is not the case or no field is set, the user's language will be the language contained in the 'lang' parameter of the URL. If this is not set, the app's primary language will be used. After changing this, users should refresh the page for the latest language texts to be included.Attribute for language fieldIf the field on the user type is an option set, this dropdown can be used to select the attribute on the option set to use for the user's language. The attribute should be of type text.Application texts & messagesExport / Import translation configuration to CSVTo make handling bulk translations easier, you can export all app text translations in one or multiple languages to a CSV or import from a CSV. We recommend exporting as CSV to get the required format of the CSV for the import.In the exported CSV, the first column is named "plugin_name" - "CORE" refers to any app texts that come by default with every Bubble app, "USER TEXTS" refers to any app texts that you have created for this app, and other values correspond to plugins that have been installed in the app. The column "TEXT CODE" refers to the unique identifier of each app text. Any languages you've chosen to export or import will show up in separate columns, with the language code as the column header.Tip: If you export your app texts then want to import them into Excel or Google Sheets, import your CSV into the program rather than opening it. Then when you export your edits as a CSV, they will be the expected format to reimport to Bubble. Currently editing messages and texts forThis dropdown controls which language's app text translations show below. You can only edit one language's app texts at a time here; for bulk editing of multiple languages at once, use the export / import feature described above.List of all application texts and messagesThe remainder of the sub-tab lists out all the app texts: snippets of text that show up to the end-user and which can individually be translated to different languages to help localize your app. For each app text, you will generally see where the text comes from: "CORE" refers to app texts that come with Bubble apps by default, or this might be the name of a plugin. Next to that is generally a description of what the text is. The input field contains the actual end-user-facing snippet of text that would display if the user is viewing your app in that language.Known IssueWhen displaying right-to-left (RTL) text and using certain operators or transformations on that text, the text will revert to showing up left-to-right. We advise you to check your pages in runmode if you are focused on the RTL use case.​​​​​​​​​​​​​​​PreviousDomain / emailNextSEO / metatagsLast modified 1yr agoCopy linkOn this pageGeneral settingApplication primary languageLanguage field on the user typeAttribute for language fieldApplication texts & messagesExport / Import translation configuration to CSVCurrently editing messages and texts forList of all application texts and messages









Events - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsGeneral EventsElement EventsCustom EventsRecurring EventTrigger EventActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookEventsEvents trigger workflows. Events are classified into three categories:1.General: Such as 'User is logged in' or 'Do when condition is true'2.Elements: Such as 'An element is clicked' or 'An input's value is changed'3.Custom: Create a custom, reusable eventThis section covers all of the events in Bubble's core library and their respective parameters.General EventsElement EventsCustom EventsRecurring EventTrigger EventCore Reference - PreviousWorkflowsNextGeneral EventsLast modified 2yr agoCopy link









Input Forms - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookInput FormsGeneral input optionsThese are the options that all input elements share.Enable auto-binding on parent element's thingAuto-binding modifies a thing automatically as the user modifies the input, without using a workflow. Check this box to enable this functionality. For this to work, the input needs to be in a group or page that has a type of content defined. The thing of the parent group or page will be the thing that is modified. Also, the correct permission for this type must be set in the Privacy section in the Data Tab. Field to modifySelect the field the input should modify. It must be of a compatible type with the input.Show an alert on successCheck this box to show an alert after the auto-binding operation successfully completes.Alert to showSelect the alert to display.Alert messageDefine the message to be shown in the alert or use the text defined at the alert level.This input should not be emptyCheck this box if the input should not be empty when a workflow using its content is run. In other words, Bubble prevents workflows from running until these inputs are filled. Use this to make sure all necessary information has been entered by the user before a workflow is run. When an input is empty and shouldn't be, it is marked as invalid by Bubble.This input is disabledCheck this box to prevent users from interacting with the input element. In this case, the content of the input will be accessible on a read-only basis.InputWatch this video to learn more about the Input ElementThis element enables users to type text on one line. It's useful for typing in an email or password.Note: The 'undo' ctrl+z command has been disabled for Inputs due to a bug in the library we use for input formatting. PlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.Initial contentThis field defines the input before the user modifies it or when reset. For example, when a user modifies their email, the initial content will likely be 'Current user's email.'Content formatSelect a type from this dropdown menu to define the input type. This is important for two reasons:
– To make sure that what is entered is valid and prevents workflows from running if the content isn't valid. In this case, the input is set to an 'Isn't valid state.' This detects, for instance, when an email address follows the pattern '[email protected]'
– It sometimes controls what characters can be typed and what characters are added automatically, in order to visually assist users for dates, passwords, etc.
 
Choose from:
– Text: A plain sequence of characters or numbers.
– Email: An email address.
– Password: A sequence of characters that are hidden as the user types.
– Integer: A number without decimals.
– Decimal: A number with decimals.
– Address: A geographic address. With this option, the input automatically validates the address with Google Maps.
– US Phone: A phone number following the format (xxx) yyy-zzzz.
– Percentage: A number represented as 12.35% equaling 0.1235.
– Currency: A number with a currency symbol as a prefix.
– Date: A date following the format mm/dd/yyyy.
– Euro date: A date following the European standard dd.mm.yyyy.
– Text (numbers only): A sequence of numbers, like a reference number, that isn't interpreted as a numerical quantity.Tip: Because of the predictive text functionality on Android devices, some content formats involving masks have a slightly different UX. This is for: US Phone, Percentage, Currency, Date, Euro date, and Text (numbers only). On these devices, the input allows users to type anything and validates the content against the mask only after the user stops typing. The end result is the same.Currency SymbolWhen the type of content is Currency, choose the currency symbol to use as a prefix from this dropdown menu. If a prefix is missing you can type your own in the box.Always show decimalsWith Currency selected, check this box to always show two decimal places.Show thousands separatorFor integer or decimal inputs, automatically inserts the thousands separator as the user typesDecimal placeSet this to always show a specific number of digits after the decimal point. Extra digits will be filled with 0. Any value will be rounded to the appropriate decimal place before displaying in the input. Leave blank to have no rounding, and no restriction on the number of digits.Limit the number of charactersCheck this box to prevent users from entering long entries.Time zone selectionWhen the type of content is Date or Euro date, select a type from this dropdown menu to define the timezone type with which you are parsing data. The default timezone with which data is parsed will be the client timezone ("User's current timezone"). However, you can override this option by setting an alternative timezone with a static or dynamic choice.Both Date and Euro date will be by default parsed as the date at midnight for the client timezone. If you specify a timezone different from the client timezone, then the date will be parsed as that date at midnight in the overriding timezone. As an example, if you parse 1/1/2000 from Eastern Time and keep the default setting, Bubble will save that date as 1/1/2000 12:00 AM Eastern Time. If you instead override the client timezone with Pacific Time, selecting 1/1/2000 will save 1/1/2000 12:00 AM Pacific Time.Caution: This is an experimental featurePrevent "enter" key from submittingNormally, when users click ENTER, workflows associated with the input get triggered/submitted. If you check this box, that will not happen.Maximum numberEnter the maximum number of characters allowed.Set a range (min and max)Check this box to restrict the numerical values users can enter.Minimum ValueSet the minimum value users can enter. Make this value dynamic by using the Composer.Maximum ValueSet the maximum value users can enter. Make this value dynamic by using the Composer.Check the password while typingIf a password policy is defined in the General section in the Settings Tab, check this box to validate the input against that policy.
Advanced: This is useful if you only want to make that check on the server.Multiline InputWatch this video to learn more about the Mulitline Input elementMultiline inputs allow users to enter text on several lines.PlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.Initial contentThis field defines the input before the user modifies it or when reset. For example, when users modify their bio, the initial content will likely be 'Current user's bio.'Limit the number of charactersCheck this box to prevent users from entering long entries.Maximum numberEnter the maximum number of characters allowed.Stretch to fit contentCheck this box to resize the element when the text becomes too long to fit the container.CheckboxWatch this video to learn more about the Checkbox ElementDisplays a labeled checkbox.LabelEnter the text to display next to the checkbox. Clicking on the text is equivalent to clicking the checkbox itself.Preset statusDefine the initial value of the checkbox. Choose from Checked, Unchecked, and Dynamic.Dynamic statusThis option is only visible if Preset status is set to Dynamic. Specifying a dynamic yes/no value determines whether this element starts in an on or off state.
 
When the dynamic value changes, e.g., the user modifies data that the dynamic status field references, the checkbox will change to reflect the new value. This continues until the user clicks on the element and changes the state, in which case the state will be determined by their selection rather than by a dynamic value.This checkbox should be checkedWhen checked, workflows using the content of the checkbox won't run until the content of the box is checked. This is useful, for instance, to force users to accept Terms of Services (ToS) when they sign up.DropdownWatch this video to learn more about the Dropdown elementDropdowns display a list of a choices to the user through a familiar interface. The choices can either come from the database or be entered in the Bubble Editor as a list of texts.PlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.Choices styleA dropdown element either prompts the user to choose one option from static choices or dynamic data from the application database. In this dropdown menu, choose between Static choices or Dynamic choices.Choices (press Enter between each option)This is the list of static choices offered to users. Enter one option per line and press Enter between each option.Type of choicesThis is the type of thing used by the element when Dynamic choices is chosen in the Choices style.Choices sourceDefine the list of things to be used as options. It should be a list of things of type defined as the 'Type of choices.' It is either the result of a search or the content of a field that is a list.Option captionDefine how to display the thing in the dropdown menu. For example, to display users, build an expression like 'Current option's first name Current option's last name' as a caption.Default valueThis is the default value displayed in the dropdown menu. It should be of the same type as the type of content defined in 'Type of choices.'Tip: When using the native dropdown element in Bubble, Bubble will use the browser's native dropdown HTML component. This often has very limited styling options and varies from browser to browser. For example, text alignment may not work across all browsers, because not all browsers support that feature for their native dropdowns. To create a more custom dropdown, consider building one using a Group Focus element.Note: due to how Firefox treats dropdowns, dropdown placeholder text cannot be changed conditionally on Firefox.Search BoxWatch this video to learn more about the Searchbox elementThis element searches for dynamic options with an autocomplete experience. The users start typing a word or address, and the dropdown menu displays matching options in real time.PlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.Choices styleA search box either displays a static list of texts like a list of countries, dynamic data from the application database, or displays addresses using the Google Autocomplete API. Choose from Static choices, Dynamic choices, and Geographic places.Choices (press Enter between each option)This is the list of static choices offered to users. Enter one option per line and press Enter between each option.Define list of optionsClicking this button displays a search popup. The search dropdown contains a dynamic list of entries users can search from. Add constraints to restrict the list.Define list of optionsIf you set up algolia, you will see a popup like the regular search, in which you can choose the type indexed in Algolia you want to search for.Field to searchWhen choosing a dynamic source of entries, define which field will contain the texts to use for autocompletion. Set this in the 'Field to search' property. For example, to display restaurants in the search box, set the list of options as a 'Search for restaurants' and choose 'Name' as the field to search.Field to displayIf you choose to search across all the indexed fields, you may choose to display a particular one, or the one that matched your search.Allow entries not in listCheck this box to allow the user to type something that is not in the dynamic list. Access the typed text as 'Input's typed text.'Maximum entries to showChange the maximum number of entries to show in the dropdown. Longer lists take more time to load.Prevent "enter" key from submittingNormally, when users click ENTER, workflows associated with the input get triggered/submitted. If you check this box, that will not happen.Default valueThis is the default value to use in the search box. It should be of the same type as the 'Type of choices.'Prefer results aroundThe point around which you wish to retrieve place information. This is optional.Radius (meters)The distance (in meters) within which to prefer place results.Radio ButtonsWatch this video to learn more about Radio Buttons ElementThis element displays a list of buttons where users can choose only one option. The options come either from a list of static choices or dynamic list.Choices styleA radio button element can either prompt the user to pick from a list of static choices like states or display dynamic data from the application database. Choose from Static choices and Dynamic choices from this dropdown menu.Choices (press Enter between each option)This is the list of static choices offered to users. Enter one option per line and press Enter between each option.Type of choicesThis is the type of thing used by the radio button element.Choices sourceDefine the list of things to be used as options. It should be a list of things of type defined as the 'Type of choices.' It is either the result of a search or content of a field that is a list.Option captionDefine how to display the thing in the list of radio buttons. For example, to display users, build an expression like 'Current option's first name' as a caption.Default valueThis is the default value to determine the selected radio button. It should be of the same type as the 'Type of choices.'Number of columnsEnter the number of columns for the buttons. The width of the caption will be adjusted automatically to fit the number of columns given the total element width.Bootstrap colorChoose the color for the actual radio buttons. Choose from the Twitter Bootstrap library of colors: Black, Primary, Danger, Info, Warning, and Success.Slider InputWatch our Academy quick tip on how to use this inputThis element allows users to select a value from a numeric range by dragging a slider. It is touch-compatible, so it works on mobile devices.Min ValueEnter the minimum value for the slider.Max ValueEnter the maximum value for the slider.StepThis number represents how much one increment should modify the slider's value.Slider typeA Simple slider will have one handle and return one number. A Range slider will have two handles and return two numbers. The handle is what the user moves to change the slider value. This setting will appear in the Property Editor when no style is attached. When a style is attached, this setting will instead be adjusted in the Styles tab.Note: The second handle for the Range slider will only appear in Live mode.Initial contentDefine the initial value of the slider. If the content is dynamic, it should be of type number.OrientationThis property defines whether the slider is Horizontal or Vertical.Border colorChoose the color of the borders of the slider and handle. The handle is what the user moves to change the slider value.Background colorChoose the color of the slider background.Handle colorChoose the color of the handle. The handle is what the user moves to change the slider value.Range area colorWhen using Range mode, this property defines the color between the two handles. The handle is what the user moves to change the slider value.Note: The second handle for the Range slider will only appear in Live mode.Date/Time PickerWatch this video to learn more about the Date/Time Picker ElementThis element allows users to choose a date and optionally a time with a calendar-type interface. The value returned by this element is a date that can be used in date fields.Time zone selectionSelect a type from this dropdown menu to define the timezone type with which you are parsing data. The default timezone with which data is parsed will be the client timezone ("User's current timezone"). However, you can override this option by setting an alternative timezone with a static or dynamic choice.For instance, if you (the client) are in Eastern Time, you can override the timezone by statically or dynamically specifying a new timezone such as Pacific Time. Then, when you enter 1/1/2000 9:00 AM, it will be parsed as 1/1/2000 9:00 AM Pacific Time, rather than 1/1/2000 9:00 AM Eastern Time.If you are parsing a date (with no time specified), it will be by default parsed as the date at midnight for the client timezone. If you specify a timezone different from the client timezone, then the date will be parsed as that date at midnight in the overriding timezone. As an example, if you parse 1/1/2000 from Eastern Time and keep the default setting, Bubble will save that date as 1/1/2000 12:00 AM Eastern Time. If you instead override the client timezone with Pacific Time, selecting 1/1/2000 will save 1/1/2000 12:00 AM Pacific Time.Caution: This is an experimental featureInput typeChoose from Date and Date & Time to determine if a time will be used in addition to the date.Initial contentDefine the initial value of the date. It should be of type date and will be red until the entry has the correct type.Tip: If you select date-only for your Date-Time picker, choose an initial content that does not include a time. If you use Current date/time instead, filters based on this initial content may filter out new data where date is still Current Date but after Current Time.Customize the input placeholderBy default, the date/time picker shows a placeholder with a date and format selected. To customize it, check this box.
Note: This option is only available in Date mode.PlaceholderEnter the placeholder to use for the date.Date formatFrom this dropdown menu, choose how to format the date.Custom formatIf you need to use a custom format for the date, you can define it here.Start the week on MondayCheck this box to start the week on Monday, which is the European style. By default, the week starts on Sunday.Display dropdowns to pick month/yearCheck this box to allow users to change the month and year quickly. This is useful for dates in the past, like birthdays.Time intervalThis property defines how many minutes should exist between two options.
Note: This option is only available in Date mode.Time formatFrom this dropdown menu, choose how to format the time.Minimum dateUse this field to prevent users from choosing a day before a certain date. This field can be dynamic, in which case the expression defined should be of type date.Maximum dateUse this field to prevent users from choosing a day after a certain date. This field can be dynamic, in which case the expression defined should be of type date.Minimum hourUse this field to prevent users from choosing a time before a certain hour of the day. This field can be dynamic, in which case the expression defined should be of type number. It must be in 24h format, i.e., 17:26 for 5:26 PM.Maximum hourUse this field to prevent users from choosing a time after a certain hour of the day. This field can be dynamic, in which case the expression defined should be of type number. It must be in 24h format, i.e., 17:26 for 5:26 PM.Picture UploaderOur Academy quick tip on how to set up the picture uploader This element allows users to upload an image. When they click the button, they're prompted to choose an image to upload. On mobile devices, the option to take a picture with the phone's camera is also offered. Once the image is uploaded, the button displays the image.PlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.DefaultThis field defines the initial content of the picture uploader. It can either be an uploaded static image or dynamic information from the application database, such as 'Current user's picture.'Make this file privateBy default, uploaded files are visible to anyone who has the link to the file. To provide an additional layer of security to files uploaded through this element, select this option. You will be prompted to select a thing to permanently attach the file to. That item can then be used to restrict access to the file via privacy rules.Note: when uploading to Box, set privacy rules in the Data > Privacy tab.Attach this file toThis option is only visible if 'Make this file private' is selected. Private files uploaded with this element are permanently attached to a thing, which is used to determine who has access to view the file. Only users who have the 'View attached files' permission for that thing can view the file. Go to the Privacy section to create privacy rules that grant this permission. If the value of 'Attach this file to' is empty or the thing does not exist, the file will be visible to anyone who has the link, which is the same as if 'Make this file private' was not selected.Storage serviceBy default, uploaded files are stored by Bubble using Amazon's S3 file hosting service. You can optionally select a third-party storage service instead by adding that service as a plugin. Currently we support one third-party service, Box.Note: when uploading to Box, set privacy rules in the Data > Privacy tab.Folder pathEnter the destination in your Box to upload the file. The destination is a forward-slash (/) separated list of folder names, such as 'My Folder/My Subfolder.' Bubble will automatically create folders if they do not already exist, and dynamic data can be used to build the folder path. Limit image size before uploadBy default, an image uploads without resizing. If the image is large, this may lead to a slower upload. If an image is larger than 800 x 600 pixels, check this box to resize the image to these dimensions.File UploaderWatch this video to learn more about the File Uploader ElementThis element allows users to upload a file. When they click the button, they're prompted to choose a file to upload. Once the file is uploaded, the button displays the file name.PlaceholderWhen this element is empty, text will be displayed to prompt the user to enter something.DefaultThis field defines the initial content of the file uploader. It can either be an uploaded static image or dynamic information from the application database, such as 'Current user's resume.'Make this file privateBy default, uploaded files are visible to anyone who has the link to the file. To provide an additional layer of security to files uploaded through this element, select this option. You will be prompted to select a thing to permanently attach the file to. That item can then be used to restrict access to the file via privacy rules.Note: when uploading to Box, set privacy rules in the Data > Privacy tab.Attach this file toThis option is only visible if 'Make this file private' is selected. Private files uploaded with this element are permanently attached to a thing, which is used to determine who has access to view the file. Only users who have the 'View attached files' permission for that thing can view the file. Go to the Privacy section to create privacy rules that grant this permission. If the value of 'Attach this file to' is empty or the thing does not exist, the file will be visible to anyone who has the link, which is the same as if 'Make this file private' was not selected.Storage serviceBy default, uploaded files are stored by Bubble using Amazon's S3 file hosting service. You can optionally select a third-party storage service instead by adding that service as a plugin. Currently we support one third-party service, Box.  Note: when uploading to Box, set privacy rules in the Data > Privacy tab.Folder pathEnter the destination in your Box to upload the file. The destination is a forward-slash (/) separated list of folder names, such as 'My Folder/My Subfolder.' Bubble will automatically create folders if they do not already exist, and dynamic data can be used to build the folder path. Max file size (MB)Use this field to limit the size of files uploaded from this element. The value will be the maximum number of megabytes. Default is 50 MB. Files as large as 5 GB can be uploaded to Bubble, while the Box limit is 50 MB.​​​​​​​​​​​​​​​PreviousContainers (Legacy)NextReusable ElementsLast modified 6mo agoCopy linkOn this pageGeneral input optionsEnable auto-binding on parent element's thingField to modifyShow an alert on successAlert to showAlert messageThis input should not be emptyThis input is disabledInputPlaceholderInitial contentContent formatCurrency SymbolAlways show decimalsShow thousands separatorDecimal placeLimit the number of charactersTime zone selectionPrevent "enter" key from submittingMaximum numberSet a range (min and max)Minimum ValueMaximum ValueCheck the password while typingMultiline InputPlaceholderInitial contentLimit the number of charactersMaximum numberStretch to fit contentCheckboxLabelPreset statusDynamic statusThis checkbox should be checkedDropdownPlaceholderChoices styleChoices (press Enter between each option)Type of choicesChoices sourceOption captionDefault valueSearch BoxPlaceholderChoices styleChoices (press Enter between each option)Define list of optionsDefine list of optionsField to searchField to displayAllow entries not in listMaximum entries to showPrevent "enter" key from submittingDefault valuePrefer results aroundRadius (meters)Radio ButtonsChoices styleChoices (press Enter between each option)Type of choicesChoices sourceOption captionDefault valueNumber of columnsBootstrap colorSlider InputMin ValueMax ValueStepSlider typeInitial contentOrientationBorder colorBackground colorHandle colorRange area colorDate/Time PickerTime zone selectionInput typeInitial contentCustomize the input placeholderPlaceholderDate formatCustom formatStart the week on MondayDisplay dropdowns to pick month/yearTime intervalTime formatMinimum dateMaximum dateMinimum hourMaximum hourPicture UploaderPlaceholderDefaultMake this file privateAttach this file toStorage serviceFolder pathLimit image size before uploadFile UploaderPlaceholderDefaultMake this file privateAttach this file toStorage serviceFolder pathMax file size (MB)









Slick Slideshow - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSlick SlideshowThe Slick Slideshow Plugin creates an element that displays a rotating carousel slideshow of static or dynamic images with a slide or fade in/out effect.SlideshowType of listDefine whether the slideshow should display images uploaded in the Bubble Editor or uploaded by users and saved in the application database. Choose from 'Upload each image' and 'Use a dynamic list'.List of static imagesClick the Upload another image button to upload each image individually.Type of imageEnter the type of thing that contains the images to display in the slideshow.Data sourceDefine the list of things that will contain the images. It can either be the result of a search or content of a field that is a list of images.Run-mode renderingThis option defines how to handle dynamic images if their size does not exactly fit the slideshow dimensions. The two options are:Stretch: The image will be resized to cover the entire slideshow area. Rescale: The element will add horizontal and/or vertical margins so that the image stays within the boundaries of the slideshow but is not distorted.Image fieldThis data type field contains the image. It should be of type image. For example, if the type of list is 'Apartment,' the field will likely be 'Illustration.'Wipe the entire list when it changesIf a list has similar items only in different colors, the displayed list will not change to prevent interfering with the user's interactions with the element. Check this box to override this behavior and redraw the entire list when it changes.Animation styleSelect the animation type. Choose from Slide and Fade.Animation speedEnter the length of the animation in milliseconds.AutoplayCheck this box to start the animation automatically on page load.SpeedEnter the number of milliseconds between each transition.Pause on hoverSelect this option to pause autoplay on hover.Show navigation dotsWhen checked, the element displays dots under the images that the user can click to switch between images.Navigation dots colorSelect the color of the navigation dots.Show arrow buttonsWhen checked, the slideshow element will show two buttons on the right and left to go from one image to another.Arrow button colorSelect the color of the arrow buttons.Setup You can use the Slideshow element to display a dynamic list of images. These could be a product photo gallery on a product details page on a marketplace, or a selection of photos uploaded by the current user on their profile page. In our example, we want to display all of the images associated with our "Example" data type. Our images are various dimensions, so we are going to choose "Rescale" to prevent our photos from being too distorted.In runmode, each screen will automatically adjust to match the image's dimensions.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousSegmentNextSQL Database ConnectorLast modified 1yr agoCopy linkOn this pageSlideshowType of listList of static imagesType of imageData sourceRun-mode renderingImage fieldWipe the entire list when it changesAnimation styleAnimation speedAutoplaySpeedPause on hoverShow navigation dotsNavigation dots colorShow arrow buttonsArrow button colorSetup FAQ









Airtable - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAirtableThe Airtable Plugin can be used to pull data from Airtable into Bubble, as well as update Airtable records from Bubble workflows. The ideal use case for this plugin is to supplement your Bubble application with Airtable data, or vice versa. We don’t recommend using Airtable as your sole database because using your Bubble database will generally be more performant, since it won’t require API calls.Create a new Record Add new records to your Table. To use this action, check the box to “Create & Modify” this Table in the Plugins tab.TypeEnter the type of record to create. This will match the name of the Table where you want to add the record. Delete a Record Remove existing records from your Table. To use this action, check the box to “Delete” from this Table in the Plugins tab.Type Enter the type of record to delete. This will match the name of the Table where you want to remove the record. RecordThe existing record to delete. For example, if you are displaying a list of records from Airtable in a repeating group, this could be the current cell’s thing.Modify a RecordType Enter the type of record to modify. This will match the name of the Table where the record exists.RecordThe existing record to modify. For example, if you are displaying a list of records from Airtable in a repeating group, this could be the current cell’s thing.Setup Install & configureInstall the Airtable Plugin in the Plugins tab of the editor. Click “Add another Account” and fill out your Account Label and API Key.The Account Label can be a label of your choosing. To find your API key, log into your Airtable account and navigate to https://airtable.com/account. Your API Key is here:Add tablesStart adding your Tables! Click “Add another Table”, then configure your Table information by first selecting a Base, then selecting a Table from the dropdowns. You can also optionally specify a View - this will impact the order in which your data returns from Airtable. For example, if you wish to see your records in the same order as they appear in your Table’s Grid view, specify this when you save your Table.After you’ve saved your Table, you’ll see a popup where you can see your schema, make necessary changes, and specify which Tables your linked records refer to.Use Airtable as a data source & workflow actionOnce set up, the app will be able to read and write to the connected Airtable base(s). For example, in a dynamic statement, you can use "Get data from an external API" to select the Airtable base as the API provider. Upon doing so, you can even add search constraints.You will also be able to write changes back to Airtable, via workflow actions that will show up in the "Plugins" section of the action selector.FAQWhat are these special field types for the field dropdowns in the schema popup?The field type dropdowns in the initialization popup have four special data types unique to Airtable: Attachment, Collaborator, Barcode, and Link to Record(s). This is for ease of use, to make it easier for you to map your Airtable columns to Bubble types. In practice, Attachment fields can be used like a list of images or files. Barcodes can be used like text. Since Collaborators and Links are native to Airtable, these fields must be pulled directly from Airtable when using a Table as data or creating/modifying records.Why can’t I filter on all of my fields?The filtering mechanism is done in the request we send to Airtable, so we have done as much as we can using the current API.Why can’t I create or modify all of my fields?Some fields in Airtable are generated by other fields, such as Rollups or Counts. Therefore, these cannot be altered or created via API calls.Why aren’t all of my tables showing up in Airtable actions or when I search data from an external API?Make sure your permissions are set accordingly. To use a Table in the Create and Modify actions, you must give it Create & Modify permissions. The same stands for the Delete action.How do I create or modify special Airtable fields, such as attachments, linked records, collaborators, and barcodes?You can use files or images in Bubble to create or modify Attachment fields in Airtable, and you can use text to create or modify barcodes. For linked records and collaborators, you must pull this directly from Airtable. For example, if you want to create a new record with a collaborator field, you would have to have that collaborator on another record already and pull from that.What type of fields can I send to Airtable?Currently you can only send text and numbers over to Airtable. All other types, like the Date field*,* will cause an error as it is not yet supported.What happens if I rename my table in Airtable? If you rename a table that you have previously connected, this can cause existing references to fail until Bubble knows the updated name. You can resolve this by going into your Plugins tab, finding the particular instance whose table name you want to update, and clicking the Base dropdown as if you would select a different base but selecting the same base again. You should now see the new table name.PreviousAddtoAny Share ButtonsNextAPI ConnectorLast modified 1yr agoCopy linkOn this pageCreate a new Record TypeDelete a Record Type RecordModify a RecordType RecordSetup Install & configureAdd tablesUse Airtable as a data source & workflow actionFAQWhat are these special field types for the field dropdowns in the schema popup?Why can’t I filter on all of my fields?Why can’t I create or modify all of my fields?Why aren’t all of my tables showing up in Airtable actions or when I search data from an external API?How do I create or modify special Airtable fields, such as attachments, linked records, collaborators, and barcodes?What type of fields can I send to Airtable?What happens if I rename my table in Airtable? 









Star Rating - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookStar RatingThe Bootstrap Star Rating Input Plugin creates a Star Rating input element. Users can click a star to assign a value to a thing. This is similar to the Yelp stars.Star RatingMin valueNote: When you set a minimum, this does not add “always filled in” stars. The stars show the width of the underlying slider. If the scale does not divide evenly across the number of stars, these steps might start overflowing. While this allows for some more complex setups, like starting with negative values, we recommend a minimum of 0 for most cases.Enter the minimum value the stars can have.Max valueEnter the maximum value the stars can have.StepThis number represents how much one increment should modify the star's input value.Star sizeSelect a size for the stars. Choose from Xs, Sm, Md, Lg, and Xl.Initial contentThis field defines what the initial value should be before the user modifies it. If the content is dynamic, the expression should be of type number.Stars colorSelect the color for the stars not selected. For example, in a rating of 4/5, the fifth star will be this color.Rating colorSelect the color for the stars selected. For example, in a rating of 4/5, the first four stars will be this color.Setup This plugin can let your users rate a product or service, as well as display that product or service's average rating. For example, let's say we add a Star Rating input, then start a workflow to create a new rating when its value is changed.​​We'll save the Star Rating's value to a field of type number. This is how our users can add their own ratings. Next, we can add a second Star Rating input for the averages. ​​This time we will set an initial content for the input, or the amount of stars we want to display on page load. In this case, we will get the average of all the ratings so far. ​​Now when we preview the page, we can leave our own review in the first input and watch as it affects the average in the second.FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​PreviousSQL Database ConnectorNextStripeLast modified 1yr agoCopy linkOn this pageStar RatingMin valueMax valueStepStar sizeInitial contentStars colorRating colorSetup FAQ









Custom - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCustomTrigger a custom eventThis action triggers a custom event, which should be defined on the page already. These events are a way to share workflows/actions between the different workflows of the page.Custom eventSelect the custom event to trigger.Workflow parametersThese are the parameters defined at the Custom Event level.Trigger a custom event when data changesThis action watches a thing for changes to a specific field, and then triggers a custom event workflow when it changes. This is a way of performing actions in response to things that users do. The custom event runs at most once for each call of this action. If the user leaves or refreshes the current page before the thing changes, the custom event will not run.Custom eventSelect the custom event to trigger when the thing changes.ParameterThis is the thing to watch for changes. It must be the same type as the parameter of the custom event that will be triggered, and the thing will be sent to the custom workflow. In other words, if the custom event expects a user, this field must be a user, and the custom workflow runs with that user when it changes.FieldThis is the field we are watching for changes. For example, if the workflow thing is the 'Current user,' and the field is the 'Name,' then if someone changes the 'Current user's name' from Bob to Barbara, the custom event is triggered.Schedule a custom eventThis action runs the selected custom workflow at a set time in the future. If the user changes the page before the workflow is scheduled to run, it will not happen. Unlike 'Trigger a custom event,' workflows run by this action run independently from and possibly in parallel with the workflow that initiated it.Custom eventThis is the event that is triggered.Workflow parametersThese are the parameters defined at the Custom Event level.DelayEnter the time in seconds to wait before running the custom workflow. Fractional times are accepted.Trigger a custom event from a reusable elementThis action triggers a custom event that belongs to a reusable element. These events are a way to share workflows/actions between the different pages and reusable elements of the app. Defining them in a reusable element is a way to build a library of workflows.Reusable elementChoose the reusable element to use in the custom workflow.Custom eventChoose the custom event to trigger. Only custom events from the selected reusable element will appear.Workflow parametersThese are the parameters defined at the Custom Event level.Schedule API WorkflowThis action allows you to schedule the run of an API workflow at a later time. Use this action to send an email to a user a week after signing up or a reminder a week before an event they created. This action uses the Bubble API Workflow. You can choose from API workflows with manually defined parameters. Schedule an API workflow within another API workflow. To avoid infinite loops, it cannot refer to itself. In this case, the subsequent calls are ignored.Note: This action is available to users with a paid Bubble plan. Activate the API in the API section in the Settings Tab.API WorkflowSelect the API workflow to run. These are the workflows defined in the Backend workflows page found in the Application Menu above the Palette. If the workflow takes parameters, they are displayed in the Property Editor.Scheduled dateDefine the date for the workflow execution. Use the expression Composer to define a dynamic date.Ignore privacy rules when running the workflowA scheduled workflow runs in the context of the current user when it is scheduled. All privacy rules apply to that user. To bypass these rules and run as an admin user who has all rights to the data, check this box.Warning: Because these are security and privacy options, use this feature with caution.Workflow parametersThese are the parameters defined at the API Workflow level.Schedule API Workflow on a listThis action allows you to schedule the run of an API workflow at a later time, on a list of things. This is useful to iterate on a list of things. Each workflow runs on a single item in the list and each counts as one workflow run.Note: This action is available to users with a paid Bubble plan. Activate the API in the API section in the Settings Tab.Type of thingsSelect the type of things to iterate on.List to run onDefine the list to iterate on. It can be the result of a search, an API call, etc.
Note: the list is defined and evaluated at scheduling time. In other words, if a thing matches the search constraints when the scheduling happens and subsequently gets modified in a way that it doesn't anymore, the API workflow will still run on it.API WorkflowSelect the API workflow to run. These are the workflows defined in the Backend workflows page found in the Application Menu above the Palette. If the workflow takes parameters, they are displayed in the Property Editor.Scheduled dateDefine the date for the workflow execution. Use the expression Composer to define a dynamic date.Interval (seconds)When you run an API workflow on a list of things, there must be a delay between each workflow. Enter the number of seconds to be applied. If left blank, Bubble will calculate the best interval in order to keep the system healthy.Note: Entering a number below 5 seconds is not recommended.Ignore privacy rules when running the workflowA scheduled workflow runs in the context of the current user when it is scheduled. All privacy rules apply to that user. To bypass these rules and run as an admin user who has all rights to the data, check this box.Warning: Because these are security and privacy options, use this feature with caution.Workflow parametersThese are the parameters defined at the API Workflow level.Cancel a scheduled API WorkflowThis action cancels a scheduled workflow. The workflow is identified by the number returned by the scheduling action.Scheduled API IDEnter the ID, which will most likely be an expression, that contains the ID of the scheduled workflow to cancel.Cancel a list of scheduled API WorkflowsThis action cancels a list of scheduled workflows. The workflows are identified by the number returned by the scheduling action.List of scheduled API IDsDefine the expression that will return the dynamic list of IDs, which should be a list of texts.Set/cancel a recurring eventThis action schedules or cancels a recurring workflow on a thing. This is useful if you want to run something daily, monthly, etc. Only one recurring event can be used per database thing. A frequency of None cancels a recurring event.Recurring eventSelect the event to run periodically or cancel. These events should be defined in the API Workflow page found in the Application Menu above the Palette.Workflow thingEach recurring workflow should have a thing attached to it. This thing should be of the same type as the recurring event.FrequencySelect the frequency to apply to the recurring workflow. Choose from None, Weekly, Monthly, Quarterly, and Yearly. A frequency of None cancels a recurring event.Note: A Bubble Personal plan is required for monthly events. A Professional or Production plan is required for Daily events.Start dateSelect the date to start the recurring event. When running this action on a thing that has already been scheduled, the start date has to be after the original next run date. If not, it will be pushed back by another period.​​​​​​​​​​​​​​​PreviousElementNext - Core ReferenceDataLast modified 9mo agoCopy linkOn this pageTrigger a custom eventCustom eventWorkflow parametersTrigger a custom event when data changesCustom eventParameterFieldSchedule a custom eventCustom eventWorkflow parametersDelayTrigger a custom event from a reusable elementReusable elementCustom eventWorkflow parametersSchedule API WorkflowAPI WorkflowScheduled dateIgnore privacy rules when running the workflowWorkflow parametersSchedule API Workflow on a listType of thingsList to run onAPI WorkflowScheduled dateInterval (seconds)Ignore privacy rules when running the workflowWorkflow parametersCancel a scheduled API WorkflowScheduled API IDCancel a list of scheduled API WorkflowsList of scheduled API IDsSet/cancel a recurring eventRecurring eventWorkflow thingFrequencyStart date









Collaboration - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsApp planGeneralDomain / emailLanguagesSEO / metatagsAPICollaborationSub appsVersionsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookCollaborationUsers editing this appThis lists all the other users that have been added as collaborators on this app, and the permission levels they have.AdminAn admin can control the collaboration permissions of other collaborators.AppA given collaborator can have the ability to only "View" the app, or "View and edit" the app.DataA given collaborator can have one of the following permission levels in relation to the database of an app:No permission - they cannot see any of the dataView only - they can only see the data, e.g. in the App Data sub-tab, but not modify or run as a given end-userView and run as - they can view the data and run as a given end-user, but not modifyView and edit - full permission to see and modify entries in the databaseLogsA collaborator can either have no permission to see the app's logs, or the ability to "View and query" the logsOnly dev. versionA collaborator can have the above permissions over only the development version(s) of the app, not the live version.Invite a userOur Academy quick tip on how to add collaboratorsInviteInviting a user as a collaborator will allow you to control the permissions that collaborator has in relation to the app, the app's data, and the app's logs, as described above.TransferThis will immediately transfer ownership of the app to another Bubble user. Be careful when using - if you are not an admin collaborator on the app, upon transfer, you will not be able to undo the transfer.Show the cursor of other editors when they modify the applicationThis feature will show you if any collaborators are currently actively in the editor. If you are on the same tab as a collaborator, you will even be able to see where their cursor currently is.​​​​​​​​​​​​​​​PreviousAPINextSub appsLast modified 1yr agoCopy linkOn this pageUsers editing this appAdminAppDataLogsOnly dev. versionInvite a user









Search - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataData SourcesOperators & ComparisonsSearchPrivacyStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookSearchThis is the short-form technical reference entry describing how to search for data in Bubble. If you are looking for more in-depth and long-form articles on the subject, you may be interested in checking our Finding data article or our series on data in Bubble.These are the search options and operators to use when performing searches.Ignore empty constraintsOur Academy quick tip on how to ignore empty constraintsIf this checkbox is checked, constraints using values evaluating to null will be ignored. In other words, if a constraint evaluates to null, all items will be returned. If this box is not checked, the search will only return items whose field's value is actually null. Note that this does not apply to the Advanced filter.Type of findSelect the type of things you looking for. It should be user or a type defined by you.ConstraintsWatch our Academy quick tip on how to use search constraintsEnter the different constraints to apply to this search.Text matching in the database is limited to the first 256 characters for indexing purposes. If you need to match text longer than 256 characters in a search, consider appending a "filtered:" with an advanced constraint, saying "<this object>'s json_compare = <search criteria>". The reason you have to do an advanced filter is that it forces the expression to load all the items out of the database and do the full string match, rather than just the first 256 characters.Sorting fieldChoose the field to sort the list.Note: Re-sorting a repeating group will immediately change all "current cell" values in any display elements that were dynamically derived from the current cell. Specifically, if you have a popup that opened to display "Current Cell's Thing's Info", this information is linked to the cell's index; the Thing will change when the repeating group is resorted. If there are visible elements that rely on "current cell's thing" as a data source, these will be updated once the group is re-sorted. This can result in changes in elements such as popups, group focus, or reusable elements that conditionally display information about the current cell.Change which field......Watch our Academy quick tip to learn how to sort a listSelect this option if you want the sorting field to be dynamic. When selected, another field will display and allow you to define the field. It can be dynamic and should match the name of an existing field. If it does not match, the application will show an error.Random sortingChoose this option to randomize the order results. It will be different for each user and after each refresh. It will be the same when re-running a workflow without refreshing the page.Dynamic field nameIf you want the search to be sorted according to a field chosen by the user, define an expression to define which field the search should use. For instance, the expression you design here should evaluate to 'Created Date' or some other fields you have defined in your type (it should match the displayed name of the field).Distance fromWhen sorting on a location field, results will be sorted by distance relative to a point. This field defines which point. Current position, an address, etc.DescendingChoose 'yes' to sort in descending order or 'no' to sort in ascending order. This option can be dynamic and defines an expression that returns a yes/no, e.g., a checkbox element.Adding additional sorting rulesWhen you need more than one sorting rule, click this button and select a field and a descending/ascending order for that field. The rules will be applied in the order listed.Any fieldPerforms a search across all the fields of the application database for a given type. For example, search for all entries with John as a first OR last name.AdvancedPerforms more advanced searches. For example, to find all apartments whose creators have an email hosted by yahoo.com, use 'This apartment's creator's email:extract domain is 'yahoo.com.' This operation happens after the search or list is retrieved from the server and is not as efficient as using constraints on a search.​​​​​​​​​​​​​​​PreviousOperators & ComparisonsNextPrivacyLast modified 6d agoCopy linkOn this pageIgnore empty constraintsType of findConstraintsSorting fieldChange which field......Random sortingDynamic field nameDistance fromDescendingAdding additional sorting rulesAny fieldAdvanced









Google Optimize - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGoogle OptimizeNote: As of December 2020, we're investigating issues when using the Google Optimize plugin in conjunction with Bubble's Google Analytics plugin, we think due to changes Google made in their recent major update of GA.Bubble has built a plugin with Google Optimize to enable you, as the app creator, to run A/B tests (randomized split tests) on your Bubble app.An A/B test is great when you have a clear action you want your users to achieve, and you're deciding between two slightly different experiences in your app to try to get your users to accomplish that action. For example:You have two different possible versions of a landing page, and you want to see which one leads to higher rates of users signing upYou have three different sets of copy for your home page, and you want to see which one leads to more users clicking a certain buttonYou want to see if showing a popup after a user logs in will increase the likelihood of that user purchasing somethingThere are many online resources explaining the principles of A/B testing and what makes for a good vs. bad test - it's a very helpful tool for data-driven decision making!Note: there are other third party A/B testing tools out there. These generally will not work smoothly with Bubble apps because of how Bubble renders your app's pages - essentially, our Javascript will interfere with the testing tool's Javascript. That's why we created this plugin, which allows you to design A/B tests within the Bubble editor, and to have them run on your app without any problems!Get Google Optimize Experiment GroupThis data source is a number that indicates which control or variant group the current user is in. "When Get Google Optimize Experiment Group is 0" means the user is in the control, usually the original experience you had. "When Get Google Optimize Experiment Group is 1" means the first variant you have, "...is 2" means the second variant (if there is a second variant), etc.Set Google Optimize Experiment On This PageThis action is necessary to "mark" a user as part of an experiment and thus as somebody who should be counted as part of the experiment's analytics. Even if this action is not used, the user will still be assigned to an experimental group and thus may see the variant - they just will not be counted in the analysis in Google Analytics.SetupWhat you'll needSign up for a Google Analytics accountSign up for a Google Optimize account - Optimize is part of the same suite of products as Google Analytics, and has a generous free tierHave your app connected to either (1) Google Analytics, OR (2) Segment with Google Analytics as a destination - these tools help you capture data about user activity, which is what's needed to measure the impact of your test; Bubble offers free Bubble-made plugins for GA and SegmentHave a Bubble app that's on the current Professional tier or above (see our Pricing page)If you're using SegmentTo use Segment with Google Optimize, in your Segment settings for Google Analytics, set Connection Mode to Device Mode (this is important! Currently we do not support Cloud Mode with Google Optimize.)On the same page, further down, you need to provide your Optimize Container ID:https://gblobscdn.gitbook.com/assets%2F-M5sbzwG7CljeZdkntrL%2F-MEYgEWkEfthhj4p-G5b%2F-MEYhE2QUrZ9VwfYPWU7%2Fgopt_3.jpg?alt=media&token=8dc4fbd7-900d-49e7-9193-e458933d934cYou can find your Optimize Container ID on your homescreen at optimize.google.com. (Note: pre-April container IDs will start with "GTM", post-April will start with "OPT")Setting up the Google Optimize plugin1.Install the Google Optimize Plugin in the Bubble editor via the Plugins tab, as with any other plugin. Once installed, you should see this settings page for the plugin:Optimize plugin settings​​You will need to provide your Optimize container ID, found on optimize.google.com​After creating an experiment in Optimize, you will copy the Experiment ID and the number of variants into the appropriate fields here as well. (See below)(Note: pre-April container IDs will start with "GTM", post-April will start with "OPT")Setting up an experiment in Google OptimizeThese steps are done in Google Optimize​When you first set up Google Optimize, you will be linking it up to your Google Analytics account.Follow the Optimize flow to create a "server side" experiment. The general steps are here, but a summary is:1.​Create an experiment in Optimize​2.​Set experiment objectives​3.​Set experiment targeting​4.​Create variants​5.​Start the experiment​6.​Get the experiment ID​A few important notesSet the editor page to "SERVER-SIDE" (or whatever else, it doesn't really matter but it should not match an actual url on your app)You might see a warning that this doesn't match URL targeting rules, but this is safe to ignoreNote the number of variants, and note that the original (the "control" in the experiment) counts as a variant. I.e. if you have the control and one other design to test, that would be 2 variants. This number goes into the Plugins tab in the settings for Google OptimizeYou can rename the variants in Google Optimize however you wish; the Bubble editor does not refer to themAudience targeting no longer has any affect from the optimize UIBefore you start the experiment, you have to set the Objective(s), which are the quantitative goals the experiment will look at to measure the success of the variants. You can either:1.Choose from list: this will only give you access to Google’s default objectives (bounces, pageviews, session duration)2.Create custom: this will give you access to events you’ve identified and sent to GA, possibly through Segment (this gives you much more control over the different behaviors you wish to measure / influence)1.If you've already sent Segment / GA custom events in the past, you should be able to find the option to have Event Action equal 'your_event_name'When these components are all ready, make sure to start the experiment!Designing an experiment in the Bubble editorYour experiment will likely be measuring some kind of custom event you send to Segment. As a brief introduction, if you have the Segment plugin set up, you'll be able to use the "Track an event with Segment" workflow action in the Bubble Editor.For example, if you want a click on a button called "Conversion Event!" on page A to log an event called "user_did_a_thing", you'd set it up like this:Logging a custom event with Segment via a workflowIf you check in the Segment interface, you should see this event in the "Debugger" pretty immediately.If you check in the Google Optimize objectives page, you should see this event name pop up in the dropdown list of known custom events.Important step: telling Optimize to pay attention to a userThe Optimize plugin does not automatically assume that every user who visits your app is part of the experiment. Rather, you must tell Optimize when a user should be considered as participating in an experiment!(Why this way: imagine you have an experiment running only on the logged-in dashboard of your Bubble app. In this case, you might have lots of users visiting your landing page, but most of these users won't be logged in. Thus, to get accurate numbers, you only want to run the experiment on users who visit the page and are logged in.)To tell Optimize that a user should be considered for an experiment, you must run the workflow action "Set Google Optimize experiment on this page" when relevant. In many cases, you'll probably run this action "When page is loaded", although you could create more complex logic.You can find the action within the "Analytics" category.You can think of this action as initiating all the rest of the Google Optimize logic. If this action is on a page, then a user visiting that page will be randomly assigned into a variant; these assignments are sticky, meaning if the user leaves and later comes back to that page, they will be in the same variant as before.To create different variant behaviorTo design the different experiences you want to test, you'll be relying on conditional statements that effectively say something like "if the user is in experimental group 1, show this element".To create behaviors that differ based on variants, use the datasource "Get data from an external API" and select "Get Google Optimize Experiment Group", and use that as a condition in workflows, element conditions, etc."When Get Google Optimize Experiment Group is 0" means the control, usually the original experience you had"When Get Google Optimize Experiment Group is 1" means the first variant you have(etc. for experiments with more variants)For example, on an element's condition tab, you might have a button where the control is that it's rotated 45 degrees, but in the first variant, you want the background color to be yellow:Using the group assignment in conditionsYou will usually be defining both the control and variant behavior. Make sure you preview your app to see if the variants are what you want! (Hint: to more fully preview a variant, you can add more clauses to the conditions to temporarily force the entire statement to be true or false, e.g. "When group is 0 or Current User is Current User" will always be true, and "When group is 0 or Current User is not Current User" will always be false).After you've started your experiment in Google Optimize and you roll out your changes, the experiment is running! The Google Optimize / GA interface is not quite real-time, but if you have users going through your experiment, you should start seeing an indication of this in the Google Optimize interface.FAQBecause Google Optimize records data about the experiment in Google Analytics, results are not available in real time, i.e. they are usually several hours delayedIf no data is showing up in Google Analytics pertaining to an experiment, make sure you're using the "Set Google Optimize Experiment On This Page" actionPreviousGoogle AnalyticsNextGoogle PlacesLast modified 1yr agoCopy linkOn this pageGet Google Optimize Experiment GroupSet Google Optimize Experiment On This PageSetupWhat you'll needIf you're using SegmentSetting up the Google Optimize pluginSetting up an experiment in Google OptimizeA few important notesDesigning an experiment in the Bubble editorImportant step: telling Optimize to pay attention to a userTo create different variant behaviorFAQ









Box - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBoxThis plugin lets you upload files and images directly to your Box storage, rather than the default Bubble storage included with your plan.File or Picture Uploader These built-in Bubble elements allow your users to upload files and images to your application. Once you install the Box plugin, you can modify its “Storage service” property.Storage service In the Uploader’s Property Editor, select “Box” to save the uploaded file to that storage service. When you drop a file into one of these elements, it will automatically upload to Box, but you should treat the upload as if it’s uploading to Bubble and still create a Thing so you can reference the data. Setup Note about "Enterprise ID"s: If you have an individual account you will follow the same steps as an enterprise account. Everyone automatically obtains an enterprise ID if they log in as a developer.(Special thanks to user @jarrad, who originally posted these instructions on the forum)1) Go to developer.box.com and login with your Box account to enable yourself as a developer2) Once in your developers console click “Create new app”3) Choose Enterprise Integration4) Choose 0Auth 2.0 with JWT (Server Authentication)5) Give your app a name, click create then click “view your app”6) Scroll down to add your public key. At this point you will be asked to setup 2 step authentication if you have not already done so7) Open the Bubble editor and go to Settings > API, click "Download public JSON web key"8) Copy the entire contents of the text file into the public key field in the Box console9) You will now see a short public key id – copy and paste that into public key id in the box plugin's settings in the Bubble editor10) Set your “Application Scopes” & “Advanced Features” in the Configuration tab as desired, ensuring both "Advanced Features" settings are turned on. Note: If you change any of these settings later, you must follow step 16 to reauthorize the app for the changes to take effect. 11) Now scroll up and copy the Client ID – paste it into BOTH Client ID & API key sections of the Box plugin settings in Bubble12) Copy the client secret – paste it into the client secret section of the Box plugin settings13) Now in the Box interface, click “General” on the left hand side, find and copy the User ID & Enterprise ID – paste them into the User ID & Enterprise ID sections of the Box plugin settings in Bubble14) In the Box interface, at the top right, click the account dropdown (seen as a head icon) > “Admin console”15) Now on the top right of your browser click the gear icon > Business settings16) Click the tab “Apps” > Custom Apps > Authorize the new app17) Enter the Client ID – the same as the API key you put in the Box plugin settings. Then click next to authorize.FAQWhere will my Box uploads go?Uploads will go to your main account, inside a folder that you set for the Uploader. What happens if I delete a Bubble thing? Deleting a thing will remove it from Bubble as a data record, so it’s gone as far as the app is concerned. The file will remain in your Box account. How can I control privacy settings for Box files? You can control the privacy settings on the Bubble-side in Data → Privacy on the Box File data type.Note: While privacy rules set on a Box File will work for preventing the upload from appearing in searches, the privacy rule will not prevent a user from accessing the file link if they were to obtain it.

For example, if there is a repeating group of Box File links on a page and a privacy rule for when "Current user is logged in", a logged out user would not be able to see that list of links. However, a logged out user would be able to access a protected link if it was shared with them somehow. 
​​​​​​PreviousBlockspringNextBraintreeLast modified 11mo agoCopy linkOn this pageFile or Picture Uploader Storage service Setup FAQWhere will my Box uploads go?What happens if I delete a Bubble thing? How can I control privacy settings for Box files? 









Localize Translation - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookLocalize TranslationTranslate your website to over 100 languages using Localize.js' translation service.Set the website languageThe Localize Translation Plugin allows you to control the language by setting the language through an API action.Language codeSelect the language code in the dropdown menu.SetupCreate a LocalizeJS accountTo get started, create a free LocalizeJS account. During onboarding, you'll be directed to create an organization and project.​Project creation form​Once your project is created, you'll be directed to your LocalizeJS project dashboard where you can obtain your Project Key.Install Localize Translation pluginThe Localize Translation plugin can be installed in the plugins gallery. Configure the pluginOnce installed, you'll enter the Project Key from your project dashboard into the appropriate field in the Plugin settings.Once the plugin is configured, you'll be able to use the Set The Website Language workflow action in your app.​​FAQ(Have a suggested FAQ to help other Bubblers? Please email us at [email protected]!)​​PreviousLinkedInNextMailchimpLast modified 1yr agoCopy linkOn this pageSet the website languageLanguage codeSetupCreate a LocalizeJS accountInstall Localize Translation pluginConfigure the pluginFAQ









Google Places - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGoogle PlacesGoogle PlacesFetch restaurants, schools, and more. from the Google Places API.Get data from external API - Get Google PlacesWhen displaying information from Google Places, this data source allows you to fetch content from the API.Search typeIdentify how you’d like to fetch and return results from your places API. E.g. text search, nearby search, radar search.Query/keywordThe search term used to discover relevant Google places.LocationThe location proximity in which the API will fetch results within.RadiusThe geo distance from your location that Google will display places for.TypeThe type/category of Google place you’d like to filter results by.Dynamic text operatorsCurrent cell’s Google Place’s nameThe name of the Google Place’s listingCurrent cell’s Google Place’s addressThe address displayed on the Google Place listingCurrent cell’s Google Place’s postal addressThe postal address displayed on the Google Place listingCurrent cell’s Google Place’s iconThe icon used to represent the Google Place’s categoryCurrent cell’s Google Place’s open nowThe status of a Google Place to display if the listed business is currently openCurrent cell’s Google Place’s typesThe type of category added the Google Place listing.Current cell’s Google Place’s IDThe unique ID allocated to the Google Place.Current cell’s Google Place’s place IDPlace IDs uniquely identify a place in the Google Places database and on Google Maps.Current cell’s Google Place’s business statusIndicates the operational status of the place e.g. operational, closed temporarily, closed permanently Current cell’s Google Place’s permanently closedThe yes/no status to identify if the place is permanently closedSetupIn order to use the Google Places plugin, you’ll first need to create a valid API within your Google Developer console.Under the credentials tab of your project dashboard, start by creating a new API key.Once your API key has been created, search for the Google Places API service within the main search bar.Now, select to enable this service.From here, copy your original API key into your plugin settings field.

Once you’ve set up the plugin, you can now search and display a list of places.When using a repeating group to display a list of Google places, select the type of content to be Google Place, then set your data source to get data from external API.  The API you’ll need to pull data from is the ‘Get Google Places’ option.After configuring your data source, you can now update the additional fields to refine your list of Google Places.Note: If you’d like user’s to search for their own Google Places, simply add an input element to act as a search bar, then match its value with the ‘query’ element field.To display a list of the returned Google Places, start adding dynamic elements within your repeating group, then choose values from the current cell’s Google Place’s operator.

FAQHow can you store Google Places data within your database?Like any data, it’s possible to store the value of a Google Place from a repeating group cell by creating or making changes to a thing within your database. Within a workflow, simply match any data fields with the values of the current cell’s Google Place. If you’d like some additional guidance when working with Google Maps locations, we’d recommend reviewing our Maps API documentation. PreviousGoogle OptimizeNextIonic ElementsLast modified 1yr agoCopy linkOn this pageGoogle PlacesGet data from external API - Get Google PlacesSearch typeQuery/keywordLocationRadiusTypeDynamic text operatorsCurrent cell’s Google Place’s nameCurrent cell’s Google Place’s addressCurrent cell’s Google Place’s postal addressCurrent cell’s Google Place’s iconCurrent cell’s Google Place’s open nowCurrent cell’s Google Place’s typesCurrent cell’s Google Place’s IDCurrent cell’s Google Place’s place IDCurrent cell’s Google Place’s business statusCurrent cell’s Google Place’s permanently closedSetupFAQHow can you store Google Places data within your database?









Trigger Event - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsGeneral EventsElement EventsCustom EventsRecurring EventTrigger EventActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookTrigger EventTrigger eventAlso known as a "database trigger event", this event is defined in the Backend Workflow section and runs workflows triggered by changes in the database.
 
Whenever an item of the given type is modified, we check the "Only when..." condition of the event, and if the condition passes, we run the workflow. This is useful for situations where a given piece of data could be modified by many different places in your application, and you want to make sure something happens each time the data is modified in a specific way. For instance, you could use this to sync the value of certain data types to an external API whenever the data is modified. Trigger events are kicked off by any change to the data, regardless if the change is initiated by a workflow, an API call, or from manually editing the data in the editor.
 
When working with database trigger events, there are two special data types: "Thing Before Change" and "Thing Now" (where "Thing" will change to match the type of thing you are working with). "Thing Before Change" represents the data of the thing that was changed prior to the changes being made; "Thing Now" represents the current data. If a workflow modifies a thing multiple times, we only fire triggers once: "Thing Before Change" will be the data at the beginning of the workflow, and "New Thing" will be the data at the end. Triggers are also fired when a thing is created or deleted. If it was created, "Thing Before Change is empty" will be true, and if it was deleted "Thing Now is empty" will be true.
 
There are several caveats about using data triggers. First, although you can use "Current User" to see which user, if any, initiated the workflow that changed the thing, trigger workflows run with full administrative privileges and privacy roles are not applied while the trigger is running, so any searches performed during the workflow will return all results, not just the results the current user is allowed to see. Second, triggers cannot kick off other triggers: if data is modified by a workflow initiated by a trigger, we do not check to see if those modifications are eligible for initiating other trigger events. Third, the "Only when..." condition can only use "Thing Now" and "Thing Before Change" instead of the full list of Bubble data sources. The full list of data sources are available in the actions kicked off by the trigger. Finally, keep in mind that workflows kicked off by triggers consume capacity, like any other Bubble workflow. If your application kicks off multiple trigger workflows every time data is modified, this can add up to a lot of overhead to the total capacity used by your application. To control this, use strict "Only when..." conditions to make sure you are only running trigger workflows when you need to.Note: If you have more than 20 database triggers that kick off at once, the remaining triggers will be scheduled to protect your app's infrastructure from consuming too much memory.Event nameEnter the name of the workflow.Type of thingA database trigger event watches a certain type of thing for changes. Define the type here.​​​​​​​​​​​​​​​PreviousRecurring EventNext - Core ReferenceActionsLast modified 1yr agoCopy linkOn this pageTrigger eventEvent nameType of thing








Data tab - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookData tabThe Data Tab manages the data that users create when using the app. It is where you configure and see the data within your app's database. It consists of a number of sub-tabs.For more information to get started, see the "Working with data" guide.Data typesThis sub-tab is where you define the data types that your app has - the kinds of things that you want to store data about in your database. The list of existing data types is listed on the left, along with a place to create a new data type. When a data type is selected, its fields are shown on the right side, along with the ability to create a new field on that data type.Note that a savvy outsider can see the structure of an app's data types, including all the data types' names and what fields exist on the data types.Make this data type privateWhen creating a new data type, you have the option to make it private or public. If the data type is made private, it will be created with a privacy rule that allows only a thing's creator to view all fields, find the thing in searches and view attached files, with the "Everybody else" permission set to nothing allowed. If instead the data type is created as public, things of the type will be visible by everyone.For more information about why privacy rules are important and how they work, see this article.PrivacyThis sub-tab is where you define rules around which users can see different kinds of data, or under which situations a user can see the data. Privacy rules are very important for the data privacy of your app! By default, new data types are generally visible to all end-users, so it's important to set privacy rules before you begin handling real end-user data.For more information to get started, see the "Protecting data" article.App dataThis sub-tab shows you the data in your app's database. You view the data by data type, and you can create custom views of a data type to show a specific set of fields as columns, a filtered subset of data, sorted data, etc. Note that the development and live versions of your app have separate databases, so you need to switch between them in the upper right in order to see the respective data. You can also create, modify or delete specific things (rows) in the database, or do bulk upload, export or modify actions.Run asWhen looking at the user table, clicking the button 'Run as' runs the app as if you were that user, which makes debugging particular cases much easier.Warning: Until you logout, you are using the app as this user, so do not make modifications.New viewClicking this button displays a popup that creates a new database view, which defines the fields that are seen on the right side of the screen. Constraints can be added to create a smaller list. By default, each type has a view that shows most fields with no constraints. The number of views is unlimited, and these views are shared between the Live and Development versions.Duplicate views Click the "Copy" icon next to the name of an existing database view to create another view just like it. You can then modify and add additional constraints to the duplicate. SearchEnter something into the input box, and the things in the current view that contain the entered text are listed. Use this for a quick search of the app data.New entryClicking this button displays a popup where you create a new database entry. Choose the type of thing and enter information into the predefined fields. This is equivalent to using a 'Create a new thing' action in a workflow.Note: If you are uploading a file directly in App Data when creating or modifying an entry, there is a maximum file size of 50 MB. You can use the file uploader element instead to upload files up to 5 GB.UploadClicking this button displays a popup where you upload a comma-separated CSV file of data. The type of data and relevant fields should be defined in the app before importing the file. This feature is available to users with a paid Bubble plan.
 
Select the type of data and file to upload. Map the columns from the file to the fields of the data type and then validate and upload the data.Important: The first row of your CSV file must be a header row containing the names of the fields for the data. Here's a sample file for reference.ModifyYou can bulk-modify data via a CSV upload. To do so, you should have a file with a column containing the unique ID of the things you want to modify, and enter the values that should be modified in subsequent columns.ExportThis button generates a CSV file with the data of the current view. The file is exported to the Download folder of your browser. This file can be edited. Because the app owner performs this operation, no privacy rules apply, and all fields chosen in the current view are exported. This feature is available to users with a paid Bubble plan.Bulk ActionClicking this button displays a popup that runs an API workflow on the entries in the current view. This is useful when you want to modify a list of things in the database. Select the API workflow you want to run. The workflow takes only a thing as a parameter.Warning: This operation permanently modifies the data. If processing many entries, this may take some time.Switch to Live/Switch to Dev.Clicking this displays the Version dropdown menu to switch between the Development and Live versions of the app. Remember that each version has a separate database.Copy and restore databaseClicking this button opens a popup to overwrite the Live version of the data with the Development version, and vice and versa. Use this to test the app with real data or migrate the Development version data to the Live mode.
 
For users with a paid Bubble plan, the application database can be restored to an earlier point in time. The restore functionality is designed to recover from mistakes that corrupt or delete big chunks of data. It restores the complete state of the database, including all the users' account information, a list of images, scheduled workflow runs, etc.Warning: Any data created after the restored version will be deleted. This option should be used only in catastrophic situations where it is better to revert to a previous database than to work with the current database. Restore operations are reversible. Simply perform another restore to the point in time right before the first restore.Primary fieldsClicking this button opens a popup where you define the primary field for each of the data types. This determines the way the data is displayed and how the CSV files are generated. For example, a user may be represented by his email, an apartment, an address, etc. This is for display purposes only.Refresh data Refresh to view recent changes to your data, especially as the result of a backend workflow or database trigger event. Load 50 more itemsClick here to display an additional 50 rows in this database view. Upload data as a CSVThis popup uploads existing data from a CSV file. CSV is a standard way to represent rows and columns of data in a text format. Microsoft Excel, for example, generates these files. This feature is available to users with a paid Bubble plan.Note: This feature is now in public Beta and some limitations may exist. For example, there is a minor inconsistency in formatting between how Bubble exports a list"x , y , z"and the list format it requires on import"[x , y , z]".Type of dataSelect which type of data to upload. The type of data and relevant fields should be defined in the app before importing the file.Data delimiterCommas are typically used to delimit entries, but different delimiters are possible. Tab or pipe delimiters are useful when working with text that includes commas. Choose the delimiter in the application creating the CSV file.Pick a file to uploadSelect a CSV file to upload.Map fieldsThis very important step is where you map the columns of data to the fields in the application database.Custom fieldSelect a data type field in the dropdown menu for each column of data. These fields should be defined in the data type before the upload.Composite fieldIf the field you're matching the column with is a custom type, then specify which field of the subtype should be used to match the text entry. For example, let's say you're uploading a list of apartments, and one of the fields is an owner. If the owner is represented by a last name in the CSV file, choose 'Last name' as the composite field. The entries should exist in the database before you upload the file. If two entries in the Bubble application database match the same value, an error will be returned.List delimiterThis is the delimiter to use when a field is a list of things. It should be different from the main delimiter. For example, if ';' is used as the delimiter, the data should be in this form: 12;54;32;67.Note: When importing data for type list, optionally enclose the list in '[' and ']', and then separate the individual items with the delimiter. For example, "[kitchen; bedroom; bathroom]", or "kitchen; bedroom; bathroom".Overwrite data when the field value is emptyWhen unchecked, empty entries in your CSV for a field will be ignored. When checked, instead they will explicitly overwrite the existing value with an empty value. In both cases, unmapped fields are ignored and will not be overwritten.Validate dataClicking this button does a quick analysis of the data to be uploaded, to make sure the first couple of rows are valid.Upload dataClicking this button uploads the data. First, it uploads the file to our servers. Then, it processes the upload in the background using your server capacity. While this happens, you are free to close the webpage and come back. An email will be sent on completion, or if there is an error while uploading.Note: Only one upload or modify can occur at a time for a given application.Option setsOption sets are lists of a given set of options that are defined by you for use throughout your app. Examples would include things like a pre-defined list of statuses that tasks can go through, a list of all countries in the world, types of user privilege levels, etc. Unlike data, the options in an option set cannot be added to, deleted or modified by an end-user - they are defined as part of the app. This sub-tab is where you manage your option sets: which sets exist, the specific options in a set, and any additional attributes you've created on a set.File managerThe File Manager section in the Data Tab shows the files or images that you or your users have uploaded in either the development or live version of your application. These are stored separately from the defined data types or option sets, and you can manage them here. Note: Apps on free plans do not have the ability to upload .html file types. If you need to upload an .html file type for your app's use case, consider upgrading to a Paid plan.File nameThe name of this file when it was uploaded to your application. Enter a name to search for a specific file.Only private filesIf this box is checked, only files attached to a data type, and therefore controlled by that type's privacy rules, will appear in your list of files.File type Limit the displayed files based on type, for example, show only jpegs, pngs, or PDFs.Sort by Choose whether to sort by file size or created date, and check the "Descending" box to largest to smallest files, or most to least recent.SearchClick this button to apply your search constraints for file name, private files, file type, and sort by field.Size The size of the uploaded file in bytes.Type The format of the uploaded file, such as csv, css, jpeg, png, pdf, or ttf.Uploaded dateThe time at which the file was uploaded. User ID The unique ID of the user who uploaded the file. Attached toFor private files, the unique ID of the thing this file is attached to. ViewClick this link to preview the uploaded file. When you click this from the File Manager, you have admin access and will also be able to view private files. ​PreviousWorkflow tabNextStyles tabLast modified 3mo agoWas this page helpful?Copy linkOn this pageData typesMake this data type privatePrivacyApp dataRun asNew viewDuplicate views SearchNew entryUploadModifyExportBulk ActionSwitch to Live/Switch to Dev.Copy and restore databasePrimary fieldsRefresh data Load 50 more itemsUpload data as a CSVType of dataData delimiterPick a file to uploadMap fieldsCustom fieldComposite fieldList delimiterOverwrite data when the field value is emptyValidate dataUpload dataOption setsFile managerFile nameOnly private filesFile type Sort by SearchSize Type Uploaded dateUser ID Attached toView

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Ziggeo - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookZiggeoThe Ziggeo Plugin creates an element that enables users to record and/or upload videos.Video InputInput optionsSelect what users can do. Choose from Allow uploads, Allow recording, and Allow both.Maximum duration (s)Enter the maximum video length users can record.Maximum size (byte)Limit the size of videos being uploaded in bytes. By default, there is no limit.Video ElementWatch this video to learn more about the Video ElementThis built-in Bubble element lets you display videos from external sources within your application. Once you install the Ziggeo plugin, you can modify its “Video source” property. Video sourceSelect “Ziggeo” from the video source to display videos that your users have recorded. Video IDThe Ziggeo video that you would like to display. This can be dynamic, such as a video input’s value. Setup Generate an API key in your Ziggeo dashboard and enter it in the Plugins tab of your application editor. You can find more information on integrating Ziggeo with Bubble here. ​FAQWhy can’t I start recording with my video input? In order to press “Record,” the Ziggeo plugin requires the camera and microphone icons to already be green, or to have already detected video and sound. Try speaking so that the microphone turns green, then click “Record” again.​PreviousZapierNext - Core ReferenceApplication SettingsLast modified 1yr agoCopy linkOn this pageVideo InputInput optionsMaximum duration (s)Maximum size (byte)Video ElementVideo sourceVideo IDSetup FAQWhy can’t I start recording with my video input? 









The Glossary - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookThe GlossaryThis is a non-exhaustive list of some Bubble terms you may see in Core Reference. Generally this will only feature terms that have Bubble-specific meanings and will not define technical terms used in their normal sense.ActionA step that a Bubble workflow takes, i.e. the different kinds of things that workflows can doExamples include sending an email, logging the user in, showing an element, hiding an element, etc.To learn more, see Building Workflows guideAPI ConnectorA feature that lets the app creator set up an API connection with an external service to be used in the appCan set up the API calls to be Data Sources or Workflow actionsCan be installed via the plugins library (Plugins > Add Plugins)To learn more, see Adding API Connections (which is framed in the context of creating a plugin, but has a similar flow to the API Connector)API WorkflowsA type of backend workflow which can be triggered via another workflow anywhere in the app or via an API callThese are defined in the "Backend workflows" page, which shows up in the page selector dropdown in the topnav, once the feature is turned on in Settings > APIThese can be scheduled to run at a later time (Personal plan and beyond feature)If the app's Workflow API is turned on, then an API workflow can also be initiated by an external API call to the appTo learn more, see Using the Bubble API guideApp ConnectorA feature that lets you connect two Bubble apps so that they interact with one another more seamlessly (versus connecting the two strictly via APIs as if one was a third party)Can be installed via the plugins library (Plugins > Add Plugins)To learn more, see section in the Reference​Backend workflowThis is a category of workflow that runs independently of any page of your app - they run in the "backend"There are currently 3 types of backend workflows: API workflows, recurring workflows and database change triggers​CapacityA measure of the computing power (slightly more technical: server resources) available to run an appIn practice, a weighted blend of different limited computing resources, including server CPU, database query execution time, AWS Lambda executions, etc.All apps on the main Bubble cluster (i.e. non-dedicated apps) are allocated a limited amount of capacity per unit of time, to prevent one app from consuming too much capacityUsers can pay for more capacity as needed, or move to a dedicated instanceCapacity usage of a given app can be seen in Logs > CapacityTo learn more, see Performance and Scaling guideCustom EventA group of workflow actions that can be defined so that other workflows can invoke that groupThese must be triggered from another workflow, via the "Trigger a custom event" actionUseful when you have multiple UI components or workflows that share some logic in common, and saves time by avoiding copy-pasting the same set of actions in multiple placesTo learn more, see this guide on custom eventsCustom StateBubble elements can store bits of data on themselves - this data only exists when the page is loaded (i.e. not in the database), and resets when the page refreshesFor example, you could have a group that shows different information depending on the tab that's currently active - the group could have a custom state to keep track of which tab is active, which would then influence the text that shows upYou can create custom states on an element and set their initial values via the "i" icon at the upper right of the property editor when you have the element selectedYou can edit the custom state of an element via the workflow action "Set state"Data APIA feature that lets outside apps access the data in your Bubble app via API callsAllows querying your data as well as creating / updating / deleting dataControlled via authorization and Privacy rulesOff by default; controlled in Settings > APITo learn more, see Using the Bubble API guideData SourceA statement that reflects some kind of data which powers dynamic statements in elements or workflowsA commonly used data source is "Do a search for...", which allows you to construct a query for data from the app's databaseWherever you see an "Insert dynamic expression" button, all the choices in the first dropdown are considered data sourcesExamples include "Do a search for...", "Current user", "Current date / time"To learn more, see Displaying Data guide​Database ThingsThe number of unique database things you have across versionsData TypeA collection of Things in the database that share the same fields, which often semantically refers to a cohesive idea an app wants to representSlightly more technical: a collection of records with the same fieldsFor those familiar with spreadsheets: a data type is kind of like a single sheet in a spreadsheet fileMore technical: an "object", or for those familiar with relational databases, a tableFor example, for a project management app, there might be the "Project" and "Task" data typesBuilt-in Data Type: there is only 1 built-in data type which comes with all Bubble apps: UserUnlike Custom Data Types, Users 1) cannot be created by the "New Thing" action; 2) have some extra built-in fields like "email" and "is logged in"; and 3) can be extended with additional extra fields via connecting with a social network or oauth providerCustom Data Type: all the other data types of an app, which an app creator creates and definesThe app creator determines which fields each Custom Data Type has (i.e. which columns exist on that table)To learn more, see this guide on structuring dataDebuggerA feature that helps an editor the app see what's happening "behind the scenes" while interacting with an app in Run ModeAppears automatically when getting to Run Mode via the "Preview" button in Edit ModeHas the following features which help with debugging an app:Inspect: focuses in on a specific Element on the page to show you its propertiesNormal / Slow / Step-by-step: runs the workflows on the page at different speeds so that you can see what goes on at each action of the workflowErrors: a log of errors and warnings that the app triggers as it's runningTo learn more, see Using the Debugger​Dynamic ExpressionA statement that isn't the literal text that shows up to the end-user, but which represents a calculation or query that the app doesData sources are all dynamic expressionsFor elements which show text, the text can be 'calculated' via a dynamic expression (and can even be a mix of static content with dynamic expression(s))To learn more, see Building Dynamic Expressions​Edit-modeWhen you are viewing your app in the Bubble editor, i.e. the mode where you can edit your app, view your app data via the Data tab, etc.Contrasts with "Run-mode" (see below)EditorThe tool you use to edit your Bubble app, found via bubble.ioTo learn more, see "The Application Editor" sectionElementThe basic building block of what a Bubble website looks likeEverything visible on a Bubble page is an elementThey are generally self-contained pieces of content that a user can see and potentially interact withExamples include "Text", "Button", "Image", etc.; they are found on the left side in the Design tabTo learn more, see Building a User Interface and the section in the Reference​EventSomething that happens that starts a workflowExamples include a user action (e.g. clicking on an element), certain data changing, some amount of time elapses, "User is logged in", etc.To learn more, see Building Workflows guideField TypeWhat type of information is stored in a field of a Data TypeThere is a built-in set of Field Types that all Bubble apps have, including numbers, text, geographic addresses, etc.A field can have a data type as its type - for example, in a classroom management app, for a given class, the Teacher can have "User" as the field typeFields can also be "a list of" a given type - for example, in the classroom management app, for a given class, the Students can have "list of Users" as the field typeTo learn more, see this guide on creating a data structureModesEdit-mode - the state of your app when you are editing it on bubble.ioRun-mode - the state of your app when your end-users are visiting your app (you can get from Edit Mode to Run Mode by clicking on the "Preview" button in the editor)Monthly unique daily visitorsThe number of unique visitors to your app each day, added up over a calendar monthThis number is reset to zero at midnight UTC on the first day of the next monthOperator (formerly known as "Message")A transformation / manipulation that can be applied to data in a dynamic expressionThese can be chained together to perform a computationFor example, in the dynamic expression "Current User's email:number of characters > 5", the following are all operators: "email", "number of characters", ">5"When building a dynamic expression, the operators available at any point depends on the dynamic expression as written thus far; for example, the ":number of characters" operator makes sense when attached to some text, but not when attached to a numberTo learn more, see Building Dynamic Expressions​PrivacyA feature in Bubble that restricts who can see the Things of a Data Type based on rules the app creator definesIndependently defined for each Data Type in an app's databaseHandled by creating Privacy Roles that each define a group of users or Things the role applies to and what that role can / can't seeTo learn more, see Privacy in the ReferenceProperty EditorThe part of the Design tab that appears when you double-click on an element, where you control the properties of that elementCan be made to always be visible by toggling Grid & Borders > Lock Property EditorTo learn more, see here​Run asA feature found in Edit Mode (via Data > App Data > "All Users" table) that allows an app editor to run the app (i.e. in Run Mode) as if they were logged in as a specific userTo learn more, see this guide on managing dataRun-modeWhen you app is actually running and you have users engaging with it, i.e. when you're "running" your app, not in the editorWhen you click "Preview" in the editor, that simply opens up the app in run mode, just as if you had visited the URL of your appBoth the "Development" version and the "Live" version of your app have run modes, i.e. if you are editing your app on the Development version and click "Preview", you will enter run mode of the Development versionContrasts with "Edit-mode" (see above)StyleA set of properties about the look-and-feel of an element that can be reused on other elements of the same type (e.g. Styles A and B can apply to any buttons in your app, Style C can apply to any text elements in your app, etc.)These are edited via the Styles tab, and can be applied to a particular element via the Property EditorNew Bubble apps come with a default set of Styles., i.e. a default Theme (see Theme)Styles help with consistency in the look-and-feel of an app, and if you have a large app, using Styles instead of applying custom individualized look-and-feel properties to each item could result in a performance improvementTo learn more, see Using Styles​TemplateA pre-built app that you can use as a starting point for creating your own appCan only be used when starting a brand new app, i.e. cannot be applied retroactivelyUsually includes a combination of pages, elements, styles, workflows, etc.Bubble has a template gallery here with templates from (third party) community membersThemeA default set of Styles that come with a new Bubble app, which provides some Styles for all native Bubble elementsThere are currently 8 Themes to choose from, the default being the "Standard Bubble Theme"You can choose a Theme for your app as part of the New Application Assistant flow when first creating that app, or you can apply a Theme to an existing app by going to Styles > Apply themeTo learn more, see Using Styles​ThingA single instance of a Data TypeCorresponds to a row (record) in the database (or: it's like a row in a spreadsheet)Bubble generally uses the term "Thing" when it wants the user to provide a Thing but it doesn't yet know which specific data type it is yetTo learn more, see this guide on structuring an appWorkflowLogic that a Bubble app runs, defined as what the app does (actions) when something happens (the event)Workflows either belong to a specific page (and thus only run when a user is on that page) or is an API Workflow that can be run anywhere in the app or with an API callTo learn more, see this guide on building workflowsWorkflow APIA feature that allows other apps to run workflows (specifically, API workflows) in your Bubble app(Very closely tied to API Workflows, see above)Off by default; controlled in Settings > APITo learn more, see this guide on using the APIMiscellaneous - PreviousMore features for your to-do appLast modified 11mo agoCopy linkOn this pageActionAPI ConnectorAPI WorkflowsApp ConnectorBackend workflowCapacityCustom EventCustom StateData APIData SourceDatabase ThingsData TypeDebuggerDynamic ExpressionEdit-modeEditorElementEventField TypeModesMonthly unique daily visitorsOperator (formerly known as "Message")PrivacyProperty EditorRun asRun-modeStyleTemplateThemeThingWorkflowWorkflow API








Testing an Application - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookTesting an ApplicationIn this guide, you'll learn the basics of testing an application. You'll also learn about Bubble's key tools that make testing simple and easy. Here are the sections of this guide.The BasicsUsing The DebuggerUsing Server Logs​PreviousAPI GlossaryNextThe BasicsLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook




General Properties (Legacy) - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookGeneral Properties (Legacy)The properties here apply to all elements in Bubble.Changing the parent element's typeThis option modifies the type of content of the parent element on the fly. The type of content defines what type of thing a group should expect, so that you can refer to it when editing the app. For example, a group can receive a user, who isn't necessarily the current user, and then you can add a text element in the group to display the 'Parent group's user's email.'This element is visible on page loadCheck this box to make the element visible by default. This checkbox makes the element visible every time the page loads or reloads. Change the visibility of the element based on certain conditions in the Conditional section in the Property Editor or with a show/hide element action in a workflow.
 
To find hidden elements quickly, click the 'Only show hideable' checkbox in the Elements tree in the Palette. Clicking on the name shows or hides the element for editing purposes only. Like other properties, this setting can be overwritten by a condition on an element or by a show/hide action in a workflow. Actions take precedence over conditions which take precedence over the default setting.Note that savvy end-users can 'see' (through technical means) the static content of any page they visit, even if the elements are hidden to that end-user and never revealed. This means you should not include any sensitive static content in hidden elements on the page - content like sensitive URLs or private tokens.Replace elementClick this button to replace an element with an element of a different type. For example, change an element from a checkbox to a toggle or from a group to a popup.
Note: This operation may lead to inconsistencies, so check the Issues Checker to make sure no new issues are introduced. Undo this change, if necessary.StyleSelect a style from this dropdown menu to apply to the selected element. Styles are defined in the Styles Tab and can be applied to more than one element. When a style is modified, all elements with that style will automatically change. Using styles makes editing the app faster and ensures a consistent design.Detach styleClicking this button detaches the style from the selected element. The style association is detached, but the properties of the style remain on the element. The style is not changed or deleted, only detached from the specific element.Edit styleClicking this button displays the Styles Tab and selects the current element's style.Select parentChoose an element from this dropdown menu to contain the selected element. This is convenient when an element is contained by a group with the same dimensions.Reveal in Elements TreeClicking this button shows where the element is in the Elements tree in the Palette.Lock this element (not draggable in editor)When this box is checked, the element will not be draggable in the Bubble Editor. This is useful when working on large pages. This has no impact in run mode.ID Attribute (advanced)If you activate the option Expose the option to add an ID attribute to HTML elements in the Settings Tab, you can specific a unique ID for some element on the page. This ID will be applied in run mode to the outer div around the element. This is an advanced feature.
Warning: Bubble does not guarantee that the internal structure of the divs will remain the same over time. What is guaranteed here is the ID will be applied to the outer element. Keep this mind as you use IDs.PreviousGeneral PropertiesNextStyling PropertiesLast modified 2d agoCopy linkOn this pageChanging the parent element's typeThis element is visible on page loadReplace elementStyleDetach styleEdit styleSelect parentReveal in Elements TreeLock this element (not draggable in editor)ID Attribute (advanced)

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationPrivate & Public AppsDomain & DNSEmailPassword PolicyVisual SettingsLanguage & App CommunicationsSocial NetworksBubble Release TiersSEOSub AppsMore about Bubble appsBubble app namesMaintaining an ApplicationVersion ControlDatabase Copy & BackupsBulk OperationsSchedulerCommentingCollaborationCore ReferenceBubble's InterfaceDesign tabDesign tab (Legacy)Workflow tabData tabStyles tabStyles tab (Legacy)Plugins tabSettings tabLogs tabTemplate tabToolbarTop & Context Menu OptionsDeployment & Version Control DropdownComments & NotesElementsGeneral PropertiesGeneral Properties (Legacy)Styling PropertiesStyling Properties (Legacy)Responsive PropertiesResponsive Properties (Legacy)Conditional FormattingStatesPage ElementPage Element (Legacy)Visual ElementsContainersContainer Layout TypesContainers (Legacy)Input FormsReusable ElementsElement TemplatesWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Navigation - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsNavigationAccountData (Things)EmailElementCustomDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookNavigationGo to page ...This action takes the user to another page and optionally defines which data to send to that page, if the destination page has a type of content. If the action is to go to the current page but with a different data to send, the content of the page will be updated without reloading the page.
 
If a change page action is the only action in a workflow that is triggered on page load, the redirection will happen on the server. Note that if a condition is applied on such an event, the redirection will happen on the server if the condition only involves the Current user and the Current page thing.Data to sendChoose the thing for the page content of the destination page. The type of this thing should be consistent with the page's type of content. If the type is inconsistent, the expression will be red. If the page doesn't have a type, you can send text instead to append a path to the URL.Send more parameters to the pageAdditional data can be sent to the page. This can be a text, a number for a search, etc. This option defines the series of key/values to send. The way to use them in the destination page is by using the 'Get data from page URL' data source.Additional parametersDefine the key/values to send to the destination page.Warning: Because of Bubble's internal logic, do not use 'id,' 'debug_mode,' or 'resume' as keys.Send current page parametersIf there is any data stored in the page URL parameters when the page changes the parameters will be carried over to the destination page as well. These parameters will be overridden by any parameters with the same name added using the "Send more parameters to the page" option.Replace the entry in the browser historyWhen redirecting to the same page and updating the data to send, a new entry is added to the browser history. Check this box if you do not want the initial page included in the list.Refresh the pageThis action reloads the page. It is equivalent to the user hitting 'Refresh' in their browser.Note: The 'Refresh the page' action will destroy any context about the current page and cancel any server side calls meant to track any workflow progress. As a result, it's not very reliable to run workflow steps after this action since timing issues are likely to occur. Consider making the 'Refresh the page' action the last one in a workflow and then trigger any next steps in a Page is loaded event, which should function more reliably.Go to previous pageThis action goes to the previous page in the browser history. It is equivalent to the user hitting 'Back' in their browser.Open an external websiteThis action opens another website. In a workflow, this action cannot open the link in another tab because most browsers will block this as a popup.Tip: To open a URL in another browser tab, use a Link element.DestinationEnter the URL to be opened. Enter a dynamic address using the 'Insert dynamic data' button.Add a pause before next actionThis action pauses the workflow for the number of milliseconds entered. This is useful if you want to wait before animating an element, etc. This will have no impact on actions that happen on the server, like data modifications, sending emails, etc.Pause length (ms)Enter the number of milliseconds the workflow should pause.Hide the status bar as the pause occursBy default, the status bar is shown during this action. To hide it when the workflow pauses, check this box.Terminate this workflowWatch our Academy video on how to end a workflowThis action, if it runs, immediately ends the workflow. Useful in conjunction with an action condition... if the condition is false, the workflow will continue; if true, the workflow will end. If run in a custom workflow, will terminate that workflow, but not the parent workflow.​​​​​​​​​​​​​​​Core Reference - PreviousActionsNextAccountLast modified 1yr agoCopy linkOn this pageGo to page ...Data to sendSend more parameters to the pageAdditional parametersSend current page parametersReplace the entry in the browser historyRefresh the pageGo to previous pageOpen an external websiteDestinationAdd a pause before next actionPause length (ms)Hide the status bar as the pause occursTerminate this workflow









Blockspring - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsAddtoAny Share ButtonsAirtableAPI ConnectorBlockspringBoxBraintreeBubble App ConnectorChart.jsCircle Music PlayerDisqusDocuSignDraggable ElementsDropzoneFacebookFitbitFull CalendarGoogle AnalyticsGoogle OptimizeGoogle PlacesIonic ElementsIpiphyiTunesSlidebar MenuLinkedInLocalize TranslationMailchimpMixpanelMouse & Keyboard InteractionsMultiselect DropdownOlark Live ChatOneSignal Web NotificationsPexelsProgress BarreCAPTCHARich Text EditorRich Text Editor (Legacy)ScreenshotlayerSelectPDFSlackSegmentSlick SlideshowSQL Database ConnectorStar RatingStripeTinder-like ElementTwilio Video ChatTwitterWistiaYouTubeZapierZiggeoApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBlockspringBlockspring has unfortunately ceased operations as of December 29th, 2022, rendering the plugin obsolete and devoid of functionality.​PreviousAPI ConnectorNextBoxLast modified 14d agoCopy link








Optimizing an Application - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookOptimizing an ApplicationIn this guide, you will learn about some of the ways to optimize and app's performance on Bubble. This includes details on performance, scaling, queries, and limitations.Performance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesPreviousSupported browsersNextBubble App Security Best PracticesLast modified 2yr agoWas this page helpful?Copy link

Bubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsIntroduction to APIsThe Bubble APIThe API ConnectorAuthenticationCase: Google TranslateHow to setup Google API keysPlugins that connect to APIsAPI GlossaryTesting an ApplicationThe BasicsUsing The DebuggerUsing Server LogsSupported browsersOptimizing an ApplicationBubble App Security Best PracticesPerformance & ScalingCapacity UsageNotes on QueriesLimitations & Known IssuesCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBook





Building Plugins - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookBuilding PluginsPlugins extend Bubble's functionality and add new API connections, elements and actions to Bubble. You can build plugins for the benefit of the Community, or build private plugins if you need to write custom code for your applications.This section covers the different plugin types you can build and how publishing works.The Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub Integration​PreviousUsing DedicatedNextThe Plugin EditorLast modified 7mo agoCopy link









Publishing & Versioning - Bubble Docs









Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookPublishing & VersioningThe Version tab is where you can deploy your plugin and push updates, bug fixes and other improvements.LicenseA plugin can be published on an open source license (MIT) or a private license. The open source license will make the plugin free on the plugins marketplace and other users may copy the code. Note that once a plugin has been published as Open Source, you won't be able to take it back to private.When a plugin version is set to private, you can authorize some apps to have access to this plugin. Note that this is a different concept from the test application you use to test your plugin. These apps will be able to use the plugin in production.When you clone an app that has access to a private plugin, Bubble does not remove the plugin from the newly created app to prevent the app from breaking. If you want to withdraw the plugin from the copy of the original app, you should delete it in the Plugins Tab of the app.DeployingWhen you deploy your plugin, or push a change, you can define the change type and define a caption for the deployment. Deploying will generate a version number and will prompt users that have installed your plugin to upgrade their plugin in their app.Post-deployCongratulations on getting your plugin out there! Whether you are offering it to the community for free or monetizing it, it's a huge accomplishment and helps strengthen the Bubble ecosystem.After your plugin is live, you may want to keep an eye on any feedback or ratings from users. You may also start getting bug reports from users directly. As a publisher of a public tool, it's important for you to communicate with your users and to set expectations about future development (or lack thereof) as appropriate.Your plugin's listingOnce your plugin is approved and live, it will show up in the marketplace for other Bubble users to buy / install. You have the ability to change your plugin's marketplace listing or publish a new version of the plugin whenever.Tip: In your bubble.io/account settings, remember to fill out the entirety of the Seller Profile in order for your plugin to be discoverable at bubble.io/plugins.Each plugin's listing generally shows the number of apps a plugin is installed on. Note that this does not necessarily correspond to the number of users who have purchased your plugin, if it is a paid plugin. The number can diverge because of a number of reasons where users have the plugin installed on their app but they are not paying for it, e.g. because they used a template that has the plugin, because they copied an app that has the plugin, because they downgraded their plan, etc. Rest assured though that if your plugin is a paid plugin, a user can only use it if they have paid / are paying for it (i.e. having it installed does not automatically let them use the plugin).Your plugin's average rating and install count in the marketplace only update periodically around twice a day (i.e. they do not update live, for performance reasons).PreviousLoading DataNextGithub IntegrationLast modified 1yr agoCopy linkOn this pageLicenseDeployingPost-deployYour plugin's listing









Adding API Connections - Bubble Docs












Bubble DocsSearch…⌃KBubble DocsSearch…⌃KIntroductionNew? Start HereChangelogUser manualDesignDataStructuring an ApplicationBuilding WorkflowsUsing PluginsAPIs: Connect to other appsTesting an ApplicationOptimizing an ApplicationCustomizing an ApplicationMore about Bubble appsMaintaining an ApplicationCore ReferenceBubble's InterfaceElementsWorkflowsEventsActionsDataStylesAPIBubble-made PluginsApplication SettingsAccount & MarketplaceAccount & BillingDedicated PlansBuilding PluginsThe Plugin EditorGeneral SettingsAdding API ConnectionsBuilding ElementsBuilding ActionsLoading DataPublishing & VersioningGithub IntegrationBuilding TemplatesMiscellaneousThe ShowcaseMore features for your to-do appThe GlossaryPowered By GitBookAdding API ConnectionsAPI calls are a way to get data from external services or trigger some actions on the service's end (send a message, charge a card, etc.). Usually (but not always), the first type of calls are going to be GET requests, while the second one is a POST. A call usually requires some authentication, so that the service identifies who is calling it (and may charge per call, etc.). You add such calls in the API Tab of the Plugin Editor. This is where you will define how the calls are authenticated, and which calls are used as data sources or as actions.Note: If an API call takes longer than 30 seconds to complete, Bubble will automatically retry this call. This is relevant if you're handling actions like sending emails where it may take more than 30 seconds to receive confirmation back from the service that the action has been completed. This may result in additional emails being sent if confirmation has not been processed.You can see an example of the implementation of call of the iTunes API here.Implementing API connections can be different based on the API. While most APIs follow a few standards, if you hit some issues, we recommend reaching out to the API provider, and asking for help on the forum.AuthenticationDesigning the calls starts with the authentication method, which will sign the calls in Run-mode. Authentication can be done in several, standard, ways. Note that whenever you're building an API connection with some keys, you will need to enter some actual keys to test. These keys are only saved to help you work on your plugin. They will never get sent to users that use your plugins. Instead, they will have to enter their own API keys in the Plugins tab of the editor.No authenticationNothing is added to call, or you are handling authentication with custom parameters and handlers. Note that we do not recommend handling authentication yourself, and instead use Bubble's built-in authentication system for a more secure connection.Private key in URLA key is added in the URL, the key name can be modified in the editor.Private key in headerA key is added in the headers of all requests. It is very similar to the previous option. Very often, the header will look like Authorization: KEY, but you can customize the name Authorization if needed.HTTP Basic AuthA username/password will be sent with each request, according to the HTTP Basic Auth protocol (see this).Oauth2 Password FlowA password and a user name is used to get a token (see this for general information about this flow), that can expire and that is renewed automatically by your app. The token is returned when calling an endpoint that you'll need to fill in the Editor. The endpoint can be found in the API documentation. Search for 'token' or 'OAuth Bearer token' in the documentation.Oauth2 Custom TokenThis flow is similar to the Password flow, but lets you define the call that returns the token yourself, in case it's not following the standard approach covered above. The token will be added to calls as a Bearer Token and will automatically be renewed when necessary. Note that to function, the token should be returned as an object with two keys (at least), access_token and expires_in .Oauth2 User-Agent FlowThis flow is the way most services connect when you use the API on behalf of the user (Facebook, Pinterest, Google, etc.). It will let you have access to users data when using the API (such as a profile name for Facebook). Setting such a service up will involve a few steps, as you will need to authenticate with your own account to be able to make authenticated calls in edit mode and initialize calls.You usually start by setting an 'app' with the service you want to authenticate with. This service will then provide after this is set up a Client ID and a Secret that your app will use to communicate with the service.You first need to fill the few pieces information and endpoints that are needed to get the token and the user ID. This endpoint will be used to generate the token, and retrieve the identity of a user with the service. All this information will be found in the API documentation. When you look at such documentation, we recommend looking for the section without SDK, but the web/HTTP section of it).Scope: each Oauth2 provider will require you to enter a scope, that defines the level of permissions you are asking for from your users. It can be readonly, write, send-messages... Login Dialog redirect: this the URL that will take the user to the service to authorize your app (and maybe login first to the service). It often will look like https://www.facebook.com/v2.8/dialog/oauthAccess token endpoint is the URL that is used server side to get from a temporary code to an access token. For Facebook, is is https://graph.facebook.com/v2.8/oauth/access_token.User profile endpoint is the URL you use, once authenticated, to retrieve the current user's profile. This will include an ID, and usually an email (except if the service doesn't provide the email via the API). For Facebook, such URL is https://graph.facebook.com/v2.7/me (the 'me' is a common pattern).. In some cases, if the ID isn't returned at the top level of the response to the previous URL, or has a different key than 'id', you can overwrite this in the two settings under the endpoint box.Here is what authentication for Spotify looks like:In the case of Oauth2 User-Agent Flow, you'll need to authenticate yourself with your own personal account to be able to initialize the calls. A button will prompt you to go through the flow, and will save the token once you have gone through the process. Here again, your personal identity and credentials with the service will not be shared with users that use your plugin.JSON Web TokenSome services use this more advanced protocol to handle scope and permissions. This is usually for enterprise-type services, like Box or Google Cloud. To authenticate with such a service, you will need to enter the scope, the email that is used to set up the service account and the endpoint that returns the token. You will also need to enter the private RSA key that the service is providing to set up the connection. Note that the key should be formatted as, including the '-----BEGIN RSA PRIVATE KEY-----' and '-----END RSA PRIVATE KEY-----'.-----BEGIN RSA PRIVATE KEY-----xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx................................................................xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-----END RSA PRIVATE KEY-----Shared HeadersIf you need to add some shared headers to all calls, including the authenticating ones, you can define them in the following section. Note that the value you will set here can be 'hidden' or 'secret'. Hidden settings will be hardcoded by you, as the plugin builder, and plugin users will not fill this key. Most of the time, this is used for technical headers, like a content-type, etc. The secret type will prompt your plugin users to enter a key in the Plugins Tab.Defining the call endpointOnce you have properly entered authentication information, you can start setting up your calls. You start by defining the request method, copy the endpoint that should be hit, and define the different parameters that the user will have to fill. Note that if you enter a part of the URL between [ and ], the value in between will be a parameter.Parameters can be of several types: public, hidden or secret.Public parameters will be modified by the user at the call level (that's for instance a term for query API call). Hidden parameters are for the plugin builder, and won't be exposed to the user that uses the plugin. For instance, it can be an encoding type, etc. Secret parameters are good for keys, etc. Users will enter these in the Plugins Tab of the editor.Once a call is defined you need to initialize it to make it usable in Bubble. An API call can return five different types of data.JSONThis is the most typical case of a REST API, it returns an object with key and values. If you pick this type, you will be prompted to pick a data type of each key in a popup after initializing the call. When you initialize a call, Bubble makes the actual request, and analyze the returned data.XMLSome APIs returns their response as XML. Often, this can be converted into a JSON object. If you are dealing with such an API, you can use XML and get data as a JSON object, and go through the flow described above. Note that not all XML responses can be converted as JSON. If Bubble fails to do so, an error message will be displayed.ImageSome APIs return the raw image as the response. It can be a URL that you can use in an <img> tag, for instance. In such a case, the API call in Bubble will return an image that can be used in an Image element, or as a page background.Text, NumberIf the API returns a string or a number (without structuring this as a JSON object), you should pick this option.Note that changing the types once an API is public can be non-backward compatible, so do this with caution and make sure to document this as a breaking change when you publish your plugin (see below).Date Range, Number RangeWhile these are Bubble data types, we do not support these data types for our API Connector. If you want to use the API Connector for date ranges or number ranges, a workaround is either to send dates/numbers as two separate fields or as a two-item list of dates/numbers and format them as ranges elsewhere in your app. If you want to use the API Connector to query range data from another Bubble app, we suggest using the App Connector instead.PreviousGeneral SettingsNextBuilding ElementsLast modified 1yr agoCopy linkOn this pageAuthenticationNo authenticationPrivate key in URLPrivate key in headerHTTP Basic AuthOauth2 Password FlowOauth2 Custom TokenOauth2 User-Agent FlowJSON Web TokenShared HeadersDefining the call endpointJSONXMLImageText, NumberDate Range, Number Range



